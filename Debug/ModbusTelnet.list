
ModbusTelnet.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004f88  08000110  08000110  00010110  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000002d0  08005098  08005098  00015098  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005368  08005368  000200a8  2**0
                  CONTENTS
  4 .ARM          00000000  08005368  08005368  000200a8  2**0
                  CONTENTS
  5 .preinit_array 00000000  08005368  08005368  000200a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005368  08005368  00015368  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800536c  0800536c  0001536c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000a8  20000000  08005370  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000015cc  200000a8  08005418  000200a8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20001674  08005418  00021674  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000200a8  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000200d1  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000aa09  00000000  00000000  00020114  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000281f  00000000  00000000  0002ab1d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000b38  00000000  00000000  0002d340  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000873  00000000  00000000  0002de78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00018b7c  00000000  00000000  0002e6eb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000dbea  00000000  00000000  00047267  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008b147  00000000  00000000  00054e51  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00002de8  00000000  00000000  000dff98  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000068  00000000  00000000  000e2d80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200000a8 	.word	0x200000a8
 800012c:	00000000 	.word	0x00000000
 8000130:	08005080 	.word	0x08005080

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200000ac 	.word	0x200000ac
 800014c:	08005080 	.word	0x08005080

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <vApplicationGetIdleTaskMemory>:
 8000160:	b480      	push	{r7}
 8000162:	b085      	sub	sp, #20
 8000164:	af00      	add	r7, sp, #0
 8000166:	60f8      	str	r0, [r7, #12]
 8000168:	60b9      	str	r1, [r7, #8]
 800016a:	607a      	str	r2, [r7, #4]
 800016c:	68fb      	ldr	r3, [r7, #12]
 800016e:	4a06      	ldr	r2, [pc, #24]	; (8000188 <vApplicationGetIdleTaskMemory+0x28>)
 8000170:	601a      	str	r2, [r3, #0]
 8000172:	68bb      	ldr	r3, [r7, #8]
 8000174:	4a05      	ldr	r2, [pc, #20]	; (800018c <vApplicationGetIdleTaskMemory+0x2c>)
 8000176:	601a      	str	r2, [r3, #0]
 8000178:	687b      	ldr	r3, [r7, #4]
 800017a:	2280      	movs	r2, #128	; 0x80
 800017c:	601a      	str	r2, [r3, #0]
 800017e:	bf00      	nop
 8000180:	3714      	adds	r7, #20
 8000182:	46bd      	mov	sp, r7
 8000184:	bc80      	pop	{r7}
 8000186:	4770      	bx	lr
 8000188:	200000c4 	.word	0x200000c4
 800018c:	20000164 	.word	0x20000164

08000190 <TaskFunction>:
		.dhcp = NETINFO_STATIC
};
netmode_type gNetMode = {
		NM_FORCEARP | NM_WAKEONLAN | NM_PPPOE | 128
};
void TaskFunction(void *pvParameters) {
 8000190:	b580      	push	{r7, lr}
 8000192:	b082      	sub	sp, #8
 8000194:	af00      	add	r7, sp, #0
 8000196:	6078      	str	r0, [r7, #4]
    for (;;) {
        // Task code here
    	startTelnet();
 8000198:	f000 faf8 	bl	800078c <startTelnet>
        vTaskDelay(pdMS_TO_TICKS(10));  // Delay for 1000 milliseconds
 800019c:	200a      	movs	r0, #10
 800019e:	f003 ff41 	bl	8004024 <vTaskDelay>
    	startTelnet();
 80001a2:	e7f9      	b.n	8000198 <TaskFunction+0x8>

080001a4 <Task2Function>:
    }
}
void Task2Function(void *pvParameters) {
 80001a4:	b580      	push	{r7, lr}
 80001a6:	b084      	sub	sp, #16
 80001a8:	af00      	add	r7, sp, #0
 80001aa:	6078      	str	r0, [r7, #4]
    BaseType_t networkConfigured = pdFALSE;  // Variable to track network configuration status
 80001ac:	2300      	movs	r3, #0
 80001ae:	60fb      	str	r3, [r7, #12]

    for (;;) {
        // Task 2 code here
        if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_11) == GPIO_PIN_SET && networkConfigured == pdFALSE) {
 80001b0:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80001b4:	4817      	ldr	r0, [pc, #92]	; (8000214 <Task2Function+0x70>)
 80001b6:	f002 fb11 	bl	80027dc <HAL_GPIO_ReadPin>
 80001ba:	4603      	mov	r3, r0
 80001bc:	2b01      	cmp	r3, #1
 80001be:	d113      	bne.n	80001e8 <Task2Function+0x44>
 80001c0:	68fb      	ldr	r3, [r7, #12]
 80001c2:	2b00      	cmp	r3, #0
 80001c4:	d110      	bne.n	80001e8 <Task2Function+0x44>
            // Set network address and network mode to default only if not already configured
            ctlnetwork(CN_SET_NETINFO, (void*) &gNetInfoDefault);
 80001c6:	4914      	ldr	r1, [pc, #80]	; (8000218 <Task2Function+0x74>)
 80001c8:	2000      	movs	r0, #0
 80001ca:	f001 f963 	bl	8001494 <ctlnetwork>
            ctlnetwork(CN_SET_NETMODE, (void*) &gNetMode);
 80001ce:	4913      	ldr	r1, [pc, #76]	; (800021c <Task2Function+0x78>)
 80001d0:	2002      	movs	r0, #2
 80001d2:	f001 f95f 	bl	8001494 <ctlnetwork>
            networkConfigured = pdTRUE;  // Set the flag to indicate network configuration is done
 80001d6:	2301      	movs	r3, #1
 80001d8:	60fb      	str	r3, [r7, #12]
            HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
 80001da:	2201      	movs	r2, #1
 80001dc:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80001e0:	480c      	ldr	r0, [pc, #48]	; (8000214 <Task2Function+0x70>)
 80001e2:	f002 fb12 	bl	800280a <HAL_GPIO_WritePin>
 80001e6:	e00f      	b.n	8000208 <Task2Function+0x64>
        } else if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_11) == GPIO_PIN_RESET) {
 80001e8:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80001ec:	4809      	ldr	r0, [pc, #36]	; (8000214 <Task2Function+0x70>)
 80001ee:	f002 faf5 	bl	80027dc <HAL_GPIO_ReadPin>
 80001f2:	4603      	mov	r3, r0
 80001f4:	2b00      	cmp	r3, #0
 80001f6:	d107      	bne.n	8000208 <Task2Function+0x64>
            networkConfigured = pdFALSE;  // Reset the flag when the pin goes low
 80001f8:	2300      	movs	r3, #0
 80001fa:	60fb      	str	r3, [r7, #12]
            HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 80001fc:	2200      	movs	r2, #0
 80001fe:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000202:	4804      	ldr	r0, [pc, #16]	; (8000214 <Task2Function+0x70>)
 8000204:	f002 fb01 	bl	800280a <HAL_GPIO_WritePin>
        }

        vTaskDelay(pdMS_TO_TICKS(3000));  // Delay for 3000 milliseconds
 8000208:	f640 30b8 	movw	r0, #3000	; 0xbb8
 800020c:	f003 ff0a 	bl	8004024 <vTaskDelay>
        if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_11) == GPIO_PIN_SET && networkConfigured == pdFALSE) {
 8000210:	e7ce      	b.n	80001b0 <Task2Function+0xc>
 8000212:	bf00      	nop
 8000214:	40010c00 	.word	0x40010c00
 8000218:	20000000 	.word	0x20000000
 800021c:	20000017 	.word	0x20000017

08000220 <main>:
    }
}
int main(void)
{
 8000220:	b580      	push	{r7, lr}
 8000222:	b082      	sub	sp, #8
 8000224:	af02      	add	r7, sp, #8

  HAL_Init();
 8000226:	f001 ffeb 	bl	8002200 <HAL_Init>

  SystemClock_Config();
 800022a:	f000 f825 	bl	8000278 <SystemClock_Config>

  MX_GPIO_Init();
 800022e:	f000 f89f 	bl	8000370 <MX_GPIO_Init>
  MX_SPI1_Init();
 8000232:	f000 f867 	bl	8000304 <MX_SPI1_Init>

  /* Start scheduler */
  W5500Init();
 8000236:	f000 ff2b 	bl	8001090 <W5500Init>
//	ctlnetwork(CN_SET_NETINFO, (void*) &gNetInfoDefault);
//	ctlnetwork(CN_SET_NETMODE, (void*) &gNetMode);

  //put the task in queue
  xTaskCreate(TaskFunction, "Task1", configMINIMAL_STACK_SIZE, NULL, tskIDLE_PRIORITY + 1, NULL);
 800023a:	2300      	movs	r3, #0
 800023c:	9301      	str	r3, [sp, #4]
 800023e:	2301      	movs	r3, #1
 8000240:	9300      	str	r3, [sp, #0]
 8000242:	2300      	movs	r3, #0
 8000244:	2280      	movs	r2, #128	; 0x80
 8000246:	4908      	ldr	r1, [pc, #32]	; (8000268 <main+0x48>)
 8000248:	4808      	ldr	r0, [pc, #32]	; (800026c <main+0x4c>)
 800024a:	f003 fda6 	bl	8003d9a <xTaskCreate>
  xTaskCreate(Task2Function, "Task2", configMINIMAL_STACK_SIZE, NULL, tskIDLE_PRIORITY + 2, NULL);
 800024e:	2300      	movs	r3, #0
 8000250:	9301      	str	r3, [sp, #4]
 8000252:	2302      	movs	r3, #2
 8000254:	9300      	str	r3, [sp, #0]
 8000256:	2300      	movs	r3, #0
 8000258:	2280      	movs	r2, #128	; 0x80
 800025a:	4905      	ldr	r1, [pc, #20]	; (8000270 <main+0x50>)
 800025c:	4805      	ldr	r0, [pc, #20]	; (8000274 <main+0x54>)
 800025e:	f003 fd9c 	bl	8003d9a <xTaskCreate>

  vTaskStartScheduler();
 8000262:	f003 ff13 	bl	800408c <vTaskStartScheduler>
  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000266:	e7fe      	b.n	8000266 <main+0x46>
 8000268:	08005098 	.word	0x08005098
 800026c:	08000191 	.word	0x08000191
 8000270:	080050a0 	.word	0x080050a0
 8000274:	080001a5 	.word	0x080001a5

08000278 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000278:	b580      	push	{r7, lr}
 800027a:	b090      	sub	sp, #64	; 0x40
 800027c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800027e:	f107 0318 	add.w	r3, r7, #24
 8000282:	2228      	movs	r2, #40	; 0x28
 8000284:	2100      	movs	r1, #0
 8000286:	4618      	mov	r0, r3
 8000288:	f004 fe22 	bl	8004ed0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800028c:	1d3b      	adds	r3, r7, #4
 800028e:	2200      	movs	r2, #0
 8000290:	601a      	str	r2, [r3, #0]
 8000292:	605a      	str	r2, [r3, #4]
 8000294:	609a      	str	r2, [r3, #8]
 8000296:	60da      	str	r2, [r3, #12]
 8000298:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800029a:	2301      	movs	r3, #1
 800029c:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800029e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80002a2:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80002a4:	2300      	movs	r3, #0
 80002a6:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80002a8:	2301      	movs	r3, #1
 80002aa:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80002ac:	2302      	movs	r3, #2
 80002ae:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80002b0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80002b4:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL3;
 80002b6:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 80002ba:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80002bc:	f107 0318 	add.w	r3, r7, #24
 80002c0:	4618      	mov	r0, r3
 80002c2:	f002 fad3 	bl	800286c <HAL_RCC_OscConfig>
 80002c6:	4603      	mov	r3, r0
 80002c8:	2b00      	cmp	r3, #0
 80002ca:	d001      	beq.n	80002d0 <SystemClock_Config+0x58>
  {
    Error_Handler();
 80002cc:	f000 f8e0 	bl	8000490 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80002d0:	230f      	movs	r3, #15
 80002d2:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80002d4:	2302      	movs	r3, #2
 80002d6:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80002d8:	2300      	movs	r3, #0
 80002da:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80002dc:	2300      	movs	r3, #0
 80002de:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80002e0:	2300      	movs	r3, #0
 80002e2:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80002e4:	1d3b      	adds	r3, r7, #4
 80002e6:	2100      	movs	r1, #0
 80002e8:	4618      	mov	r0, r3
 80002ea:	f002 fd41 	bl	8002d70 <HAL_RCC_ClockConfig>
 80002ee:	4603      	mov	r3, r0
 80002f0:	2b00      	cmp	r3, #0
 80002f2:	d001      	beq.n	80002f8 <SystemClock_Config+0x80>
  {
    Error_Handler();
 80002f4:	f000 f8cc 	bl	8000490 <Error_Handler>
  }

  /** Enables the Clock Security System
  */
  HAL_RCC_EnableCSS();
 80002f8:	f002 fe24 	bl	8002f44 <HAL_RCC_EnableCSS>
}
 80002fc:	bf00      	nop
 80002fe:	3740      	adds	r7, #64	; 0x40
 8000300:	46bd      	mov	sp, r7
 8000302:	bd80      	pop	{r7, pc}

08000304 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8000304:	b580      	push	{r7, lr}
 8000306:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8000308:	4b17      	ldr	r3, [pc, #92]	; (8000368 <MX_SPI1_Init+0x64>)
 800030a:	4a18      	ldr	r2, [pc, #96]	; (800036c <MX_SPI1_Init+0x68>)
 800030c:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 800030e:	4b16      	ldr	r3, [pc, #88]	; (8000368 <MX_SPI1_Init+0x64>)
 8000310:	f44f 7282 	mov.w	r2, #260	; 0x104
 8000314:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8000316:	4b14      	ldr	r3, [pc, #80]	; (8000368 <MX_SPI1_Init+0x64>)
 8000318:	2200      	movs	r2, #0
 800031a:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 800031c:	4b12      	ldr	r3, [pc, #72]	; (8000368 <MX_SPI1_Init+0x64>)
 800031e:	2200      	movs	r2, #0
 8000320:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_HIGH;
 8000322:	4b11      	ldr	r3, [pc, #68]	; (8000368 <MX_SPI1_Init+0x64>)
 8000324:	2202      	movs	r2, #2
 8000326:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_2EDGE;
 8000328:	4b0f      	ldr	r3, [pc, #60]	; (8000368 <MX_SPI1_Init+0x64>)
 800032a:	2201      	movs	r2, #1
 800032c:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 800032e:	4b0e      	ldr	r3, [pc, #56]	; (8000368 <MX_SPI1_Init+0x64>)
 8000330:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000334:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 8000336:	4b0c      	ldr	r3, [pc, #48]	; (8000368 <MX_SPI1_Init+0x64>)
 8000338:	2220      	movs	r2, #32
 800033a:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800033c:	4b0a      	ldr	r3, [pc, #40]	; (8000368 <MX_SPI1_Init+0x64>)
 800033e:	2200      	movs	r2, #0
 8000340:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8000342:	4b09      	ldr	r3, [pc, #36]	; (8000368 <MX_SPI1_Init+0x64>)
 8000344:	2200      	movs	r2, #0
 8000346:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000348:	4b07      	ldr	r3, [pc, #28]	; (8000368 <MX_SPI1_Init+0x64>)
 800034a:	2200      	movs	r2, #0
 800034c:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 800034e:	4b06      	ldr	r3, [pc, #24]	; (8000368 <MX_SPI1_Init+0x64>)
 8000350:	220a      	movs	r2, #10
 8000352:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8000354:	4804      	ldr	r0, [pc, #16]	; (8000368 <MX_SPI1_Init+0x64>)
 8000356:	f002 fe8d 	bl	8003074 <HAL_SPI_Init>
 800035a:	4603      	mov	r3, r0
 800035c:	2b00      	cmp	r3, #0
 800035e:	d001      	beq.n	8000364 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8000360:	f000 f896 	bl	8000490 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8000364:	bf00      	nop
 8000366:	bd80      	pop	{r7, pc}
 8000368:	20000364 	.word	0x20000364
 800036c:	40013000 	.word	0x40013000

08000370 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000370:	b580      	push	{r7, lr}
 8000372:	b088      	sub	sp, #32
 8000374:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000376:	f107 0310 	add.w	r3, r7, #16
 800037a:	2200      	movs	r2, #0
 800037c:	601a      	str	r2, [r3, #0]
 800037e:	605a      	str	r2, [r3, #4]
 8000380:	609a      	str	r2, [r3, #8]
 8000382:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000384:	4b3e      	ldr	r3, [pc, #248]	; (8000480 <MX_GPIO_Init+0x110>)
 8000386:	699b      	ldr	r3, [r3, #24]
 8000388:	4a3d      	ldr	r2, [pc, #244]	; (8000480 <MX_GPIO_Init+0x110>)
 800038a:	f043 0310 	orr.w	r3, r3, #16
 800038e:	6193      	str	r3, [r2, #24]
 8000390:	4b3b      	ldr	r3, [pc, #236]	; (8000480 <MX_GPIO_Init+0x110>)
 8000392:	699b      	ldr	r3, [r3, #24]
 8000394:	f003 0310 	and.w	r3, r3, #16
 8000398:	60fb      	str	r3, [r7, #12]
 800039a:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800039c:	4b38      	ldr	r3, [pc, #224]	; (8000480 <MX_GPIO_Init+0x110>)
 800039e:	699b      	ldr	r3, [r3, #24]
 80003a0:	4a37      	ldr	r2, [pc, #220]	; (8000480 <MX_GPIO_Init+0x110>)
 80003a2:	f043 0320 	orr.w	r3, r3, #32
 80003a6:	6193      	str	r3, [r2, #24]
 80003a8:	4b35      	ldr	r3, [pc, #212]	; (8000480 <MX_GPIO_Init+0x110>)
 80003aa:	699b      	ldr	r3, [r3, #24]
 80003ac:	f003 0320 	and.w	r3, r3, #32
 80003b0:	60bb      	str	r3, [r7, #8]
 80003b2:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80003b4:	4b32      	ldr	r3, [pc, #200]	; (8000480 <MX_GPIO_Init+0x110>)
 80003b6:	699b      	ldr	r3, [r3, #24]
 80003b8:	4a31      	ldr	r2, [pc, #196]	; (8000480 <MX_GPIO_Init+0x110>)
 80003ba:	f043 0304 	orr.w	r3, r3, #4
 80003be:	6193      	str	r3, [r2, #24]
 80003c0:	4b2f      	ldr	r3, [pc, #188]	; (8000480 <MX_GPIO_Init+0x110>)
 80003c2:	699b      	ldr	r3, [r3, #24]
 80003c4:	f003 0304 	and.w	r3, r3, #4
 80003c8:	607b      	str	r3, [r7, #4]
 80003ca:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80003cc:	4b2c      	ldr	r3, [pc, #176]	; (8000480 <MX_GPIO_Init+0x110>)
 80003ce:	699b      	ldr	r3, [r3, #24]
 80003d0:	4a2b      	ldr	r2, [pc, #172]	; (8000480 <MX_GPIO_Init+0x110>)
 80003d2:	f043 0308 	orr.w	r3, r3, #8
 80003d6:	6193      	str	r3, [r2, #24]
 80003d8:	4b29      	ldr	r3, [pc, #164]	; (8000480 <MX_GPIO_Init+0x110>)
 80003da:	699b      	ldr	r3, [r3, #24]
 80003dc:	f003 0308 	and.w	r3, r3, #8
 80003e0:	603b      	str	r3, [r7, #0]
 80003e2:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 80003e4:	2201      	movs	r2, #1
 80003e6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80003ea:	4826      	ldr	r0, [pc, #152]	; (8000484 <MX_GPIO_Init+0x114>)
 80003ec:	f002 fa0d 	bl	800280a <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 80003f0:	2200      	movs	r2, #0
 80003f2:	2103      	movs	r1, #3
 80003f4:	4824      	ldr	r0, [pc, #144]	; (8000488 <MX_GPIO_Init+0x118>)
 80003f6:	f002 fa08 	bl	800280a <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 80003fa:	2200      	movs	r2, #0
 80003fc:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000400:	4822      	ldr	r0, [pc, #136]	; (800048c <MX_GPIO_Init+0x11c>)
 8000402:	f002 fa02 	bl	800280a <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 8000406:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800040a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800040c:	2301      	movs	r3, #1
 800040e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000410:	2300      	movs	r3, #0
 8000412:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000414:	2302      	movs	r3, #2
 8000416:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000418:	f107 0310 	add.w	r3, r7, #16
 800041c:	4619      	mov	r1, r3
 800041e:	4819      	ldr	r0, [pc, #100]	; (8000484 <MX_GPIO_Init+0x114>)
 8000420:	f002 f858 	bl	80024d4 <HAL_GPIO_Init>

  /*Configure GPIO pins : PA0 PA1 */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8000424:	2303      	movs	r3, #3
 8000426:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000428:	2301      	movs	r3, #1
 800042a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800042c:	2300      	movs	r3, #0
 800042e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000430:	2302      	movs	r3, #2
 8000432:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000434:	f107 0310 	add.w	r3, r7, #16
 8000438:	4619      	mov	r1, r3
 800043a:	4813      	ldr	r0, [pc, #76]	; (8000488 <MX_GPIO_Init+0x118>)
 800043c:	f002 f84a 	bl	80024d4 <HAL_GPIO_Init>

  /*Configure GPIO pin : PB10 */
  GPIO_InitStruct.Pin = GPIO_PIN_10;
 8000440:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000444:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000446:	2301      	movs	r3, #1
 8000448:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800044a:	2300      	movs	r3, #0
 800044c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800044e:	2302      	movs	r3, #2
 8000450:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000452:	f107 0310 	add.w	r3, r7, #16
 8000456:	4619      	mov	r1, r3
 8000458:	480c      	ldr	r0, [pc, #48]	; (800048c <MX_GPIO_Init+0x11c>)
 800045a:	f002 f83b 	bl	80024d4 <HAL_GPIO_Init>

  /*Configure GPIO pin : PB11 */
  GPIO_InitStruct.Pin = GPIO_PIN_11;
 800045e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000462:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000464:	2300      	movs	r3, #0
 8000466:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000468:	2300      	movs	r3, #0
 800046a:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800046c:	f107 0310 	add.w	r3, r7, #16
 8000470:	4619      	mov	r1, r3
 8000472:	4806      	ldr	r0, [pc, #24]	; (800048c <MX_GPIO_Init+0x11c>)
 8000474:	f002 f82e 	bl	80024d4 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000478:	bf00      	nop
 800047a:	3720      	adds	r7, #32
 800047c:	46bd      	mov	sp, r7
 800047e:	bd80      	pop	{r7, pc}
 8000480:	40021000 	.word	0x40021000
 8000484:	40011000 	.word	0x40011000
 8000488:	40010800 	.word	0x40010800
 800048c:	40010c00 	.word	0x40010c00

08000490 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000490:	b480      	push	{r7}
 8000492:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000494:	b672      	cpsid	i
}
 8000496:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000498:	e7fe      	b.n	8000498 <Error_Handler+0x8>
	...

0800049c <HAL_MspInit>:
 800049c:	b580      	push	{r7, lr}
 800049e:	b084      	sub	sp, #16
 80004a0:	af00      	add	r7, sp, #0
 80004a2:	4b18      	ldr	r3, [pc, #96]	; (8000504 <HAL_MspInit+0x68>)
 80004a4:	699b      	ldr	r3, [r3, #24]
 80004a6:	4a17      	ldr	r2, [pc, #92]	; (8000504 <HAL_MspInit+0x68>)
 80004a8:	f043 0301 	orr.w	r3, r3, #1
 80004ac:	6193      	str	r3, [r2, #24]
 80004ae:	4b15      	ldr	r3, [pc, #84]	; (8000504 <HAL_MspInit+0x68>)
 80004b0:	699b      	ldr	r3, [r3, #24]
 80004b2:	f003 0301 	and.w	r3, r3, #1
 80004b6:	60bb      	str	r3, [r7, #8]
 80004b8:	68bb      	ldr	r3, [r7, #8]
 80004ba:	4b12      	ldr	r3, [pc, #72]	; (8000504 <HAL_MspInit+0x68>)
 80004bc:	69db      	ldr	r3, [r3, #28]
 80004be:	4a11      	ldr	r2, [pc, #68]	; (8000504 <HAL_MspInit+0x68>)
 80004c0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80004c4:	61d3      	str	r3, [r2, #28]
 80004c6:	4b0f      	ldr	r3, [pc, #60]	; (8000504 <HAL_MspInit+0x68>)
 80004c8:	69db      	ldr	r3, [r3, #28]
 80004ca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80004ce:	607b      	str	r3, [r7, #4]
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	2200      	movs	r2, #0
 80004d4:	210f      	movs	r1, #15
 80004d6:	f06f 0001 	mvn.w	r0, #1
 80004da:	f001 ffd2 	bl	8002482 <HAL_NVIC_SetPriority>
 80004de:	4b0a      	ldr	r3, [pc, #40]	; (8000508 <HAL_MspInit+0x6c>)
 80004e0:	685b      	ldr	r3, [r3, #4]
 80004e2:	60fb      	str	r3, [r7, #12]
 80004e4:	68fb      	ldr	r3, [r7, #12]
 80004e6:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80004ea:	60fb      	str	r3, [r7, #12]
 80004ec:	68fb      	ldr	r3, [r7, #12]
 80004ee:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80004f2:	60fb      	str	r3, [r7, #12]
 80004f4:	4a04      	ldr	r2, [pc, #16]	; (8000508 <HAL_MspInit+0x6c>)
 80004f6:	68fb      	ldr	r3, [r7, #12]
 80004f8:	6053      	str	r3, [r2, #4]
 80004fa:	bf00      	nop
 80004fc:	3710      	adds	r7, #16
 80004fe:	46bd      	mov	sp, r7
 8000500:	bd80      	pop	{r7, pc}
 8000502:	bf00      	nop
 8000504:	40021000 	.word	0x40021000
 8000508:	40010000 	.word	0x40010000

0800050c <HAL_SPI_MspInit>:
 800050c:	b580      	push	{r7, lr}
 800050e:	b088      	sub	sp, #32
 8000510:	af00      	add	r7, sp, #0
 8000512:	6078      	str	r0, [r7, #4]
 8000514:	f107 0310 	add.w	r3, r7, #16
 8000518:	2200      	movs	r2, #0
 800051a:	601a      	str	r2, [r3, #0]
 800051c:	605a      	str	r2, [r3, #4]
 800051e:	609a      	str	r2, [r3, #8]
 8000520:	60da      	str	r2, [r3, #12]
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	681b      	ldr	r3, [r3, #0]
 8000526:	4a1b      	ldr	r2, [pc, #108]	; (8000594 <HAL_SPI_MspInit+0x88>)
 8000528:	4293      	cmp	r3, r2
 800052a:	d12f      	bne.n	800058c <HAL_SPI_MspInit+0x80>
 800052c:	4b1a      	ldr	r3, [pc, #104]	; (8000598 <HAL_SPI_MspInit+0x8c>)
 800052e:	699b      	ldr	r3, [r3, #24]
 8000530:	4a19      	ldr	r2, [pc, #100]	; (8000598 <HAL_SPI_MspInit+0x8c>)
 8000532:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000536:	6193      	str	r3, [r2, #24]
 8000538:	4b17      	ldr	r3, [pc, #92]	; (8000598 <HAL_SPI_MspInit+0x8c>)
 800053a:	699b      	ldr	r3, [r3, #24]
 800053c:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8000540:	60fb      	str	r3, [r7, #12]
 8000542:	68fb      	ldr	r3, [r7, #12]
 8000544:	4b14      	ldr	r3, [pc, #80]	; (8000598 <HAL_SPI_MspInit+0x8c>)
 8000546:	699b      	ldr	r3, [r3, #24]
 8000548:	4a13      	ldr	r2, [pc, #76]	; (8000598 <HAL_SPI_MspInit+0x8c>)
 800054a:	f043 0304 	orr.w	r3, r3, #4
 800054e:	6193      	str	r3, [r2, #24]
 8000550:	4b11      	ldr	r3, [pc, #68]	; (8000598 <HAL_SPI_MspInit+0x8c>)
 8000552:	699b      	ldr	r3, [r3, #24]
 8000554:	f003 0304 	and.w	r3, r3, #4
 8000558:	60bb      	str	r3, [r7, #8]
 800055a:	68bb      	ldr	r3, [r7, #8]
 800055c:	23a0      	movs	r3, #160	; 0xa0
 800055e:	613b      	str	r3, [r7, #16]
 8000560:	2302      	movs	r3, #2
 8000562:	617b      	str	r3, [r7, #20]
 8000564:	2303      	movs	r3, #3
 8000566:	61fb      	str	r3, [r7, #28]
 8000568:	f107 0310 	add.w	r3, r7, #16
 800056c:	4619      	mov	r1, r3
 800056e:	480b      	ldr	r0, [pc, #44]	; (800059c <HAL_SPI_MspInit+0x90>)
 8000570:	f001 ffb0 	bl	80024d4 <HAL_GPIO_Init>
 8000574:	2340      	movs	r3, #64	; 0x40
 8000576:	613b      	str	r3, [r7, #16]
 8000578:	2300      	movs	r3, #0
 800057a:	617b      	str	r3, [r7, #20]
 800057c:	2300      	movs	r3, #0
 800057e:	61bb      	str	r3, [r7, #24]
 8000580:	f107 0310 	add.w	r3, r7, #16
 8000584:	4619      	mov	r1, r3
 8000586:	4805      	ldr	r0, [pc, #20]	; (800059c <HAL_SPI_MspInit+0x90>)
 8000588:	f001 ffa4 	bl	80024d4 <HAL_GPIO_Init>
 800058c:	bf00      	nop
 800058e:	3720      	adds	r7, #32
 8000590:	46bd      	mov	sp, r7
 8000592:	bd80      	pop	{r7, pc}
 8000594:	40013000 	.word	0x40013000
 8000598:	40021000 	.word	0x40021000
 800059c:	40010800 	.word	0x40010800

080005a0 <NMI_Handler>:
 80005a0:	b580      	push	{r7, lr}
 80005a2:	af00      	add	r7, sp, #0
 80005a4:	f002 fd2e 	bl	8003004 <HAL_RCC_NMI_IRQHandler>
 80005a8:	e7fe      	b.n	80005a8 <NMI_Handler+0x8>

080005aa <HardFault_Handler>:
 80005aa:	b480      	push	{r7}
 80005ac:	af00      	add	r7, sp, #0
 80005ae:	e7fe      	b.n	80005ae <HardFault_Handler+0x4>

080005b0 <MemManage_Handler>:
 80005b0:	b480      	push	{r7}
 80005b2:	af00      	add	r7, sp, #0
 80005b4:	e7fe      	b.n	80005b4 <MemManage_Handler+0x4>

080005b6 <BusFault_Handler>:
 80005b6:	b480      	push	{r7}
 80005b8:	af00      	add	r7, sp, #0
 80005ba:	e7fe      	b.n	80005ba <BusFault_Handler+0x4>

080005bc <UsageFault_Handler>:
 80005bc:	b480      	push	{r7}
 80005be:	af00      	add	r7, sp, #0
 80005c0:	e7fe      	b.n	80005c0 <UsageFault_Handler+0x4>

080005c2 <DebugMon_Handler>:
 80005c2:	b480      	push	{r7}
 80005c4:	af00      	add	r7, sp, #0
 80005c6:	bf00      	nop
 80005c8:	46bd      	mov	sp, r7
 80005ca:	bc80      	pop	{r7}
 80005cc:	4770      	bx	lr

080005ce <SysTick_Handler>:
 80005ce:	b580      	push	{r7, lr}
 80005d0:	af00      	add	r7, sp, #0
 80005d2:	f001 fe5b 	bl	800228c <HAL_IncTick>
 80005d6:	f004 f86b 	bl	80046b0 <xTaskGetSchedulerState>
 80005da:	4603      	mov	r3, r0
 80005dc:	2b01      	cmp	r3, #1
 80005de:	d001      	beq.n	80005e4 <SysTick_Handler+0x16>
 80005e0:	f004 fa5a 	bl	8004a98 <xPortSysTickHandler>
 80005e4:	bf00      	nop
 80005e6:	bd80      	pop	{r7, pc}

080005e8 <SystemInit>:
 80005e8:	b480      	push	{r7}
 80005ea:	af00      	add	r7, sp, #0
 80005ec:	bf00      	nop
 80005ee:	46bd      	mov	sp, r7
 80005f0:	bc80      	pop	{r7}
 80005f2:	4770      	bx	lr

080005f4 <writeMessage>:

uint8_t buffer[MAX_BUFFER_SIZE];  // Assuming buffer is declared globally or passed as an argument
uint8_t telnetSocket = 0;
uint16_t telnetPort = 23;

void writeMessage(const char* message) {
 80005f4:	b590      	push	{r4, r7, lr}
 80005f6:	b083      	sub	sp, #12
 80005f8:	af00      	add	r7, sp, #0
 80005fa:	6078      	str	r0, [r7, #4]
    send(telnetSocket, (void*)message, strlen(message));
 80005fc:	4b07      	ldr	r3, [pc, #28]	; (800061c <writeMessage+0x28>)
 80005fe:	781c      	ldrb	r4, [r3, #0]
 8000600:	6878      	ldr	r0, [r7, #4]
 8000602:	f7ff fda5 	bl	8000150 <strlen>
 8000606:	4603      	mov	r3, r0
 8000608:	b29b      	uxth	r3, r3
 800060a:	461a      	mov	r2, r3
 800060c:	6879      	ldr	r1, [r7, #4]
 800060e:	4620      	mov	r0, r4
 8000610:	f000 fb1a 	bl	8000c48 <send>
}
 8000614:	bf00      	nop
 8000616:	370c      	adds	r7, #12
 8000618:	46bd      	mov	sp, r7
 800061a:	bd90      	pop	{r4, r7, pc}
 800061c:	200007bc 	.word	0x200007bc

08000620 <readMessage>:

uint8_t* readMessage() {
 8000620:	b580      	push	{r7, lr}
 8000622:	b084      	sub	sp, #16
 8000624:	af00      	add	r7, sp, #0
    int receivedSize = 0;
 8000626:	2300      	movs	r3, #0
 8000628:	60bb      	str	r3, [r7, #8]
    int indexChar = 0;
 800062a:	2300      	movs	r3, #0
 800062c:	60fb      	str	r3, [r7, #12]
    uint8_t receivedChar;

    while (1) {
        receivedSize = recv(telnetSocket, &receivedChar, 1);
 800062e:	4b24      	ldr	r3, [pc, #144]	; (80006c0 <readMessage+0xa0>)
 8000630:	781b      	ldrb	r3, [r3, #0]
 8000632:	1df9      	adds	r1, r7, #7
 8000634:	2201      	movs	r2, #1
 8000636:	4618      	mov	r0, r3
 8000638:	f000 fc00 	bl	8000e3c <recv>
 800063c:	60b8      	str	r0, [r7, #8]

        // Check for errors or connection closure
        if (receivedSize <= 0) {
 800063e:	68bb      	ldr	r3, [r7, #8]
 8000640:	2b00      	cmp	r3, #0
 8000642:	dc07      	bgt.n	8000654 <readMessage+0x34>
            // Handle error or connection closure
        	close(telnetSocket);//close the socket and restart the telnet session
 8000644:	4b1e      	ldr	r3, [pc, #120]	; (80006c0 <readMessage+0xa0>)
 8000646:	781b      	ldrb	r3, [r3, #0]
 8000648:	4618      	mov	r0, r3
 800064a:	f000 fa35 	bl	8000ab8 <close>
            startTelnet();
 800064e:	f000 f89d 	bl	800078c <startTelnet>
            break;
 8000652:	e018      	b.n	8000686 <readMessage+0x66>
        }

        // Check if the received character is a newline
        if (receivedChar == '\n') {
 8000654:	79fb      	ldrb	r3, [r7, #7]
 8000656:	2b0a      	cmp	r3, #10
 8000658:	d105      	bne.n	8000666 <readMessage+0x46>
            // If yes, terminate the string and break out of the loop
            buffer[indexChar] = '\0';
 800065a:	4a1a      	ldr	r2, [pc, #104]	; (80006c4 <readMessage+0xa4>)
 800065c:	68fb      	ldr	r3, [r7, #12]
 800065e:	4413      	add	r3, r2
 8000660:	2200      	movs	r2, #0
 8000662:	701a      	strb	r2, [r3, #0]
            break;
 8000664:	e00f      	b.n	8000686 <readMessage+0x66>
        }

        // Otherwise, add the character to the buffer
        buffer[indexChar] = receivedChar;
 8000666:	79f9      	ldrb	r1, [r7, #7]
 8000668:	4a16      	ldr	r2, [pc, #88]	; (80006c4 <readMessage+0xa4>)
 800066a:	68fb      	ldr	r3, [r7, #12]
 800066c:	4413      	add	r3, r2
 800066e:	460a      	mov	r2, r1
 8000670:	701a      	strb	r2, [r3, #0]
        // Increment the receivedSize counter
        indexChar++;
 8000672:	68fb      	ldr	r3, [r7, #12]
 8000674:	3301      	adds	r3, #1
 8000676:	60fb      	str	r3, [r7, #12]

        // Check if the buffer is full (adjust the size accordingly)
        if (indexChar >= MAX_BUFFER_SIZE - 1) {
 8000678:	68fb      	ldr	r3, [r7, #12]
 800067a:	f240 32fe 	movw	r2, #1022	; 0x3fe
 800067e:	4293      	cmp	r3, r2
 8000680:	dc00      	bgt.n	8000684 <readMessage+0x64>
        receivedSize = recv(telnetSocket, &receivedChar, 1);
 8000682:	e7d4      	b.n	800062e <readMessage+0xe>
            // Handle buffer full condition
            break;
 8000684:	bf00      	nop
        }
    }

    // Add null terminator to make it a valid C string
    buffer[indexChar] = '\0';
 8000686:	4a0f      	ldr	r2, [pc, #60]	; (80006c4 <readMessage+0xa4>)
 8000688:	68fb      	ldr	r3, [r7, #12]
 800068a:	4413      	add	r3, r2
 800068c:	2200      	movs	r2, #0
 800068e:	701a      	strb	r2, [r3, #0]

    // Check if the socket is still in the established state
    if (getSn_SR(telnetSocket) != SOCK_ESTABLISHED) {
 8000690:	4b0b      	ldr	r3, [pc, #44]	; (80006c0 <readMessage+0xa0>)
 8000692:	781b      	ldrb	r3, [r3, #0]
 8000694:	009b      	lsls	r3, r3, #2
 8000696:	3301      	adds	r3, #1
 8000698:	00db      	lsls	r3, r3, #3
 800069a:	f503 7340 	add.w	r3, r3, #768	; 0x300
 800069e:	4618      	mov	r0, r3
 80006a0:	f001 fae0 	bl	8001c64 <WIZCHIP_READ>
 80006a4:	4603      	mov	r3, r0
 80006a6:	2b17      	cmp	r3, #23
 80006a8:	d004      	beq.n	80006b4 <readMessage+0x94>
        // Optionally, close the socket here
        close(telnetSocket);
 80006aa:	4b05      	ldr	r3, [pc, #20]	; (80006c0 <readMessage+0xa0>)
 80006ac:	781b      	ldrb	r3, [r3, #0]
 80006ae:	4618      	mov	r0, r3
 80006b0:	f000 fa02 	bl	8000ab8 <close>
    }

    // Return the buffer (or you might return something else based on your needs)
    return buffer;
 80006b4:	4b03      	ldr	r3, [pc, #12]	; (80006c4 <readMessage+0xa4>)
}
 80006b6:	4618      	mov	r0, r3
 80006b8:	3710      	adds	r7, #16
 80006ba:	46bd      	mov	sp, r7
 80006bc:	bd80      	pop	{r7, pc}
 80006be:	bf00      	nop
 80006c0:	200007bc 	.word	0x200007bc
 80006c4:	200003bc 	.word	0x200003bc

080006c8 <clearScreen>:
void clearScreen(){
 80006c8:	b580      	push	{r7, lr}
 80006ca:	af00      	add	r7, sp, #0
	writeMessage("\033[2J");
 80006cc:	4802      	ldr	r0, [pc, #8]	; (80006d8 <clearScreen+0x10>)
 80006ce:	f7ff ff91 	bl	80005f4 <writeMessage>
}
 80006d2:	bf00      	nop
 80006d4:	bd80      	pop	{r7, pc}
 80006d6:	bf00      	nop
 80006d8:	080050a8 	.word	0x080050a8

080006dc <invalidInput>:
void invalidInput(){
 80006dc:	b580      	push	{r7, lr}
 80006de:	af00      	add	r7, sp, #0
	clearScreen();
 80006e0:	f7ff fff2 	bl	80006c8 <clearScreen>
	writeMessage("\033[31mInvalid Input\r\n\033[37m");
 80006e4:	4802      	ldr	r0, [pc, #8]	; (80006f0 <invalidInput+0x14>)
 80006e6:	f7ff ff85 	bl	80005f4 <writeMessage>
}
 80006ea:	bf00      	nop
 80006ec:	bd80      	pop	{r7, pc}
 80006ee:	bf00      	nop
 80006f0:	080050b0 	.word	0x080050b0

080006f4 <toggleLeds>:

void toggleLeds(uint8_t* clientMessage) {
 80006f4:	b580      	push	{r7, lr}
 80006f6:	b082      	sub	sp, #8
 80006f8:	af00      	add	r7, sp, #0
 80006fa:	6078      	str	r0, [r7, #4]
    if (clientMessage[0] == 'l'&&clientMessage[1]=='1') {
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	781b      	ldrb	r3, [r3, #0]
 8000700:	2b6c      	cmp	r3, #108	; 0x6c
 8000702:	d10a      	bne.n	800071a <toggleLeds+0x26>
 8000704:	687b      	ldr	r3, [r7, #4]
 8000706:	3301      	adds	r3, #1
 8000708:	781b      	ldrb	r3, [r3, #0]
 800070a:	2b31      	cmp	r3, #49	; 0x31
 800070c:	d105      	bne.n	800071a <toggleLeds+0x26>
        HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 800070e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000712:	480b      	ldr	r0, [pc, #44]	; (8000740 <toggleLeds+0x4c>)
 8000714:	f002 f891 	bl	800283a <HAL_GPIO_TogglePin>
    } else if (clientMessage[0] == 'l'&&clientMessage[1]=='2') {
        HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_10);
    }
}
 8000718:	e00d      	b.n	8000736 <toggleLeds+0x42>
    } else if (clientMessage[0] == 'l'&&clientMessage[1]=='2') {
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	781b      	ldrb	r3, [r3, #0]
 800071e:	2b6c      	cmp	r3, #108	; 0x6c
 8000720:	d109      	bne.n	8000736 <toggleLeds+0x42>
 8000722:	687b      	ldr	r3, [r7, #4]
 8000724:	3301      	adds	r3, #1
 8000726:	781b      	ldrb	r3, [r3, #0]
 8000728:	2b32      	cmp	r3, #50	; 0x32
 800072a:	d104      	bne.n	8000736 <toggleLeds+0x42>
        HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_10);
 800072c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000730:	4804      	ldr	r0, [pc, #16]	; (8000744 <toggleLeds+0x50>)
 8000732:	f002 f882 	bl	800283a <HAL_GPIO_TogglePin>
}
 8000736:	bf00      	nop
 8000738:	3708      	adds	r7, #8
 800073a:	46bd      	mov	sp, r7
 800073c:	bd80      	pop	{r7, pc}
 800073e:	bf00      	nop
 8000740:	40011000 	.word	0x40011000
 8000744:	40010c00 	.word	0x40010c00

08000748 <mainMenu>:
void mainMenu(){
 8000748:	b580      	push	{r7, lr}
 800074a:	af00      	add	r7, sp, #0
	writeMessage("Select your inputs\r\n 1. Change Device Network Configuration\r\n");
 800074c:	480d      	ldr	r0, [pc, #52]	; (8000784 <mainMenu+0x3c>)
 800074e:	f7ff ff51 	bl	80005f4 <writeMessage>
	switch ((char)readMessage()[0]){
 8000752:	f7ff ff65 	bl	8000620 <readMessage>
 8000756:	4603      	mov	r3, r0
 8000758:	781b      	ldrb	r3, [r3, #0]
 800075a:	2b31      	cmp	r3, #49	; 0x31
 800075c:	d10b      	bne.n	8000776 <mainMenu+0x2e>
	case '1' :
		clearScreen();
 800075e:	f7ff ffb3 	bl	80006c8 <clearScreen>
		writeMessage(" 1. Change IP address\r\n 2. Change Netmask\r\n 3. Change Gateway\r\n");
 8000762:	4809      	ldr	r0, [pc, #36]	; (8000788 <mainMenu+0x40>)
 8000764:	f7ff ff46 	bl	80005f4 <writeMessage>
		toggleLeds(readMessage());
 8000768:	f7ff ff5a 	bl	8000620 <readMessage>
 800076c:	4603      	mov	r3, r0
 800076e:	4618      	mov	r0, r3
 8000770:	f7ff ffc0 	bl	80006f4 <toggleLeds>
	break;
 8000774:	e004      	b.n	8000780 <mainMenu+0x38>
	default :
		invalidInput();
 8000776:	f7ff ffb1 	bl	80006dc <invalidInput>
		mainMenu();
 800077a:	f7ff ffe5 	bl	8000748 <mainMenu>
	}
}
 800077e:	bf00      	nop
 8000780:	bf00      	nop
 8000782:	bd80      	pop	{r7, pc}
 8000784:	080050cc 	.word	0x080050cc
 8000788:	0800510c 	.word	0x0800510c

0800078c <startTelnet>:

void startTelnet() {
 800078c:	b580      	push	{r7, lr}
 800078e:	af00      	add	r7, sp, #0
    // Initialize the socket outside the loop
    socket(telnetSocket, Sn_MR_TCP, 23, 0);
 8000790:	4b32      	ldr	r3, [pc, #200]	; (800085c <startTelnet+0xd0>)
 8000792:	7818      	ldrb	r0, [r3, #0]
 8000794:	2300      	movs	r3, #0
 8000796:	2217      	movs	r2, #23
 8000798:	2101      	movs	r1, #1
 800079a:	f000 f879 	bl	8000890 <socket>
    listen(telnetSocket);
 800079e:	4b2f      	ldr	r3, [pc, #188]	; (800085c <startTelnet+0xd0>)
 80007a0:	781b      	ldrb	r3, [r3, #0]
 80007a2:	4618      	mov	r0, r3
 80007a4:	f000 f9f6 	bl	8000b94 <listen>

    while (1) {
        if (getSn_SR(telnetSocket) == SOCK_ESTABLISHED) {
 80007a8:	4b2c      	ldr	r3, [pc, #176]	; (800085c <startTelnet+0xd0>)
 80007aa:	781b      	ldrb	r3, [r3, #0]
 80007ac:	009b      	lsls	r3, r3, #2
 80007ae:	3301      	adds	r3, #1
 80007b0:	00db      	lsls	r3, r3, #3
 80007b2:	f503 7340 	add.w	r3, r3, #768	; 0x300
 80007b6:	4618      	mov	r0, r3
 80007b8:	f001 fa54 	bl	8001c64 <WIZCHIP_READ>
 80007bc:	4603      	mov	r3, r0
 80007be:	2b17      	cmp	r3, #23
 80007c0:	d133      	bne.n	800082a <startTelnet+0x9e>
        	writeMessage("\033[36m");
 80007c2:	4827      	ldr	r0, [pc, #156]	; (8000860 <startTelnet+0xd4>)
 80007c4:	f7ff ff16 	bl	80005f4 <writeMessage>
        	writeMessage("\r\n");
 80007c8:	4826      	ldr	r0, [pc, #152]	; (8000864 <startTelnet+0xd8>)
 80007ca:	f7ff ff13 	bl	80005f4 <writeMessage>
        	writeMessage("                           .8888b oo          \r\n");
 80007ce:	4826      	ldr	r0, [pc, #152]	; (8000868 <startTelnet+0xdc>)
 80007d0:	f7ff ff10 	bl	80005f4 <writeMessage>
        	writeMessage("                           88   \"             \r\n");
 80007d4:	4825      	ldr	r0, [pc, #148]	; (800086c <startTelnet+0xe0>)
 80007d6:	f7ff ff0d 	bl	80005f4 <writeMessage>
        	writeMessage(".d8888b. .d8888b. 88d888b. 88aaa  dP .d8888b. \r\n");
 80007da:	4825      	ldr	r0, [pc, #148]	; (8000870 <startTelnet+0xe4>)
 80007dc:	f7ff ff0a 	bl	80005f4 <writeMessage>
        	writeMessage("88'    `"" 88'  `88 88'  `88 88     88 88'  `88 \r\n");
 80007e0:	4824      	ldr	r0, [pc, #144]	; (8000874 <startTelnet+0xe8>)
 80007e2:	f7ff ff07 	bl	80005f4 <writeMessage>
        	writeMessage("88.  ... 88.  .88 88    88 88     88 88.  .88 \r\n");
 80007e6:	4824      	ldr	r0, [pc, #144]	; (8000878 <startTelnet+0xec>)
 80007e8:	f7ff ff04 	bl	80005f4 <writeMessage>
        	writeMessage("`88888P' `88888P' dP    dP dP     dP `8888P88 \r\n");
 80007ec:	4823      	ldr	r0, [pc, #140]	; (800087c <startTelnet+0xf0>)
 80007ee:	f7ff ff01 	bl	80005f4 <writeMessage>
        	writeMessage("                                          .88 \r\n");
 80007f2:	4823      	ldr	r0, [pc, #140]	; (8000880 <startTelnet+0xf4>)
 80007f4:	f7ff fefe 	bl	80005f4 <writeMessage>
        	writeMessage("                                      d8888P  \r\n");
 80007f8:	4822      	ldr	r0, [pc, #136]	; (8000884 <startTelnet+0xf8>)
 80007fa:	f7ff fefb 	bl	80005f4 <writeMessage>
        	writeMessage("\033[37m");
 80007fe:	4822      	ldr	r0, [pc, #136]	; (8000888 <startTelnet+0xfc>)
 8000800:	f7ff fef8 	bl	80005f4 <writeMessage>
            writeMessage("\033[32mTelnet Configuration Session\033[37m\r\n");
 8000804:	4821      	ldr	r0, [pc, #132]	; (800088c <startTelnet+0x100>)
 8000806:	f7ff fef5 	bl	80005f4 <writeMessage>
//          toggleLeds(readMessage()); //this is for test input of the LEDs only using command l1 and l2
            mainMenu();
 800080a:	f7ff ff9d 	bl	8000748 <mainMenu>
            // Optionally, add a delay to avoid rapid reconnection attempts
            HAL_Delay(300);
            continue;//continue to the next iteration of loop
        }
        // Add a condition to break out of the loop or handle other logic
        if (getSn_SR(telnetSocket) != SOCK_ESTABLISHED) {
 800080e:	4b13      	ldr	r3, [pc, #76]	; (800085c <startTelnet+0xd0>)
 8000810:	781b      	ldrb	r3, [r3, #0]
 8000812:	009b      	lsls	r3, r3, #2
 8000814:	3301      	adds	r3, #1
 8000816:	00db      	lsls	r3, r3, #3
 8000818:	f503 7340 	add.w	r3, r3, #768	; 0x300
 800081c:	4618      	mov	r0, r3
 800081e:	f001 fa21 	bl	8001c64 <WIZCHIP_READ>
 8000822:	4603      	mov	r3, r0
 8000824:	2b17      	cmp	r3, #23
 8000826:	d0bf      	beq.n	80007a8 <startTelnet+0x1c>
        	break;
 8000828:	e016      	b.n	8000858 <startTelnet+0xcc>
            close(telnetSocket);
 800082a:	4b0c      	ldr	r3, [pc, #48]	; (800085c <startTelnet+0xd0>)
 800082c:	781b      	ldrb	r3, [r3, #0]
 800082e:	4618      	mov	r0, r3
 8000830:	f000 f942 	bl	8000ab8 <close>
            socket(telnetSocket, Sn_MR_TCP, 23, 0);
 8000834:	4b09      	ldr	r3, [pc, #36]	; (800085c <startTelnet+0xd0>)
 8000836:	7818      	ldrb	r0, [r3, #0]
 8000838:	2300      	movs	r3, #0
 800083a:	2217      	movs	r2, #23
 800083c:	2101      	movs	r1, #1
 800083e:	f000 f827 	bl	8000890 <socket>
            listen(telnetSocket);
 8000842:	4b06      	ldr	r3, [pc, #24]	; (800085c <startTelnet+0xd0>)
 8000844:	781b      	ldrb	r3, [r3, #0]
 8000846:	4618      	mov	r0, r3
 8000848:	f000 f9a4 	bl	8000b94 <listen>
            HAL_Delay(300);
 800084c:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8000850:	f001 fd38 	bl	80022c4 <HAL_Delay>
            continue;//continue to the next iteration of loop
 8000854:	bf00      	nop
        if (getSn_SR(telnetSocket) == SOCK_ESTABLISHED) {
 8000856:	e7a7      	b.n	80007a8 <startTelnet+0x1c>
        }

    }
}
 8000858:	bf00      	nop
 800085a:	bd80      	pop	{r7, pc}
 800085c:	200007bc 	.word	0x200007bc
 8000860:	0800514c 	.word	0x0800514c
 8000864:	08005154 	.word	0x08005154
 8000868:	08005158 	.word	0x08005158
 800086c:	0800518c 	.word	0x0800518c
 8000870:	080051c0 	.word	0x080051c0
 8000874:	080051f4 	.word	0x080051f4
 8000878:	08005228 	.word	0x08005228
 800087c:	0800525c 	.word	0x0800525c
 8000880:	08005290 	.word	0x08005290
 8000884:	080052c4 	.word	0x080052c4
 8000888:	080052f8 	.word	0x080052f8
 800088c:	08005300 	.word	0x08005300

08000890 <socket>:
 8000890:	b590      	push	{r4, r7, lr}
 8000892:	b085      	sub	sp, #20
 8000894:	af00      	add	r7, sp, #0
 8000896:	4604      	mov	r4, r0
 8000898:	4608      	mov	r0, r1
 800089a:	4611      	mov	r1, r2
 800089c:	461a      	mov	r2, r3
 800089e:	4623      	mov	r3, r4
 80008a0:	71fb      	strb	r3, [r7, #7]
 80008a2:	4603      	mov	r3, r0
 80008a4:	71bb      	strb	r3, [r7, #6]
 80008a6:	460b      	mov	r3, r1
 80008a8:	80bb      	strh	r3, [r7, #4]
 80008aa:	4613      	mov	r3, r2
 80008ac:	70fb      	strb	r3, [r7, #3]
 80008ae:	79fb      	ldrb	r3, [r7, #7]
 80008b0:	2b08      	cmp	r3, #8
 80008b2:	d902      	bls.n	80008ba <socket+0x2a>
 80008b4:	f04f 33ff 	mov.w	r3, #4294967295
 80008b8:	e0f0      	b.n	8000a9c <socket+0x20c>
 80008ba:	79bb      	ldrb	r3, [r7, #6]
 80008bc:	2b01      	cmp	r3, #1
 80008be:	d005      	beq.n	80008cc <socket+0x3c>
 80008c0:	2b00      	cmp	r3, #0
 80008c2:	dd11      	ble.n	80008e8 <socket+0x58>
 80008c4:	3b02      	subs	r3, #2
 80008c6:	2b02      	cmp	r3, #2
 80008c8:	d80e      	bhi.n	80008e8 <socket+0x58>
 80008ca:	e011      	b.n	80008f0 <socket+0x60>
 80008cc:	f107 030c 	add.w	r3, r7, #12
 80008d0:	2204      	movs	r2, #4
 80008d2:	4619      	mov	r1, r3
 80008d4:	f44f 6070 	mov.w	r0, #3840	; 0xf00
 80008d8:	f001 fa5e 	bl	8001d98 <WIZCHIP_READ_BUF>
 80008dc:	68fb      	ldr	r3, [r7, #12]
 80008de:	2b00      	cmp	r3, #0
 80008e0:	d105      	bne.n	80008ee <socket+0x5e>
 80008e2:	f06f 0302 	mvn.w	r3, #2
 80008e6:	e0d9      	b.n	8000a9c <socket+0x20c>
 80008e8:	f06f 0304 	mvn.w	r3, #4
 80008ec:	e0d6      	b.n	8000a9c <socket+0x20c>
 80008ee:	bf00      	nop
 80008f0:	78fb      	ldrb	r3, [r7, #3]
 80008f2:	f003 0304 	and.w	r3, r3, #4
 80008f6:	2b00      	cmp	r3, #0
 80008f8:	d002      	beq.n	8000900 <socket+0x70>
 80008fa:	f06f 0305 	mvn.w	r3, #5
 80008fe:	e0cd      	b.n	8000a9c <socket+0x20c>
 8000900:	78fb      	ldrb	r3, [r7, #3]
 8000902:	2b00      	cmp	r3, #0
 8000904:	d028      	beq.n	8000958 <socket+0xc8>
 8000906:	79bb      	ldrb	r3, [r7, #6]
 8000908:	2b01      	cmp	r3, #1
 800090a:	d002      	beq.n	8000912 <socket+0x82>
 800090c:	2b02      	cmp	r3, #2
 800090e:	d008      	beq.n	8000922 <socket+0x92>
 8000910:	e022      	b.n	8000958 <socket+0xc8>
 8000912:	78fb      	ldrb	r3, [r7, #3]
 8000914:	f003 0321 	and.w	r3, r3, #33	; 0x21
 8000918:	2b00      	cmp	r3, #0
 800091a:	d11a      	bne.n	8000952 <socket+0xc2>
 800091c:	f06f 0305 	mvn.w	r3, #5
 8000920:	e0bc      	b.n	8000a9c <socket+0x20c>
 8000922:	78fb      	ldrb	r3, [r7, #3]
 8000924:	f003 0320 	and.w	r3, r3, #32
 8000928:	2b00      	cmp	r3, #0
 800092a:	d006      	beq.n	800093a <socket+0xaa>
 800092c:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8000930:	2b00      	cmp	r3, #0
 8000932:	db02      	blt.n	800093a <socket+0xaa>
 8000934:	f06f 0305 	mvn.w	r3, #5
 8000938:	e0b0      	b.n	8000a9c <socket+0x20c>
 800093a:	78fb      	ldrb	r3, [r7, #3]
 800093c:	f003 0310 	and.w	r3, r3, #16
 8000940:	2b00      	cmp	r3, #0
 8000942:	d008      	beq.n	8000956 <socket+0xc6>
 8000944:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8000948:	2b00      	cmp	r3, #0
 800094a:	db04      	blt.n	8000956 <socket+0xc6>
 800094c:	f06f 0305 	mvn.w	r3, #5
 8000950:	e0a4      	b.n	8000a9c <socket+0x20c>
 8000952:	bf00      	nop
 8000954:	e000      	b.n	8000958 <socket+0xc8>
 8000956:	bf00      	nop
 8000958:	79fb      	ldrb	r3, [r7, #7]
 800095a:	4618      	mov	r0, r3
 800095c:	f000 f8ac 	bl	8000ab8 <close>
 8000960:	79fb      	ldrb	r3, [r7, #7]
 8000962:	009b      	lsls	r3, r3, #2
 8000964:	3301      	adds	r3, #1
 8000966:	00db      	lsls	r3, r3, #3
 8000968:	4618      	mov	r0, r3
 800096a:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800096e:	f023 030f 	bic.w	r3, r3, #15
 8000972:	b25a      	sxtb	r2, r3
 8000974:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8000978:	4313      	orrs	r3, r2
 800097a:	b25b      	sxtb	r3, r3
 800097c:	b2db      	uxtb	r3, r3
 800097e:	4619      	mov	r1, r3
 8000980:	f001 f9bc 	bl	8001cfc <WIZCHIP_WRITE>
 8000984:	88bb      	ldrh	r3, [r7, #4]
 8000986:	2b00      	cmp	r3, #0
 8000988:	d110      	bne.n	80009ac <socket+0x11c>
 800098a:	4b46      	ldr	r3, [pc, #280]	; (8000aa4 <socket+0x214>)
 800098c:	881b      	ldrh	r3, [r3, #0]
 800098e:	1c5a      	adds	r2, r3, #1
 8000990:	b291      	uxth	r1, r2
 8000992:	4a44      	ldr	r2, [pc, #272]	; (8000aa4 <socket+0x214>)
 8000994:	8011      	strh	r1, [r2, #0]
 8000996:	80bb      	strh	r3, [r7, #4]
 8000998:	4b42      	ldr	r3, [pc, #264]	; (8000aa4 <socket+0x214>)
 800099a:	881b      	ldrh	r3, [r3, #0]
 800099c:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 80009a0:	4293      	cmp	r3, r2
 80009a2:	d103      	bne.n	80009ac <socket+0x11c>
 80009a4:	4b3f      	ldr	r3, [pc, #252]	; (8000aa4 <socket+0x214>)
 80009a6:	f44f 4240 	mov.w	r2, #49152	; 0xc000
 80009aa:	801a      	strh	r2, [r3, #0]
 80009ac:	79fb      	ldrb	r3, [r7, #7]
 80009ae:	009b      	lsls	r3, r3, #2
 80009b0:	3301      	adds	r3, #1
 80009b2:	00db      	lsls	r3, r3, #3
 80009b4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80009b8:	461a      	mov	r2, r3
 80009ba:	88bb      	ldrh	r3, [r7, #4]
 80009bc:	0a1b      	lsrs	r3, r3, #8
 80009be:	b29b      	uxth	r3, r3
 80009c0:	b2db      	uxtb	r3, r3
 80009c2:	4619      	mov	r1, r3
 80009c4:	4610      	mov	r0, r2
 80009c6:	f001 f999 	bl	8001cfc <WIZCHIP_WRITE>
 80009ca:	79fb      	ldrb	r3, [r7, #7]
 80009cc:	009b      	lsls	r3, r3, #2
 80009ce:	3301      	adds	r3, #1
 80009d0:	00db      	lsls	r3, r3, #3
 80009d2:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80009d6:	461a      	mov	r2, r3
 80009d8:	88bb      	ldrh	r3, [r7, #4]
 80009da:	b2db      	uxtb	r3, r3
 80009dc:	4619      	mov	r1, r3
 80009de:	4610      	mov	r0, r2
 80009e0:	f001 f98c 	bl	8001cfc <WIZCHIP_WRITE>
 80009e4:	79fb      	ldrb	r3, [r7, #7]
 80009e6:	009b      	lsls	r3, r3, #2
 80009e8:	3301      	adds	r3, #1
 80009ea:	00db      	lsls	r3, r3, #3
 80009ec:	f503 7380 	add.w	r3, r3, #256	; 0x100
 80009f0:	2101      	movs	r1, #1
 80009f2:	4618      	mov	r0, r3
 80009f4:	f001 f982 	bl	8001cfc <WIZCHIP_WRITE>
 80009f8:	bf00      	nop
 80009fa:	79fb      	ldrb	r3, [r7, #7]
 80009fc:	009b      	lsls	r3, r3, #2
 80009fe:	3301      	adds	r3, #1
 8000a00:	00db      	lsls	r3, r3, #3
 8000a02:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8000a06:	4618      	mov	r0, r3
 8000a08:	f001 f92c 	bl	8001c64 <WIZCHIP_READ>
 8000a0c:	4603      	mov	r3, r0
 8000a0e:	2b00      	cmp	r3, #0
 8000a10:	d1f3      	bne.n	80009fa <socket+0x16a>
 8000a12:	79fb      	ldrb	r3, [r7, #7]
 8000a14:	2201      	movs	r2, #1
 8000a16:	fa02 f303 	lsl.w	r3, r2, r3
 8000a1a:	b21b      	sxth	r3, r3
 8000a1c:	43db      	mvns	r3, r3
 8000a1e:	b21a      	sxth	r2, r3
 8000a20:	4b21      	ldr	r3, [pc, #132]	; (8000aa8 <socket+0x218>)
 8000a22:	881b      	ldrh	r3, [r3, #0]
 8000a24:	b21b      	sxth	r3, r3
 8000a26:	4013      	ands	r3, r2
 8000a28:	b21b      	sxth	r3, r3
 8000a2a:	b29a      	uxth	r2, r3
 8000a2c:	4b1e      	ldr	r3, [pc, #120]	; (8000aa8 <socket+0x218>)
 8000a2e:	801a      	strh	r2, [r3, #0]
 8000a30:	78fb      	ldrb	r3, [r7, #3]
 8000a32:	f003 0201 	and.w	r2, r3, #1
 8000a36:	79fb      	ldrb	r3, [r7, #7]
 8000a38:	fa02 f303 	lsl.w	r3, r2, r3
 8000a3c:	b21a      	sxth	r2, r3
 8000a3e:	4b1a      	ldr	r3, [pc, #104]	; (8000aa8 <socket+0x218>)
 8000a40:	881b      	ldrh	r3, [r3, #0]
 8000a42:	b21b      	sxth	r3, r3
 8000a44:	4313      	orrs	r3, r2
 8000a46:	b21b      	sxth	r3, r3
 8000a48:	b29a      	uxth	r2, r3
 8000a4a:	4b17      	ldr	r3, [pc, #92]	; (8000aa8 <socket+0x218>)
 8000a4c:	801a      	strh	r2, [r3, #0]
 8000a4e:	79fb      	ldrb	r3, [r7, #7]
 8000a50:	2201      	movs	r2, #1
 8000a52:	fa02 f303 	lsl.w	r3, r2, r3
 8000a56:	b21b      	sxth	r3, r3
 8000a58:	43db      	mvns	r3, r3
 8000a5a:	b21a      	sxth	r2, r3
 8000a5c:	4b13      	ldr	r3, [pc, #76]	; (8000aac <socket+0x21c>)
 8000a5e:	881b      	ldrh	r3, [r3, #0]
 8000a60:	b21b      	sxth	r3, r3
 8000a62:	4013      	ands	r3, r2
 8000a64:	b21b      	sxth	r3, r3
 8000a66:	b29a      	uxth	r2, r3
 8000a68:	4b10      	ldr	r3, [pc, #64]	; (8000aac <socket+0x21c>)
 8000a6a:	801a      	strh	r2, [r3, #0]
 8000a6c:	79fb      	ldrb	r3, [r7, #7]
 8000a6e:	4a10      	ldr	r2, [pc, #64]	; (8000ab0 <socket+0x220>)
 8000a70:	2100      	movs	r1, #0
 8000a72:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8000a76:	79fb      	ldrb	r3, [r7, #7]
 8000a78:	4a0e      	ldr	r2, [pc, #56]	; (8000ab4 <socket+0x224>)
 8000a7a:	2100      	movs	r1, #0
 8000a7c:	54d1      	strb	r1, [r2, r3]
 8000a7e:	bf00      	nop
 8000a80:	79fb      	ldrb	r3, [r7, #7]
 8000a82:	009b      	lsls	r3, r3, #2
 8000a84:	3301      	adds	r3, #1
 8000a86:	00db      	lsls	r3, r3, #3
 8000a88:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8000a8c:	4618      	mov	r0, r3
 8000a8e:	f001 f8e9 	bl	8001c64 <WIZCHIP_READ>
 8000a92:	4603      	mov	r3, r0
 8000a94:	2b00      	cmp	r3, #0
 8000a96:	d0f3      	beq.n	8000a80 <socket+0x1f0>
 8000a98:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000a9c:	4618      	mov	r0, r3
 8000a9e:	3714      	adds	r7, #20
 8000aa0:	46bd      	mov	sp, r7
 8000aa2:	bd90      	pop	{r4, r7, pc}
 8000aa4:	2000001c 	.word	0x2000001c
 8000aa8:	200007be 	.word	0x200007be
 8000aac:	200007c0 	.word	0x200007c0
 8000ab0:	200007c4 	.word	0x200007c4
 8000ab4:	200007d4 	.word	0x200007d4

08000ab8 <close>:
 8000ab8:	b580      	push	{r7, lr}
 8000aba:	b082      	sub	sp, #8
 8000abc:	af00      	add	r7, sp, #0
 8000abe:	4603      	mov	r3, r0
 8000ac0:	71fb      	strb	r3, [r7, #7]
 8000ac2:	79fb      	ldrb	r3, [r7, #7]
 8000ac4:	2b08      	cmp	r3, #8
 8000ac6:	d902      	bls.n	8000ace <close+0x16>
 8000ac8:	f04f 33ff 	mov.w	r3, #4294967295
 8000acc:	e055      	b.n	8000b7a <close+0xc2>
 8000ace:	79fb      	ldrb	r3, [r7, #7]
 8000ad0:	009b      	lsls	r3, r3, #2
 8000ad2:	3301      	adds	r3, #1
 8000ad4:	00db      	lsls	r3, r3, #3
 8000ad6:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8000ada:	2110      	movs	r1, #16
 8000adc:	4618      	mov	r0, r3
 8000ade:	f001 f90d 	bl	8001cfc <WIZCHIP_WRITE>
 8000ae2:	bf00      	nop
 8000ae4:	79fb      	ldrb	r3, [r7, #7]
 8000ae6:	009b      	lsls	r3, r3, #2
 8000ae8:	3301      	adds	r3, #1
 8000aea:	00db      	lsls	r3, r3, #3
 8000aec:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8000af0:	4618      	mov	r0, r3
 8000af2:	f001 f8b7 	bl	8001c64 <WIZCHIP_READ>
 8000af6:	4603      	mov	r3, r0
 8000af8:	2b00      	cmp	r3, #0
 8000afa:	d1f3      	bne.n	8000ae4 <close+0x2c>
 8000afc:	79fb      	ldrb	r3, [r7, #7]
 8000afe:	009b      	lsls	r3, r3, #2
 8000b00:	3301      	adds	r3, #1
 8000b02:	00db      	lsls	r3, r3, #3
 8000b04:	f503 7300 	add.w	r3, r3, #512	; 0x200
 8000b08:	211f      	movs	r1, #31
 8000b0a:	4618      	mov	r0, r3
 8000b0c:	f001 f8f6 	bl	8001cfc <WIZCHIP_WRITE>
 8000b10:	79fb      	ldrb	r3, [r7, #7]
 8000b12:	2201      	movs	r2, #1
 8000b14:	fa02 f303 	lsl.w	r3, r2, r3
 8000b18:	b21b      	sxth	r3, r3
 8000b1a:	43db      	mvns	r3, r3
 8000b1c:	b21a      	sxth	r2, r3
 8000b1e:	4b19      	ldr	r3, [pc, #100]	; (8000b84 <close+0xcc>)
 8000b20:	881b      	ldrh	r3, [r3, #0]
 8000b22:	b21b      	sxth	r3, r3
 8000b24:	4013      	ands	r3, r2
 8000b26:	b21b      	sxth	r3, r3
 8000b28:	b29a      	uxth	r2, r3
 8000b2a:	4b16      	ldr	r3, [pc, #88]	; (8000b84 <close+0xcc>)
 8000b2c:	801a      	strh	r2, [r3, #0]
 8000b2e:	79fb      	ldrb	r3, [r7, #7]
 8000b30:	2201      	movs	r2, #1
 8000b32:	fa02 f303 	lsl.w	r3, r2, r3
 8000b36:	b21b      	sxth	r3, r3
 8000b38:	43db      	mvns	r3, r3
 8000b3a:	b21a      	sxth	r2, r3
 8000b3c:	4b12      	ldr	r3, [pc, #72]	; (8000b88 <close+0xd0>)
 8000b3e:	881b      	ldrh	r3, [r3, #0]
 8000b40:	b21b      	sxth	r3, r3
 8000b42:	4013      	ands	r3, r2
 8000b44:	b21b      	sxth	r3, r3
 8000b46:	b29a      	uxth	r2, r3
 8000b48:	4b0f      	ldr	r3, [pc, #60]	; (8000b88 <close+0xd0>)
 8000b4a:	801a      	strh	r2, [r3, #0]
 8000b4c:	79fb      	ldrb	r3, [r7, #7]
 8000b4e:	4a0f      	ldr	r2, [pc, #60]	; (8000b8c <close+0xd4>)
 8000b50:	2100      	movs	r1, #0
 8000b52:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8000b56:	79fb      	ldrb	r3, [r7, #7]
 8000b58:	4a0d      	ldr	r2, [pc, #52]	; (8000b90 <close+0xd8>)
 8000b5a:	2100      	movs	r1, #0
 8000b5c:	54d1      	strb	r1, [r2, r3]
 8000b5e:	bf00      	nop
 8000b60:	79fb      	ldrb	r3, [r7, #7]
 8000b62:	009b      	lsls	r3, r3, #2
 8000b64:	3301      	adds	r3, #1
 8000b66:	00db      	lsls	r3, r3, #3
 8000b68:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8000b6c:	4618      	mov	r0, r3
 8000b6e:	f001 f879 	bl	8001c64 <WIZCHIP_READ>
 8000b72:	4603      	mov	r3, r0
 8000b74:	2b00      	cmp	r3, #0
 8000b76:	d1f3      	bne.n	8000b60 <close+0xa8>
 8000b78:	2301      	movs	r3, #1
 8000b7a:	4618      	mov	r0, r3
 8000b7c:	3708      	adds	r7, #8
 8000b7e:	46bd      	mov	sp, r7
 8000b80:	bd80      	pop	{r7, pc}
 8000b82:	bf00      	nop
 8000b84:	200007be 	.word	0x200007be
 8000b88:	200007c0 	.word	0x200007c0
 8000b8c:	200007c4 	.word	0x200007c4
 8000b90:	200007d4 	.word	0x200007d4

08000b94 <listen>:
 8000b94:	b580      	push	{r7, lr}
 8000b96:	b082      	sub	sp, #8
 8000b98:	af00      	add	r7, sp, #0
 8000b9a:	4603      	mov	r3, r0
 8000b9c:	71fb      	strb	r3, [r7, #7]
 8000b9e:	79fb      	ldrb	r3, [r7, #7]
 8000ba0:	2b08      	cmp	r3, #8
 8000ba2:	d902      	bls.n	8000baa <listen+0x16>
 8000ba4:	f04f 33ff 	mov.w	r3, #4294967295
 8000ba8:	e049      	b.n	8000c3e <listen+0xaa>
 8000baa:	79fb      	ldrb	r3, [r7, #7]
 8000bac:	009b      	lsls	r3, r3, #2
 8000bae:	3301      	adds	r3, #1
 8000bb0:	00db      	lsls	r3, r3, #3
 8000bb2:	4618      	mov	r0, r3
 8000bb4:	f001 f856 	bl	8001c64 <WIZCHIP_READ>
 8000bb8:	4603      	mov	r3, r0
 8000bba:	f003 030f 	and.w	r3, r3, #15
 8000bbe:	2b01      	cmp	r3, #1
 8000bc0:	d002      	beq.n	8000bc8 <listen+0x34>
 8000bc2:	f06f 0304 	mvn.w	r3, #4
 8000bc6:	e03a      	b.n	8000c3e <listen+0xaa>
 8000bc8:	79fb      	ldrb	r3, [r7, #7]
 8000bca:	009b      	lsls	r3, r3, #2
 8000bcc:	3301      	adds	r3, #1
 8000bce:	00db      	lsls	r3, r3, #3
 8000bd0:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8000bd4:	4618      	mov	r0, r3
 8000bd6:	f001 f845 	bl	8001c64 <WIZCHIP_READ>
 8000bda:	4603      	mov	r3, r0
 8000bdc:	2b13      	cmp	r3, #19
 8000bde:	d002      	beq.n	8000be6 <listen+0x52>
 8000be0:	f06f 0302 	mvn.w	r3, #2
 8000be4:	e02b      	b.n	8000c3e <listen+0xaa>
 8000be6:	79fb      	ldrb	r3, [r7, #7]
 8000be8:	009b      	lsls	r3, r3, #2
 8000bea:	3301      	adds	r3, #1
 8000bec:	00db      	lsls	r3, r3, #3
 8000bee:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8000bf2:	2102      	movs	r1, #2
 8000bf4:	4618      	mov	r0, r3
 8000bf6:	f001 f881 	bl	8001cfc <WIZCHIP_WRITE>
 8000bfa:	bf00      	nop
 8000bfc:	79fb      	ldrb	r3, [r7, #7]
 8000bfe:	009b      	lsls	r3, r3, #2
 8000c00:	3301      	adds	r3, #1
 8000c02:	00db      	lsls	r3, r3, #3
 8000c04:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8000c08:	4618      	mov	r0, r3
 8000c0a:	f001 f82b 	bl	8001c64 <WIZCHIP_READ>
 8000c0e:	4603      	mov	r3, r0
 8000c10:	2b00      	cmp	r3, #0
 8000c12:	d1f3      	bne.n	8000bfc <listen+0x68>
 8000c14:	e006      	b.n	8000c24 <listen+0x90>
 8000c16:	79fb      	ldrb	r3, [r7, #7]
 8000c18:	4618      	mov	r0, r3
 8000c1a:	f7ff ff4d 	bl	8000ab8 <close>
 8000c1e:	f06f 0303 	mvn.w	r3, #3
 8000c22:	e00c      	b.n	8000c3e <listen+0xaa>
 8000c24:	79fb      	ldrb	r3, [r7, #7]
 8000c26:	009b      	lsls	r3, r3, #2
 8000c28:	3301      	adds	r3, #1
 8000c2a:	00db      	lsls	r3, r3, #3
 8000c2c:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8000c30:	4618      	mov	r0, r3
 8000c32:	f001 f817 	bl	8001c64 <WIZCHIP_READ>
 8000c36:	4603      	mov	r3, r0
 8000c38:	2b14      	cmp	r3, #20
 8000c3a:	d1ec      	bne.n	8000c16 <listen+0x82>
 8000c3c:	2301      	movs	r3, #1
 8000c3e:	4618      	mov	r0, r3
 8000c40:	3708      	adds	r7, #8
 8000c42:	46bd      	mov	sp, r7
 8000c44:	bd80      	pop	{r7, pc}
	...

08000c48 <send>:
 8000c48:	b580      	push	{r7, lr}
 8000c4a:	b084      	sub	sp, #16
 8000c4c:	af00      	add	r7, sp, #0
 8000c4e:	4603      	mov	r3, r0
 8000c50:	6039      	str	r1, [r7, #0]
 8000c52:	71fb      	strb	r3, [r7, #7]
 8000c54:	4613      	mov	r3, r2
 8000c56:	80bb      	strh	r3, [r7, #4]
 8000c58:	2300      	movs	r3, #0
 8000c5a:	73fb      	strb	r3, [r7, #15]
 8000c5c:	2300      	movs	r3, #0
 8000c5e:	81bb      	strh	r3, [r7, #12]
 8000c60:	79fb      	ldrb	r3, [r7, #7]
 8000c62:	2b08      	cmp	r3, #8
 8000c64:	d902      	bls.n	8000c6c <send+0x24>
 8000c66:	f04f 33ff 	mov.w	r3, #4294967295
 8000c6a:	e0de      	b.n	8000e2a <send+0x1e2>
 8000c6c:	79fb      	ldrb	r3, [r7, #7]
 8000c6e:	009b      	lsls	r3, r3, #2
 8000c70:	3301      	adds	r3, #1
 8000c72:	00db      	lsls	r3, r3, #3
 8000c74:	4618      	mov	r0, r3
 8000c76:	f000 fff5 	bl	8001c64 <WIZCHIP_READ>
 8000c7a:	4603      	mov	r3, r0
 8000c7c:	f003 030f 	and.w	r3, r3, #15
 8000c80:	2b01      	cmp	r3, #1
 8000c82:	d002      	beq.n	8000c8a <send+0x42>
 8000c84:	f06f 0304 	mvn.w	r3, #4
 8000c88:	e0cf      	b.n	8000e2a <send+0x1e2>
 8000c8a:	88bb      	ldrh	r3, [r7, #4]
 8000c8c:	2b00      	cmp	r3, #0
 8000c8e:	d102      	bne.n	8000c96 <send+0x4e>
 8000c90:	f06f 030d 	mvn.w	r3, #13
 8000c94:	e0c9      	b.n	8000e2a <send+0x1e2>
 8000c96:	79fb      	ldrb	r3, [r7, #7]
 8000c98:	009b      	lsls	r3, r3, #2
 8000c9a:	3301      	adds	r3, #1
 8000c9c:	00db      	lsls	r3, r3, #3
 8000c9e:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8000ca2:	4618      	mov	r0, r3
 8000ca4:	f000 ffde 	bl	8001c64 <WIZCHIP_READ>
 8000ca8:	4603      	mov	r3, r0
 8000caa:	73fb      	strb	r3, [r7, #15]
 8000cac:	7bfb      	ldrb	r3, [r7, #15]
 8000cae:	2b17      	cmp	r3, #23
 8000cb0:	d005      	beq.n	8000cbe <send+0x76>
 8000cb2:	7bfb      	ldrb	r3, [r7, #15]
 8000cb4:	2b1c      	cmp	r3, #28
 8000cb6:	d002      	beq.n	8000cbe <send+0x76>
 8000cb8:	f06f 0306 	mvn.w	r3, #6
 8000cbc:	e0b5      	b.n	8000e2a <send+0x1e2>
 8000cbe:	4b5d      	ldr	r3, [pc, #372]	; (8000e34 <send+0x1ec>)
 8000cc0:	881b      	ldrh	r3, [r3, #0]
 8000cc2:	461a      	mov	r2, r3
 8000cc4:	79fb      	ldrb	r3, [r7, #7]
 8000cc6:	fa42 f303 	asr.w	r3, r2, r3
 8000cca:	f003 0301 	and.w	r3, r3, #1
 8000cce:	2b00      	cmp	r3, #0
 8000cd0:	d039      	beq.n	8000d46 <send+0xfe>
 8000cd2:	79fb      	ldrb	r3, [r7, #7]
 8000cd4:	009b      	lsls	r3, r3, #2
 8000cd6:	3301      	adds	r3, #1
 8000cd8:	00db      	lsls	r3, r3, #3
 8000cda:	f503 7300 	add.w	r3, r3, #512	; 0x200
 8000cde:	4618      	mov	r0, r3
 8000ce0:	f000 ffc0 	bl	8001c64 <WIZCHIP_READ>
 8000ce4:	4603      	mov	r3, r0
 8000ce6:	f003 031f 	and.w	r3, r3, #31
 8000cea:	73fb      	strb	r3, [r7, #15]
 8000cec:	7bfb      	ldrb	r3, [r7, #15]
 8000cee:	f003 0310 	and.w	r3, r3, #16
 8000cf2:	2b00      	cmp	r3, #0
 8000cf4:	d019      	beq.n	8000d2a <send+0xe2>
 8000cf6:	79fb      	ldrb	r3, [r7, #7]
 8000cf8:	009b      	lsls	r3, r3, #2
 8000cfa:	3301      	adds	r3, #1
 8000cfc:	00db      	lsls	r3, r3, #3
 8000cfe:	f503 7300 	add.w	r3, r3, #512	; 0x200
 8000d02:	2110      	movs	r1, #16
 8000d04:	4618      	mov	r0, r3
 8000d06:	f000 fff9 	bl	8001cfc <WIZCHIP_WRITE>
 8000d0a:	79fb      	ldrb	r3, [r7, #7]
 8000d0c:	2201      	movs	r2, #1
 8000d0e:	fa02 f303 	lsl.w	r3, r2, r3
 8000d12:	b21b      	sxth	r3, r3
 8000d14:	43db      	mvns	r3, r3
 8000d16:	b21a      	sxth	r2, r3
 8000d18:	4b46      	ldr	r3, [pc, #280]	; (8000e34 <send+0x1ec>)
 8000d1a:	881b      	ldrh	r3, [r3, #0]
 8000d1c:	b21b      	sxth	r3, r3
 8000d1e:	4013      	ands	r3, r2
 8000d20:	b21b      	sxth	r3, r3
 8000d22:	b29a      	uxth	r2, r3
 8000d24:	4b43      	ldr	r3, [pc, #268]	; (8000e34 <send+0x1ec>)
 8000d26:	801a      	strh	r2, [r3, #0]
 8000d28:	e00d      	b.n	8000d46 <send+0xfe>
 8000d2a:	7bfb      	ldrb	r3, [r7, #15]
 8000d2c:	f003 0308 	and.w	r3, r3, #8
 8000d30:	2b00      	cmp	r3, #0
 8000d32:	d006      	beq.n	8000d42 <send+0xfa>
 8000d34:	79fb      	ldrb	r3, [r7, #7]
 8000d36:	4618      	mov	r0, r3
 8000d38:	f7ff febe 	bl	8000ab8 <close>
 8000d3c:	f06f 030c 	mvn.w	r3, #12
 8000d40:	e073      	b.n	8000e2a <send+0x1e2>
 8000d42:	2300      	movs	r3, #0
 8000d44:	e071      	b.n	8000e2a <send+0x1e2>
 8000d46:	79fb      	ldrb	r3, [r7, #7]
 8000d48:	009b      	lsls	r3, r3, #2
 8000d4a:	3301      	adds	r3, #1
 8000d4c:	00db      	lsls	r3, r3, #3
 8000d4e:	f503 53f8 	add.w	r3, r3, #7936	; 0x1f00
 8000d52:	4618      	mov	r0, r3
 8000d54:	f000 ff86 	bl	8001c64 <WIZCHIP_READ>
 8000d58:	4603      	mov	r3, r0
 8000d5a:	b29b      	uxth	r3, r3
 8000d5c:	029b      	lsls	r3, r3, #10
 8000d5e:	81bb      	strh	r3, [r7, #12]
 8000d60:	88ba      	ldrh	r2, [r7, #4]
 8000d62:	89bb      	ldrh	r3, [r7, #12]
 8000d64:	429a      	cmp	r2, r3
 8000d66:	d901      	bls.n	8000d6c <send+0x124>
 8000d68:	89bb      	ldrh	r3, [r7, #12]
 8000d6a:	80bb      	strh	r3, [r7, #4]
 8000d6c:	79fb      	ldrb	r3, [r7, #7]
 8000d6e:	4618      	mov	r0, r3
 8000d70:	f001 f8d2 	bl	8001f18 <getSn_TX_FSR>
 8000d74:	4603      	mov	r3, r0
 8000d76:	81bb      	strh	r3, [r7, #12]
 8000d78:	79fb      	ldrb	r3, [r7, #7]
 8000d7a:	009b      	lsls	r3, r3, #2
 8000d7c:	3301      	adds	r3, #1
 8000d7e:	00db      	lsls	r3, r3, #3
 8000d80:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8000d84:	4618      	mov	r0, r3
 8000d86:	f000 ff6d 	bl	8001c64 <WIZCHIP_READ>
 8000d8a:	4603      	mov	r3, r0
 8000d8c:	73fb      	strb	r3, [r7, #15]
 8000d8e:	7bfb      	ldrb	r3, [r7, #15]
 8000d90:	2b17      	cmp	r3, #23
 8000d92:	d009      	beq.n	8000da8 <send+0x160>
 8000d94:	7bfb      	ldrb	r3, [r7, #15]
 8000d96:	2b1c      	cmp	r3, #28
 8000d98:	d006      	beq.n	8000da8 <send+0x160>
 8000d9a:	79fb      	ldrb	r3, [r7, #7]
 8000d9c:	4618      	mov	r0, r3
 8000d9e:	f7ff fe8b 	bl	8000ab8 <close>
 8000da2:	f06f 0306 	mvn.w	r3, #6
 8000da6:	e040      	b.n	8000e2a <send+0x1e2>
 8000da8:	4b23      	ldr	r3, [pc, #140]	; (8000e38 <send+0x1f0>)
 8000daa:	881b      	ldrh	r3, [r3, #0]
 8000dac:	461a      	mov	r2, r3
 8000dae:	79fb      	ldrb	r3, [r7, #7]
 8000db0:	fa42 f303 	asr.w	r3, r2, r3
 8000db4:	f003 0301 	and.w	r3, r3, #1
 8000db8:	2b00      	cmp	r3, #0
 8000dba:	d005      	beq.n	8000dc8 <send+0x180>
 8000dbc:	88ba      	ldrh	r2, [r7, #4]
 8000dbe:	89bb      	ldrh	r3, [r7, #12]
 8000dc0:	429a      	cmp	r2, r3
 8000dc2:	d901      	bls.n	8000dc8 <send+0x180>
 8000dc4:	2300      	movs	r3, #0
 8000dc6:	e030      	b.n	8000e2a <send+0x1e2>
 8000dc8:	88ba      	ldrh	r2, [r7, #4]
 8000dca:	89bb      	ldrh	r3, [r7, #12]
 8000dcc:	429a      	cmp	r2, r3
 8000dce:	d900      	bls.n	8000dd2 <send+0x18a>
 8000dd0:	e7cc      	b.n	8000d6c <send+0x124>
 8000dd2:	bf00      	nop
 8000dd4:	88ba      	ldrh	r2, [r7, #4]
 8000dd6:	79fb      	ldrb	r3, [r7, #7]
 8000dd8:	6839      	ldr	r1, [r7, #0]
 8000dda:	4618      	mov	r0, r3
 8000ddc:	f001 f932 	bl	8002044 <wiz_send_data>
 8000de0:	79fb      	ldrb	r3, [r7, #7]
 8000de2:	009b      	lsls	r3, r3, #2
 8000de4:	3301      	adds	r3, #1
 8000de6:	00db      	lsls	r3, r3, #3
 8000de8:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8000dec:	2120      	movs	r1, #32
 8000dee:	4618      	mov	r0, r3
 8000df0:	f000 ff84 	bl	8001cfc <WIZCHIP_WRITE>
 8000df4:	bf00      	nop
 8000df6:	79fb      	ldrb	r3, [r7, #7]
 8000df8:	009b      	lsls	r3, r3, #2
 8000dfa:	3301      	adds	r3, #1
 8000dfc:	00db      	lsls	r3, r3, #3
 8000dfe:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8000e02:	4618      	mov	r0, r3
 8000e04:	f000 ff2e 	bl	8001c64 <WIZCHIP_READ>
 8000e08:	4603      	mov	r3, r0
 8000e0a:	2b00      	cmp	r3, #0
 8000e0c:	d1f3      	bne.n	8000df6 <send+0x1ae>
 8000e0e:	79fb      	ldrb	r3, [r7, #7]
 8000e10:	2201      	movs	r2, #1
 8000e12:	fa02 f303 	lsl.w	r3, r2, r3
 8000e16:	b21a      	sxth	r2, r3
 8000e18:	4b06      	ldr	r3, [pc, #24]	; (8000e34 <send+0x1ec>)
 8000e1a:	881b      	ldrh	r3, [r3, #0]
 8000e1c:	b21b      	sxth	r3, r3
 8000e1e:	4313      	orrs	r3, r2
 8000e20:	b21b      	sxth	r3, r3
 8000e22:	b29a      	uxth	r2, r3
 8000e24:	4b03      	ldr	r3, [pc, #12]	; (8000e34 <send+0x1ec>)
 8000e26:	801a      	strh	r2, [r3, #0]
 8000e28:	88bb      	ldrh	r3, [r7, #4]
 8000e2a:	4618      	mov	r0, r3
 8000e2c:	3710      	adds	r7, #16
 8000e2e:	46bd      	mov	sp, r7
 8000e30:	bd80      	pop	{r7, pc}
 8000e32:	bf00      	nop
 8000e34:	200007c0 	.word	0x200007c0
 8000e38:	200007be 	.word	0x200007be

08000e3c <recv>:
 8000e3c:	b590      	push	{r4, r7, lr}
 8000e3e:	b085      	sub	sp, #20
 8000e40:	af00      	add	r7, sp, #0
 8000e42:	4603      	mov	r3, r0
 8000e44:	6039      	str	r1, [r7, #0]
 8000e46:	71fb      	strb	r3, [r7, #7]
 8000e48:	4613      	mov	r3, r2
 8000e4a:	80bb      	strh	r3, [r7, #4]
 8000e4c:	2300      	movs	r3, #0
 8000e4e:	73fb      	strb	r3, [r7, #15]
 8000e50:	2300      	movs	r3, #0
 8000e52:	81bb      	strh	r3, [r7, #12]
 8000e54:	79fb      	ldrb	r3, [r7, #7]
 8000e56:	2b08      	cmp	r3, #8
 8000e58:	d902      	bls.n	8000e60 <recv+0x24>
 8000e5a:	f04f 33ff 	mov.w	r3, #4294967295
 8000e5e:	e09c      	b.n	8000f9a <recv+0x15e>
 8000e60:	79fb      	ldrb	r3, [r7, #7]
 8000e62:	009b      	lsls	r3, r3, #2
 8000e64:	3301      	adds	r3, #1
 8000e66:	00db      	lsls	r3, r3, #3
 8000e68:	4618      	mov	r0, r3
 8000e6a:	f000 fefb 	bl	8001c64 <WIZCHIP_READ>
 8000e6e:	4603      	mov	r3, r0
 8000e70:	f003 030f 	and.w	r3, r3, #15
 8000e74:	2b01      	cmp	r3, #1
 8000e76:	d002      	beq.n	8000e7e <recv+0x42>
 8000e78:	f06f 0304 	mvn.w	r3, #4
 8000e7c:	e08d      	b.n	8000f9a <recv+0x15e>
 8000e7e:	88bb      	ldrh	r3, [r7, #4]
 8000e80:	2b00      	cmp	r3, #0
 8000e82:	d102      	bne.n	8000e8a <recv+0x4e>
 8000e84:	f06f 030d 	mvn.w	r3, #13
 8000e88:	e087      	b.n	8000f9a <recv+0x15e>
 8000e8a:	79fb      	ldrb	r3, [r7, #7]
 8000e8c:	009b      	lsls	r3, r3, #2
 8000e8e:	3301      	adds	r3, #1
 8000e90:	00db      	lsls	r3, r3, #3
 8000e92:	f503 53f0 	add.w	r3, r3, #7680	; 0x1e00
 8000e96:	4618      	mov	r0, r3
 8000e98:	f000 fee4 	bl	8001c64 <WIZCHIP_READ>
 8000e9c:	4603      	mov	r3, r0
 8000e9e:	b29b      	uxth	r3, r3
 8000ea0:	029b      	lsls	r3, r3, #10
 8000ea2:	81bb      	strh	r3, [r7, #12]
 8000ea4:	89ba      	ldrh	r2, [r7, #12]
 8000ea6:	88bb      	ldrh	r3, [r7, #4]
 8000ea8:	429a      	cmp	r2, r3
 8000eaa:	d201      	bcs.n	8000eb0 <recv+0x74>
 8000eac:	89bb      	ldrh	r3, [r7, #12]
 8000eae:	80bb      	strh	r3, [r7, #4]
 8000eb0:	79fb      	ldrb	r3, [r7, #7]
 8000eb2:	4618      	mov	r0, r3
 8000eb4:	f001 f87b 	bl	8001fae <getSn_RX_RSR>
 8000eb8:	4603      	mov	r3, r0
 8000eba:	81bb      	strh	r3, [r7, #12]
 8000ebc:	79fb      	ldrb	r3, [r7, #7]
 8000ebe:	009b      	lsls	r3, r3, #2
 8000ec0:	3301      	adds	r3, #1
 8000ec2:	00db      	lsls	r3, r3, #3
 8000ec4:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8000ec8:	4618      	mov	r0, r3
 8000eca:	f000 fecb 	bl	8001c64 <WIZCHIP_READ>
 8000ece:	4603      	mov	r3, r0
 8000ed0:	73fb      	strb	r3, [r7, #15]
 8000ed2:	7bfb      	ldrb	r3, [r7, #15]
 8000ed4:	2b17      	cmp	r3, #23
 8000ed6:	d026      	beq.n	8000f26 <recv+0xea>
 8000ed8:	7bfb      	ldrb	r3, [r7, #15]
 8000eda:	2b1c      	cmp	r3, #28
 8000edc:	d11c      	bne.n	8000f18 <recv+0xdc>
 8000ede:	89bb      	ldrh	r3, [r7, #12]
 8000ee0:	2b00      	cmp	r3, #0
 8000ee2:	d133      	bne.n	8000f4c <recv+0x110>
 8000ee4:	79fb      	ldrb	r3, [r7, #7]
 8000ee6:	4618      	mov	r0, r3
 8000ee8:	f001 f816 	bl	8001f18 <getSn_TX_FSR>
 8000eec:	4603      	mov	r3, r0
 8000eee:	461c      	mov	r4, r3
 8000ef0:	79fb      	ldrb	r3, [r7, #7]
 8000ef2:	009b      	lsls	r3, r3, #2
 8000ef4:	3301      	adds	r3, #1
 8000ef6:	00db      	lsls	r3, r3, #3
 8000ef8:	f503 53f8 	add.w	r3, r3, #7936	; 0x1f00
 8000efc:	4618      	mov	r0, r3
 8000efe:	f000 feb1 	bl	8001c64 <WIZCHIP_READ>
 8000f02:	4603      	mov	r3, r0
 8000f04:	029b      	lsls	r3, r3, #10
 8000f06:	429c      	cmp	r4, r3
 8000f08:	d10d      	bne.n	8000f26 <recv+0xea>
 8000f0a:	79fb      	ldrb	r3, [r7, #7]
 8000f0c:	4618      	mov	r0, r3
 8000f0e:	f7ff fdd3 	bl	8000ab8 <close>
 8000f12:	f06f 0306 	mvn.w	r3, #6
 8000f16:	e040      	b.n	8000f9a <recv+0x15e>
 8000f18:	79fb      	ldrb	r3, [r7, #7]
 8000f1a:	4618      	mov	r0, r3
 8000f1c:	f7ff fdcc 	bl	8000ab8 <close>
 8000f20:	f06f 0306 	mvn.w	r3, #6
 8000f24:	e039      	b.n	8000f9a <recv+0x15e>
 8000f26:	4b1f      	ldr	r3, [pc, #124]	; (8000fa4 <recv+0x168>)
 8000f28:	881b      	ldrh	r3, [r3, #0]
 8000f2a:	461a      	mov	r2, r3
 8000f2c:	79fb      	ldrb	r3, [r7, #7]
 8000f2e:	fa42 f303 	asr.w	r3, r2, r3
 8000f32:	f003 0301 	and.w	r3, r3, #1
 8000f36:	2b00      	cmp	r3, #0
 8000f38:	d004      	beq.n	8000f44 <recv+0x108>
 8000f3a:	89bb      	ldrh	r3, [r7, #12]
 8000f3c:	2b00      	cmp	r3, #0
 8000f3e:	d101      	bne.n	8000f44 <recv+0x108>
 8000f40:	2300      	movs	r3, #0
 8000f42:	e02a      	b.n	8000f9a <recv+0x15e>
 8000f44:	89bb      	ldrh	r3, [r7, #12]
 8000f46:	2b00      	cmp	r3, #0
 8000f48:	d102      	bne.n	8000f50 <recv+0x114>
 8000f4a:	e7b1      	b.n	8000eb0 <recv+0x74>
 8000f4c:	bf00      	nop
 8000f4e:	e000      	b.n	8000f52 <recv+0x116>
 8000f50:	bf00      	nop
 8000f52:	89ba      	ldrh	r2, [r7, #12]
 8000f54:	88bb      	ldrh	r3, [r7, #4]
 8000f56:	429a      	cmp	r2, r3
 8000f58:	d201      	bcs.n	8000f5e <recv+0x122>
 8000f5a:	89bb      	ldrh	r3, [r7, #12]
 8000f5c:	80bb      	strh	r3, [r7, #4]
 8000f5e:	88ba      	ldrh	r2, [r7, #4]
 8000f60:	79fb      	ldrb	r3, [r7, #7]
 8000f62:	6839      	ldr	r1, [r7, #0]
 8000f64:	4618      	mov	r0, r3
 8000f66:	f001 f8c9 	bl	80020fc <wiz_recv_data>
 8000f6a:	79fb      	ldrb	r3, [r7, #7]
 8000f6c:	009b      	lsls	r3, r3, #2
 8000f6e:	3301      	adds	r3, #1
 8000f70:	00db      	lsls	r3, r3, #3
 8000f72:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8000f76:	2140      	movs	r1, #64	; 0x40
 8000f78:	4618      	mov	r0, r3
 8000f7a:	f000 febf 	bl	8001cfc <WIZCHIP_WRITE>
 8000f7e:	bf00      	nop
 8000f80:	79fb      	ldrb	r3, [r7, #7]
 8000f82:	009b      	lsls	r3, r3, #2
 8000f84:	3301      	adds	r3, #1
 8000f86:	00db      	lsls	r3, r3, #3
 8000f88:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8000f8c:	4618      	mov	r0, r3
 8000f8e:	f000 fe69 	bl	8001c64 <WIZCHIP_READ>
 8000f92:	4603      	mov	r3, r0
 8000f94:	2b00      	cmp	r3, #0
 8000f96:	d1f3      	bne.n	8000f80 <recv+0x144>
 8000f98:	88bb      	ldrh	r3, [r7, #4]
 8000f9a:	4618      	mov	r0, r3
 8000f9c:	3714      	adds	r7, #20
 8000f9e:	46bd      	mov	sp, r7
 8000fa0:	bd90      	pop	{r4, r7, pc}
 8000fa2:	bf00      	nop
 8000fa4:	200007be 	.word	0x200007be

08000fa8 <wizchip_select>:
 8000fa8:	b580      	push	{r7, lr}
 8000faa:	af00      	add	r7, sp, #0
 8000fac:	2200      	movs	r2, #0
 8000fae:	2102      	movs	r1, #2
 8000fb0:	4802      	ldr	r0, [pc, #8]	; (8000fbc <wizchip_select+0x14>)
 8000fb2:	f001 fc2a 	bl	800280a <HAL_GPIO_WritePin>
 8000fb6:	bf00      	nop
 8000fb8:	bd80      	pop	{r7, pc}
 8000fba:	bf00      	nop
 8000fbc:	40010800 	.word	0x40010800

08000fc0 <wizchip_deselect>:
 8000fc0:	b580      	push	{r7, lr}
 8000fc2:	af00      	add	r7, sp, #0
 8000fc4:	2201      	movs	r2, #1
 8000fc6:	2102      	movs	r1, #2
 8000fc8:	4802      	ldr	r0, [pc, #8]	; (8000fd4 <wizchip_deselect+0x14>)
 8000fca:	f001 fc1e 	bl	800280a <HAL_GPIO_WritePin>
 8000fce:	bf00      	nop
 8000fd0:	bd80      	pop	{r7, pc}
 8000fd2:	bf00      	nop
 8000fd4:	40010800 	.word	0x40010800

08000fd8 <wizchip_read>:
 8000fd8:	b580      	push	{r7, lr}
 8000fda:	b082      	sub	sp, #8
 8000fdc:	af00      	add	r7, sp, #0
 8000fde:	1df9      	adds	r1, r7, #7
 8000fe0:	f04f 33ff 	mov.w	r3, #4294967295
 8000fe4:	2201      	movs	r2, #1
 8000fe6:	4804      	ldr	r0, [pc, #16]	; (8000ff8 <wizchip_read+0x20>)
 8000fe8:	f002 fa0b 	bl	8003402 <HAL_SPI_Receive>
 8000fec:	79fb      	ldrb	r3, [r7, #7]
 8000fee:	4618      	mov	r0, r3
 8000ff0:	3708      	adds	r7, #8
 8000ff2:	46bd      	mov	sp, r7
 8000ff4:	bd80      	pop	{r7, pc}
 8000ff6:	bf00      	nop
 8000ff8:	20000364 	.word	0x20000364

08000ffc <wizchip_write>:
 8000ffc:	b580      	push	{r7, lr}
 8000ffe:	b082      	sub	sp, #8
 8001000:	af00      	add	r7, sp, #0
 8001002:	4603      	mov	r3, r0
 8001004:	71fb      	strb	r3, [r7, #7]
 8001006:	1df9      	adds	r1, r7, #7
 8001008:	f04f 33ff 	mov.w	r3, #4294967295
 800100c:	2201      	movs	r2, #1
 800100e:	4803      	ldr	r0, [pc, #12]	; (800101c <wizchip_write+0x20>)
 8001010:	f002 f8b4 	bl	800317c <HAL_SPI_Transmit>
 8001014:	bf00      	nop
 8001016:	3708      	adds	r7, #8
 8001018:	46bd      	mov	sp, r7
 800101a:	bd80      	pop	{r7, pc}
 800101c:	20000364 	.word	0x20000364

08001020 <wizchip_read_burst>:
 8001020:	b590      	push	{r4, r7, lr}
 8001022:	b085      	sub	sp, #20
 8001024:	af00      	add	r7, sp, #0
 8001026:	6078      	str	r0, [r7, #4]
 8001028:	460b      	mov	r3, r1
 800102a:	807b      	strh	r3, [r7, #2]
 800102c:	2300      	movs	r3, #0
 800102e:	81fb      	strh	r3, [r7, #14]
 8001030:	e009      	b.n	8001046 <wizchip_read_burst+0x26>
 8001032:	89fb      	ldrh	r3, [r7, #14]
 8001034:	687a      	ldr	r2, [r7, #4]
 8001036:	18d4      	adds	r4, r2, r3
 8001038:	f7ff ffce 	bl	8000fd8 <wizchip_read>
 800103c:	4603      	mov	r3, r0
 800103e:	7023      	strb	r3, [r4, #0]
 8001040:	89fb      	ldrh	r3, [r7, #14]
 8001042:	3301      	adds	r3, #1
 8001044:	81fb      	strh	r3, [r7, #14]
 8001046:	89fa      	ldrh	r2, [r7, #14]
 8001048:	887b      	ldrh	r3, [r7, #2]
 800104a:	429a      	cmp	r2, r3
 800104c:	d3f1      	bcc.n	8001032 <wizchip_read_burst+0x12>
 800104e:	bf00      	nop
 8001050:	bf00      	nop
 8001052:	3714      	adds	r7, #20
 8001054:	46bd      	mov	sp, r7
 8001056:	bd90      	pop	{r4, r7, pc}

08001058 <wizchip_write_burst>:
 8001058:	b580      	push	{r7, lr}
 800105a:	b084      	sub	sp, #16
 800105c:	af00      	add	r7, sp, #0
 800105e:	6078      	str	r0, [r7, #4]
 8001060:	460b      	mov	r3, r1
 8001062:	807b      	strh	r3, [r7, #2]
 8001064:	2300      	movs	r3, #0
 8001066:	81fb      	strh	r3, [r7, #14]
 8001068:	e009      	b.n	800107e <wizchip_write_burst+0x26>
 800106a:	89fb      	ldrh	r3, [r7, #14]
 800106c:	687a      	ldr	r2, [r7, #4]
 800106e:	4413      	add	r3, r2
 8001070:	781b      	ldrb	r3, [r3, #0]
 8001072:	4618      	mov	r0, r3
 8001074:	f7ff ffc2 	bl	8000ffc <wizchip_write>
 8001078:	89fb      	ldrh	r3, [r7, #14]
 800107a:	3301      	adds	r3, #1
 800107c:	81fb      	strh	r3, [r7, #14]
 800107e:	89fa      	ldrh	r2, [r7, #14]
 8001080:	887b      	ldrh	r3, [r7, #2]
 8001082:	429a      	cmp	r2, r3
 8001084:	d3f1      	bcc.n	800106a <wizchip_write_burst+0x12>
 8001086:	bf00      	nop
 8001088:	bf00      	nop
 800108a:	3710      	adds	r7, #16
 800108c:	46bd      	mov	sp, r7
 800108e:	bd80      	pop	{r7, pc}

08001090 <W5500Init>:
 8001090:	b590      	push	{r4, r7, lr}
 8001092:	b087      	sub	sp, #28
 8001094:	af00      	add	r7, sp, #0
 8001096:	4b1b      	ldr	r3, [pc, #108]	; (8001104 <W5500Init+0x74>)
 8001098:	1d3c      	adds	r4, r7, #4
 800109a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800109c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80010a0:	2201      	movs	r2, #1
 80010a2:	2102      	movs	r1, #2
 80010a4:	4818      	ldr	r0, [pc, #96]	; (8001108 <W5500Init+0x78>)
 80010a6:	f001 fbb0 	bl	800280a <HAL_GPIO_WritePin>
 80010aa:	2200      	movs	r2, #0
 80010ac:	2101      	movs	r1, #1
 80010ae:	4816      	ldr	r0, [pc, #88]	; (8001108 <W5500Init+0x78>)
 80010b0:	f001 fbab 	bl	800280a <HAL_GPIO_WritePin>
 80010b4:	23ff      	movs	r3, #255	; 0xff
 80010b6:	75fb      	strb	r3, [r7, #23]
 80010b8:	bf00      	nop
 80010ba:	7dfb      	ldrb	r3, [r7, #23]
 80010bc:	1e5a      	subs	r2, r3, #1
 80010be:	75fa      	strb	r2, [r7, #23]
 80010c0:	2b00      	cmp	r3, #0
 80010c2:	d1fa      	bne.n	80010ba <W5500Init+0x2a>
 80010c4:	2201      	movs	r2, #1
 80010c6:	2101      	movs	r1, #1
 80010c8:	480f      	ldr	r0, [pc, #60]	; (8001108 <W5500Init+0x78>)
 80010ca:	f001 fb9e 	bl	800280a <HAL_GPIO_WritePin>
 80010ce:	490f      	ldr	r1, [pc, #60]	; (800110c <W5500Init+0x7c>)
 80010d0:	480f      	ldr	r0, [pc, #60]	; (8001110 <W5500Init+0x80>)
 80010d2:	f000 f881 	bl	80011d8 <reg_wizchip_cs_cbfunc>
 80010d6:	490f      	ldr	r1, [pc, #60]	; (8001114 <W5500Init+0x84>)
 80010d8:	480f      	ldr	r0, [pc, #60]	; (8001118 <W5500Init+0x88>)
 80010da:	f000 f8a1 	bl	8001220 <reg_wizchip_spi_cbfunc>
 80010de:	490f      	ldr	r1, [pc, #60]	; (800111c <W5500Init+0x8c>)
 80010e0:	480f      	ldr	r0, [pc, #60]	; (8001120 <W5500Init+0x90>)
 80010e2:	f000 f8c9 	bl	8001278 <reg_wizchip_spiburst_cbfunc>
 80010e6:	1d3b      	adds	r3, r7, #4
 80010e8:	4619      	mov	r1, r3
 80010ea:	2001      	movs	r0, #1
 80010ec:	f000 f8f0 	bl	80012d0 <ctlwizchip>
 80010f0:	4603      	mov	r3, r0
 80010f2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80010f6:	d100      	bne.n	80010fa <W5500Init+0x6a>
 80010f8:	e7fe      	b.n	80010f8 <W5500Init+0x68>
 80010fa:	bf00      	nop
 80010fc:	371c      	adds	r7, #28
 80010fe:	46bd      	mov	sp, r7
 8001100:	bd90      	pop	{r4, r7, pc}
 8001102:	bf00      	nop
 8001104:	0800532c 	.word	0x0800532c
 8001108:	40010800 	.word	0x40010800
 800110c:	08000fc1 	.word	0x08000fc1
 8001110:	08000fa9 	.word	0x08000fa9
 8001114:	08000ffd 	.word	0x08000ffd
 8001118:	08000fd9 	.word	0x08000fd9
 800111c:	08001059 	.word	0x08001059
 8001120:	08001021 	.word	0x08001021

08001124 <wizchip_cris_enter>:
 8001124:	b480      	push	{r7}
 8001126:	af00      	add	r7, sp, #0
 8001128:	bf00      	nop
 800112a:	46bd      	mov	sp, r7
 800112c:	bc80      	pop	{r7}
 800112e:	4770      	bx	lr

08001130 <wizchip_cris_exit>:
 8001130:	b480      	push	{r7}
 8001132:	af00      	add	r7, sp, #0
 8001134:	bf00      	nop
 8001136:	46bd      	mov	sp, r7
 8001138:	bc80      	pop	{r7}
 800113a:	4770      	bx	lr

0800113c <wizchip_cs_select>:
 800113c:	b480      	push	{r7}
 800113e:	af00      	add	r7, sp, #0
 8001140:	bf00      	nop
 8001142:	46bd      	mov	sp, r7
 8001144:	bc80      	pop	{r7}
 8001146:	4770      	bx	lr

08001148 <wizchip_cs_deselect>:
 8001148:	b480      	push	{r7}
 800114a:	af00      	add	r7, sp, #0
 800114c:	bf00      	nop
 800114e:	46bd      	mov	sp, r7
 8001150:	bc80      	pop	{r7}
 8001152:	4770      	bx	lr

08001154 <wizchip_bus_readdata>:
 8001154:	b480      	push	{r7}
 8001156:	b083      	sub	sp, #12
 8001158:	af00      	add	r7, sp, #0
 800115a:	6078      	str	r0, [r7, #4]
 800115c:	687b      	ldr	r3, [r7, #4]
 800115e:	781b      	ldrb	r3, [r3, #0]
 8001160:	b2db      	uxtb	r3, r3
 8001162:	4618      	mov	r0, r3
 8001164:	370c      	adds	r7, #12
 8001166:	46bd      	mov	sp, r7
 8001168:	bc80      	pop	{r7}
 800116a:	4770      	bx	lr

0800116c <wizchip_bus_writedata>:
 800116c:	b480      	push	{r7}
 800116e:	b083      	sub	sp, #12
 8001170:	af00      	add	r7, sp, #0
 8001172:	6078      	str	r0, [r7, #4]
 8001174:	460b      	mov	r3, r1
 8001176:	70fb      	strb	r3, [r7, #3]
 8001178:	687b      	ldr	r3, [r7, #4]
 800117a:	78fa      	ldrb	r2, [r7, #3]
 800117c:	701a      	strb	r2, [r3, #0]
 800117e:	bf00      	nop
 8001180:	370c      	adds	r7, #12
 8001182:	46bd      	mov	sp, r7
 8001184:	bc80      	pop	{r7}
 8001186:	4770      	bx	lr

08001188 <wizchip_spi_readbyte>:
 8001188:	b480      	push	{r7}
 800118a:	af00      	add	r7, sp, #0
 800118c:	2300      	movs	r3, #0
 800118e:	4618      	mov	r0, r3
 8001190:	46bd      	mov	sp, r7
 8001192:	bc80      	pop	{r7}
 8001194:	4770      	bx	lr

08001196 <wizchip_spi_writebyte>:
 8001196:	b480      	push	{r7}
 8001198:	b083      	sub	sp, #12
 800119a:	af00      	add	r7, sp, #0
 800119c:	4603      	mov	r3, r0
 800119e:	71fb      	strb	r3, [r7, #7]
 80011a0:	bf00      	nop
 80011a2:	370c      	adds	r7, #12
 80011a4:	46bd      	mov	sp, r7
 80011a6:	bc80      	pop	{r7}
 80011a8:	4770      	bx	lr

080011aa <wizchip_spi_readburst>:
 80011aa:	b480      	push	{r7}
 80011ac:	b083      	sub	sp, #12
 80011ae:	af00      	add	r7, sp, #0
 80011b0:	6078      	str	r0, [r7, #4]
 80011b2:	460b      	mov	r3, r1
 80011b4:	807b      	strh	r3, [r7, #2]
 80011b6:	bf00      	nop
 80011b8:	370c      	adds	r7, #12
 80011ba:	46bd      	mov	sp, r7
 80011bc:	bc80      	pop	{r7}
 80011be:	4770      	bx	lr

080011c0 <wizchip_spi_writeburst>:
 80011c0:	b480      	push	{r7}
 80011c2:	b083      	sub	sp, #12
 80011c4:	af00      	add	r7, sp, #0
 80011c6:	6078      	str	r0, [r7, #4]
 80011c8:	460b      	mov	r3, r1
 80011ca:	807b      	strh	r3, [r7, #2]
 80011cc:	bf00      	nop
 80011ce:	370c      	adds	r7, #12
 80011d0:	46bd      	mov	sp, r7
 80011d2:	bc80      	pop	{r7}
 80011d4:	4770      	bx	lr
	...

080011d8 <reg_wizchip_cs_cbfunc>:
 80011d8:	b480      	push	{r7}
 80011da:	b083      	sub	sp, #12
 80011dc:	af00      	add	r7, sp, #0
 80011de:	6078      	str	r0, [r7, #4]
 80011e0:	6039      	str	r1, [r7, #0]
 80011e2:	687b      	ldr	r3, [r7, #4]
 80011e4:	2b00      	cmp	r3, #0
 80011e6:	d002      	beq.n	80011ee <reg_wizchip_cs_cbfunc+0x16>
 80011e8:	683b      	ldr	r3, [r7, #0]
 80011ea:	2b00      	cmp	r3, #0
 80011ec:	d106      	bne.n	80011fc <reg_wizchip_cs_cbfunc+0x24>
 80011ee:	4b09      	ldr	r3, [pc, #36]	; (8001214 <reg_wizchip_cs_cbfunc+0x3c>)
 80011f0:	4a09      	ldr	r2, [pc, #36]	; (8001218 <reg_wizchip_cs_cbfunc+0x40>)
 80011f2:	615a      	str	r2, [r3, #20]
 80011f4:	4b07      	ldr	r3, [pc, #28]	; (8001214 <reg_wizchip_cs_cbfunc+0x3c>)
 80011f6:	4a09      	ldr	r2, [pc, #36]	; (800121c <reg_wizchip_cs_cbfunc+0x44>)
 80011f8:	619a      	str	r2, [r3, #24]
 80011fa:	e006      	b.n	800120a <reg_wizchip_cs_cbfunc+0x32>
 80011fc:	4a05      	ldr	r2, [pc, #20]	; (8001214 <reg_wizchip_cs_cbfunc+0x3c>)
 80011fe:	687b      	ldr	r3, [r7, #4]
 8001200:	6153      	str	r3, [r2, #20]
 8001202:	4a04      	ldr	r2, [pc, #16]	; (8001214 <reg_wizchip_cs_cbfunc+0x3c>)
 8001204:	683b      	ldr	r3, [r7, #0]
 8001206:	6193      	str	r3, [r2, #24]
 8001208:	bf00      	nop
 800120a:	bf00      	nop
 800120c:	370c      	adds	r7, #12
 800120e:	46bd      	mov	sp, r7
 8001210:	bc80      	pop	{r7}
 8001212:	4770      	bx	lr
 8001214:	20000020 	.word	0x20000020
 8001218:	0800113d 	.word	0x0800113d
 800121c:	08001149 	.word	0x08001149

08001220 <reg_wizchip_spi_cbfunc>:
 8001220:	b480      	push	{r7}
 8001222:	b083      	sub	sp, #12
 8001224:	af00      	add	r7, sp, #0
 8001226:	6078      	str	r0, [r7, #4]
 8001228:	6039      	str	r1, [r7, #0]
 800122a:	bf00      	nop
 800122c:	4b0f      	ldr	r3, [pc, #60]	; (800126c <reg_wizchip_spi_cbfunc+0x4c>)
 800122e:	881b      	ldrh	r3, [r3, #0]
 8001230:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001234:	2b00      	cmp	r3, #0
 8001236:	d0f9      	beq.n	800122c <reg_wizchip_spi_cbfunc+0xc>
 8001238:	687b      	ldr	r3, [r7, #4]
 800123a:	2b00      	cmp	r3, #0
 800123c:	d002      	beq.n	8001244 <reg_wizchip_spi_cbfunc+0x24>
 800123e:	683b      	ldr	r3, [r7, #0]
 8001240:	2b00      	cmp	r3, #0
 8001242:	d106      	bne.n	8001252 <reg_wizchip_spi_cbfunc+0x32>
 8001244:	4b09      	ldr	r3, [pc, #36]	; (800126c <reg_wizchip_spi_cbfunc+0x4c>)
 8001246:	4a0a      	ldr	r2, [pc, #40]	; (8001270 <reg_wizchip_spi_cbfunc+0x50>)
 8001248:	61da      	str	r2, [r3, #28]
 800124a:	4b08      	ldr	r3, [pc, #32]	; (800126c <reg_wizchip_spi_cbfunc+0x4c>)
 800124c:	4a09      	ldr	r2, [pc, #36]	; (8001274 <reg_wizchip_spi_cbfunc+0x54>)
 800124e:	621a      	str	r2, [r3, #32]
 8001250:	e006      	b.n	8001260 <reg_wizchip_spi_cbfunc+0x40>
 8001252:	4a06      	ldr	r2, [pc, #24]	; (800126c <reg_wizchip_spi_cbfunc+0x4c>)
 8001254:	687b      	ldr	r3, [r7, #4]
 8001256:	61d3      	str	r3, [r2, #28]
 8001258:	4a04      	ldr	r2, [pc, #16]	; (800126c <reg_wizchip_spi_cbfunc+0x4c>)
 800125a:	683b      	ldr	r3, [r7, #0]
 800125c:	6213      	str	r3, [r2, #32]
 800125e:	bf00      	nop
 8001260:	bf00      	nop
 8001262:	370c      	adds	r7, #12
 8001264:	46bd      	mov	sp, r7
 8001266:	bc80      	pop	{r7}
 8001268:	4770      	bx	lr
 800126a:	bf00      	nop
 800126c:	20000020 	.word	0x20000020
 8001270:	08001189 	.word	0x08001189
 8001274:	08001197 	.word	0x08001197

08001278 <reg_wizchip_spiburst_cbfunc>:
 8001278:	b480      	push	{r7}
 800127a:	b083      	sub	sp, #12
 800127c:	af00      	add	r7, sp, #0
 800127e:	6078      	str	r0, [r7, #4]
 8001280:	6039      	str	r1, [r7, #0]
 8001282:	bf00      	nop
 8001284:	4b0f      	ldr	r3, [pc, #60]	; (80012c4 <reg_wizchip_spiburst_cbfunc+0x4c>)
 8001286:	881b      	ldrh	r3, [r3, #0]
 8001288:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800128c:	2b00      	cmp	r3, #0
 800128e:	d0f9      	beq.n	8001284 <reg_wizchip_spiburst_cbfunc+0xc>
 8001290:	687b      	ldr	r3, [r7, #4]
 8001292:	2b00      	cmp	r3, #0
 8001294:	d002      	beq.n	800129c <reg_wizchip_spiburst_cbfunc+0x24>
 8001296:	683b      	ldr	r3, [r7, #0]
 8001298:	2b00      	cmp	r3, #0
 800129a:	d106      	bne.n	80012aa <reg_wizchip_spiburst_cbfunc+0x32>
 800129c:	4b09      	ldr	r3, [pc, #36]	; (80012c4 <reg_wizchip_spiburst_cbfunc+0x4c>)
 800129e:	4a0a      	ldr	r2, [pc, #40]	; (80012c8 <reg_wizchip_spiburst_cbfunc+0x50>)
 80012a0:	625a      	str	r2, [r3, #36]	; 0x24
 80012a2:	4b08      	ldr	r3, [pc, #32]	; (80012c4 <reg_wizchip_spiburst_cbfunc+0x4c>)
 80012a4:	4a09      	ldr	r2, [pc, #36]	; (80012cc <reg_wizchip_spiburst_cbfunc+0x54>)
 80012a6:	629a      	str	r2, [r3, #40]	; 0x28
 80012a8:	e006      	b.n	80012b8 <reg_wizchip_spiburst_cbfunc+0x40>
 80012aa:	4a06      	ldr	r2, [pc, #24]	; (80012c4 <reg_wizchip_spiburst_cbfunc+0x4c>)
 80012ac:	687b      	ldr	r3, [r7, #4]
 80012ae:	6253      	str	r3, [r2, #36]	; 0x24
 80012b0:	4a04      	ldr	r2, [pc, #16]	; (80012c4 <reg_wizchip_spiburst_cbfunc+0x4c>)
 80012b2:	683b      	ldr	r3, [r7, #0]
 80012b4:	6293      	str	r3, [r2, #40]	; 0x28
 80012b6:	bf00      	nop
 80012b8:	bf00      	nop
 80012ba:	370c      	adds	r7, #12
 80012bc:	46bd      	mov	sp, r7
 80012be:	bc80      	pop	{r7}
 80012c0:	4770      	bx	lr
 80012c2:	bf00      	nop
 80012c4:	20000020 	.word	0x20000020
 80012c8:	080011ab 	.word	0x080011ab
 80012cc:	080011c1 	.word	0x080011c1

080012d0 <ctlwizchip>:
 80012d0:	b590      	push	{r4, r7, lr}
 80012d2:	b087      	sub	sp, #28
 80012d4:	af00      	add	r7, sp, #0
 80012d6:	4603      	mov	r3, r0
 80012d8:	6039      	str	r1, [r7, #0]
 80012da:	71fb      	strb	r3, [r7, #7]
 80012dc:	2300      	movs	r3, #0
 80012de:	75fb      	strb	r3, [r7, #23]
 80012e0:	2300      	movs	r3, #0
 80012e2:	60fb      	str	r3, [r7, #12]
 80012e4:	2300      	movs	r3, #0
 80012e6:	613b      	str	r3, [r7, #16]
 80012e8:	79fb      	ldrb	r3, [r7, #7]
 80012ea:	2b0f      	cmp	r3, #15
 80012ec:	f200 80c7 	bhi.w	800147e <ctlwizchip+0x1ae>
 80012f0:	a201      	add	r2, pc, #4	; (adr r2, 80012f8 <ctlwizchip+0x28>)
 80012f2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80012f6:	bf00      	nop
 80012f8:	08001339 	.word	0x08001339
 80012fc:	0800133f 	.word	0x0800133f
 8001300:	0800136b 	.word	0x0800136b
 8001304:	0800135f 	.word	0x0800135f
 8001308:	08001379 	.word	0x08001379
 800130c:	08001385 	.word	0x08001385
 8001310:	08001393 	.word	0x08001393
 8001314:	080013b9 	.word	0x080013b9
 8001318:	080013df 	.word	0x080013df
 800131c:	08001423 	.word	0x08001423
 8001320:	08001429 	.word	0x08001429
 8001324:	08001431 	.word	0x08001431
 8001328:	08001485 	.word	0x08001485
 800132c:	08001439 	.word	0x08001439
 8001330:	08001447 	.word	0x08001447
 8001334:	08001463 	.word	0x08001463
 8001338:	f000 f8ea 	bl	8001510 <wizchip_sw_reset>
 800133c:	e0a3      	b.n	8001486 <ctlwizchip+0x1b6>
 800133e:	683b      	ldr	r3, [r7, #0]
 8001340:	2b00      	cmp	r3, #0
 8001342:	d004      	beq.n	800134e <ctlwizchip+0x7e>
 8001344:	683b      	ldr	r3, [r7, #0]
 8001346:	60fb      	str	r3, [r7, #12]
 8001348:	68fb      	ldr	r3, [r7, #12]
 800134a:	3308      	adds	r3, #8
 800134c:	613b      	str	r3, [r7, #16]
 800134e:	68fb      	ldr	r3, [r7, #12]
 8001350:	693a      	ldr	r2, [r7, #16]
 8001352:	4611      	mov	r1, r2
 8001354:	4618      	mov	r0, r3
 8001356:	f000 f927 	bl	80015a8 <wizchip_init>
 800135a:	4603      	mov	r3, r0
 800135c:	e094      	b.n	8001488 <ctlwizchip+0x1b8>
 800135e:	683b      	ldr	r3, [r7, #0]
 8001360:	881b      	ldrh	r3, [r3, #0]
 8001362:	4618      	mov	r0, r3
 8001364:	f000 f9ac 	bl	80016c0 <wizchip_clrinterrupt>
 8001368:	e08d      	b.n	8001486 <ctlwizchip+0x1b6>
 800136a:	f000 f9dd 	bl	8001728 <wizchip_getinterrupt>
 800136e:	4603      	mov	r3, r0
 8001370:	461a      	mov	r2, r3
 8001372:	683b      	ldr	r3, [r7, #0]
 8001374:	801a      	strh	r2, [r3, #0]
 8001376:	e086      	b.n	8001486 <ctlwizchip+0x1b6>
 8001378:	683b      	ldr	r3, [r7, #0]
 800137a:	881b      	ldrh	r3, [r3, #0]
 800137c:	4618      	mov	r0, r3
 800137e:	f000 f9f8 	bl	8001772 <wizchip_setinterruptmask>
 8001382:	e080      	b.n	8001486 <ctlwizchip+0x1b6>
 8001384:	f000 fa10 	bl	80017a8 <wizchip_getinterruptmask>
 8001388:	4603      	mov	r3, r0
 800138a:	461a      	mov	r2, r3
 800138c:	683b      	ldr	r3, [r7, #0]
 800138e:	801a      	strh	r2, [r3, #0]
 8001390:	e079      	b.n	8001486 <ctlwizchip+0x1b6>
 8001392:	683b      	ldr	r3, [r7, #0]
 8001394:	881b      	ldrh	r3, [r3, #0]
 8001396:	0a1b      	lsrs	r3, r3, #8
 8001398:	b29b      	uxth	r3, r3
 800139a:	b2db      	uxtb	r3, r3
 800139c:	4619      	mov	r1, r3
 800139e:	f44f 5098 	mov.w	r0, #4864	; 0x1300
 80013a2:	f000 fcab 	bl	8001cfc <WIZCHIP_WRITE>
 80013a6:	683b      	ldr	r3, [r7, #0]
 80013a8:	881b      	ldrh	r3, [r3, #0]
 80013aa:	b2db      	uxtb	r3, r3
 80013ac:	4619      	mov	r1, r3
 80013ae:	f44f 50a0 	mov.w	r0, #5120	; 0x1400
 80013b2:	f000 fca3 	bl	8001cfc <WIZCHIP_WRITE>
 80013b6:	e066      	b.n	8001486 <ctlwizchip+0x1b6>
 80013b8:	f44f 5098 	mov.w	r0, #4864	; 0x1300
 80013bc:	f000 fc52 	bl	8001c64 <WIZCHIP_READ>
 80013c0:	4603      	mov	r3, r0
 80013c2:	b29b      	uxth	r3, r3
 80013c4:	021b      	lsls	r3, r3, #8
 80013c6:	b29c      	uxth	r4, r3
 80013c8:	f44f 50a0 	mov.w	r0, #5120	; 0x1400
 80013cc:	f000 fc4a 	bl	8001c64 <WIZCHIP_READ>
 80013d0:	4603      	mov	r3, r0
 80013d2:	b29b      	uxth	r3, r3
 80013d4:	4423      	add	r3, r4
 80013d6:	b29a      	uxth	r2, r3
 80013d8:	683b      	ldr	r3, [r7, #0]
 80013da:	801a      	strh	r2, [r3, #0]
 80013dc:	e053      	b.n	8001486 <ctlwizchip+0x1b6>
 80013de:	4b2c      	ldr	r3, [pc, #176]	; (8001490 <ctlwizchip+0x1c0>)
 80013e0:	789a      	ldrb	r2, [r3, #2]
 80013e2:	683b      	ldr	r3, [r7, #0]
 80013e4:	701a      	strb	r2, [r3, #0]
 80013e6:	683b      	ldr	r3, [r7, #0]
 80013e8:	3301      	adds	r3, #1
 80013ea:	4a29      	ldr	r2, [pc, #164]	; (8001490 <ctlwizchip+0x1c0>)
 80013ec:	78d2      	ldrb	r2, [r2, #3]
 80013ee:	701a      	strb	r2, [r3, #0]
 80013f0:	683b      	ldr	r3, [r7, #0]
 80013f2:	3302      	adds	r3, #2
 80013f4:	4a26      	ldr	r2, [pc, #152]	; (8001490 <ctlwizchip+0x1c0>)
 80013f6:	7912      	ldrb	r2, [r2, #4]
 80013f8:	701a      	strb	r2, [r3, #0]
 80013fa:	683b      	ldr	r3, [r7, #0]
 80013fc:	3303      	adds	r3, #3
 80013fe:	4a24      	ldr	r2, [pc, #144]	; (8001490 <ctlwizchip+0x1c0>)
 8001400:	7952      	ldrb	r2, [r2, #5]
 8001402:	701a      	strb	r2, [r3, #0]
 8001404:	683b      	ldr	r3, [r7, #0]
 8001406:	3304      	adds	r3, #4
 8001408:	4a21      	ldr	r2, [pc, #132]	; (8001490 <ctlwizchip+0x1c0>)
 800140a:	7992      	ldrb	r2, [r2, #6]
 800140c:	701a      	strb	r2, [r3, #0]
 800140e:	683b      	ldr	r3, [r7, #0]
 8001410:	3305      	adds	r3, #5
 8001412:	4a1f      	ldr	r2, [pc, #124]	; (8001490 <ctlwizchip+0x1c0>)
 8001414:	79d2      	ldrb	r2, [r2, #7]
 8001416:	701a      	strb	r2, [r3, #0]
 8001418:	683b      	ldr	r3, [r7, #0]
 800141a:	3306      	adds	r3, #6
 800141c:	2200      	movs	r2, #0
 800141e:	701a      	strb	r2, [r3, #0]
 8001420:	e031      	b.n	8001486 <ctlwizchip+0x1b6>
 8001422:	f000 fa13 	bl	800184c <wizphy_reset>
 8001426:	e02e      	b.n	8001486 <ctlwizchip+0x1b6>
 8001428:	6838      	ldr	r0, [r7, #0]
 800142a:	f000 fa36 	bl	800189a <wizphy_setphyconf>
 800142e:	e02a      	b.n	8001486 <ctlwizchip+0x1b6>
 8001430:	6838      	ldr	r0, [r7, #0]
 8001432:	f000 fa75 	bl	8001920 <wizphy_getphyconf>
 8001436:	e026      	b.n	8001486 <ctlwizchip+0x1b6>
 8001438:	683b      	ldr	r3, [r7, #0]
 800143a:	781b      	ldrb	r3, [r3, #0]
 800143c:	4618      	mov	r0, r3
 800143e:	f000 fad9 	bl	80019f4 <wizphy_setphypmode>
 8001442:	4603      	mov	r3, r0
 8001444:	e020      	b.n	8001488 <ctlwizchip+0x1b8>
 8001446:	f000 f9e8 	bl	800181a <wizphy_getphypmode>
 800144a:	4603      	mov	r3, r0
 800144c:	75fb      	strb	r3, [r7, #23]
 800144e:	7dfb      	ldrb	r3, [r7, #23]
 8001450:	2bff      	cmp	r3, #255	; 0xff
 8001452:	d102      	bne.n	800145a <ctlwizchip+0x18a>
 8001454:	f04f 33ff 	mov.w	r3, #4294967295
 8001458:	e016      	b.n	8001488 <ctlwizchip+0x1b8>
 800145a:	683b      	ldr	r3, [r7, #0]
 800145c:	7dfa      	ldrb	r2, [r7, #23]
 800145e:	701a      	strb	r2, [r3, #0]
 8001460:	e011      	b.n	8001486 <ctlwizchip+0x1b6>
 8001462:	f000 f9c4 	bl	80017ee <wizphy_getphylink>
 8001466:	4603      	mov	r3, r0
 8001468:	75fb      	strb	r3, [r7, #23]
 800146a:	7dfb      	ldrb	r3, [r7, #23]
 800146c:	2bff      	cmp	r3, #255	; 0xff
 800146e:	d102      	bne.n	8001476 <ctlwizchip+0x1a6>
 8001470:	f04f 33ff 	mov.w	r3, #4294967295
 8001474:	e008      	b.n	8001488 <ctlwizchip+0x1b8>
 8001476:	683b      	ldr	r3, [r7, #0]
 8001478:	7dfa      	ldrb	r2, [r7, #23]
 800147a:	701a      	strb	r2, [r3, #0]
 800147c:	e003      	b.n	8001486 <ctlwizchip+0x1b6>
 800147e:	f04f 33ff 	mov.w	r3, #4294967295
 8001482:	e001      	b.n	8001488 <ctlwizchip+0x1b8>
 8001484:	bf00      	nop
 8001486:	2300      	movs	r3, #0
 8001488:	4618      	mov	r0, r3
 800148a:	371c      	adds	r7, #28
 800148c:	46bd      	mov	sp, r7
 800148e:	bd90      	pop	{r4, r7, pc}
 8001490:	20000020 	.word	0x20000020

08001494 <ctlnetwork>:
 8001494:	b580      	push	{r7, lr}
 8001496:	b082      	sub	sp, #8
 8001498:	af00      	add	r7, sp, #0
 800149a:	4603      	mov	r3, r0
 800149c:	6039      	str	r1, [r7, #0]
 800149e:	71fb      	strb	r3, [r7, #7]
 80014a0:	79fb      	ldrb	r3, [r7, #7]
 80014a2:	2b05      	cmp	r3, #5
 80014a4:	d82c      	bhi.n	8001500 <ctlnetwork+0x6c>
 80014a6:	a201      	add	r2, pc, #4	; (adr r2, 80014ac <ctlnetwork+0x18>)
 80014a8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80014ac:	080014c5 	.word	0x080014c5
 80014b0:	080014cd 	.word	0x080014cd
 80014b4:	080014d5 	.word	0x080014d5
 80014b8:	080014e3 	.word	0x080014e3
 80014bc:	080014f1 	.word	0x080014f1
 80014c0:	080014f9 	.word	0x080014f9
 80014c4:	6838      	ldr	r0, [r7, #0]
 80014c6:	f000 fadf 	bl	8001a88 <wizchip_setnetinfo>
 80014ca:	e01c      	b.n	8001506 <ctlnetwork+0x72>
 80014cc:	6838      	ldr	r0, [r7, #0]
 80014ce:	f000 fb1b 	bl	8001b08 <wizchip_getnetinfo>
 80014d2:	e018      	b.n	8001506 <ctlnetwork+0x72>
 80014d4:	683b      	ldr	r3, [r7, #0]
 80014d6:	781b      	ldrb	r3, [r3, #0]
 80014d8:	4618      	mov	r0, r3
 80014da:	f000 fb55 	bl	8001b88 <wizchip_setnetmode>
 80014de:	4603      	mov	r3, r0
 80014e0:	e012      	b.n	8001508 <ctlnetwork+0x74>
 80014e2:	f000 fb73 	bl	8001bcc <wizchip_getnetmode>
 80014e6:	4603      	mov	r3, r0
 80014e8:	461a      	mov	r2, r3
 80014ea:	683b      	ldr	r3, [r7, #0]
 80014ec:	701a      	strb	r2, [r3, #0]
 80014ee:	e00a      	b.n	8001506 <ctlnetwork+0x72>
 80014f0:	6838      	ldr	r0, [r7, #0]
 80014f2:	f000 fb73 	bl	8001bdc <wizchip_settimeout>
 80014f6:	e006      	b.n	8001506 <ctlnetwork+0x72>
 80014f8:	6838      	ldr	r0, [r7, #0]
 80014fa:	f000 fb90 	bl	8001c1e <wizchip_gettimeout>
 80014fe:	e002      	b.n	8001506 <ctlnetwork+0x72>
 8001500:	f04f 33ff 	mov.w	r3, #4294967295
 8001504:	e000      	b.n	8001508 <ctlnetwork+0x74>
 8001506:	2300      	movs	r3, #0
 8001508:	4618      	mov	r0, r3
 800150a:	3708      	adds	r7, #8
 800150c:	46bd      	mov	sp, r7
 800150e:	bd80      	pop	{r7, pc}

08001510 <wizchip_sw_reset>:
 8001510:	b580      	push	{r7, lr}
 8001512:	b086      	sub	sp, #24
 8001514:	af00      	add	r7, sp, #0
 8001516:	1d3b      	adds	r3, r7, #4
 8001518:	2206      	movs	r2, #6
 800151a:	4619      	mov	r1, r3
 800151c:	f44f 6010 	mov.w	r0, #2304	; 0x900
 8001520:	f000 fc3a 	bl	8001d98 <WIZCHIP_READ_BUF>
 8001524:	f107 0314 	add.w	r3, r7, #20
 8001528:	2204      	movs	r2, #4
 800152a:	4619      	mov	r1, r3
 800152c:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001530:	f000 fc32 	bl	8001d98 <WIZCHIP_READ_BUF>
 8001534:	f107 0310 	add.w	r3, r7, #16
 8001538:	2204      	movs	r2, #4
 800153a:	4619      	mov	r1, r3
 800153c:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 8001540:	f000 fc2a 	bl	8001d98 <WIZCHIP_READ_BUF>
 8001544:	f107 030c 	add.w	r3, r7, #12
 8001548:	2204      	movs	r2, #4
 800154a:	4619      	mov	r1, r3
 800154c:	f44f 6070 	mov.w	r0, #3840	; 0xf00
 8001550:	f000 fc22 	bl	8001d98 <WIZCHIP_READ_BUF>
 8001554:	2180      	movs	r1, #128	; 0x80
 8001556:	2000      	movs	r0, #0
 8001558:	f000 fbd0 	bl	8001cfc <WIZCHIP_WRITE>
 800155c:	2000      	movs	r0, #0
 800155e:	f000 fb81 	bl	8001c64 <WIZCHIP_READ>
 8001562:	1d3b      	adds	r3, r7, #4
 8001564:	2206      	movs	r2, #6
 8001566:	4619      	mov	r1, r3
 8001568:	f44f 6010 	mov.w	r0, #2304	; 0x900
 800156c:	f000 fc74 	bl	8001e58 <WIZCHIP_WRITE_BUF>
 8001570:	f107 0314 	add.w	r3, r7, #20
 8001574:	2204      	movs	r2, #4
 8001576:	4619      	mov	r1, r3
 8001578:	f44f 7080 	mov.w	r0, #256	; 0x100
 800157c:	f000 fc6c 	bl	8001e58 <WIZCHIP_WRITE_BUF>
 8001580:	f107 0310 	add.w	r3, r7, #16
 8001584:	2204      	movs	r2, #4
 8001586:	4619      	mov	r1, r3
 8001588:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800158c:	f000 fc64 	bl	8001e58 <WIZCHIP_WRITE_BUF>
 8001590:	f107 030c 	add.w	r3, r7, #12
 8001594:	2204      	movs	r2, #4
 8001596:	4619      	mov	r1, r3
 8001598:	f44f 6070 	mov.w	r0, #3840	; 0xf00
 800159c:	f000 fc5c 	bl	8001e58 <WIZCHIP_WRITE_BUF>
 80015a0:	bf00      	nop
 80015a2:	3718      	adds	r7, #24
 80015a4:	46bd      	mov	sp, r7
 80015a6:	bd80      	pop	{r7, pc}

080015a8 <wizchip_init>:
 80015a8:	b580      	push	{r7, lr}
 80015aa:	b084      	sub	sp, #16
 80015ac:	af00      	add	r7, sp, #0
 80015ae:	6078      	str	r0, [r7, #4]
 80015b0:	6039      	str	r1, [r7, #0]
 80015b2:	2300      	movs	r3, #0
 80015b4:	73bb      	strb	r3, [r7, #14]
 80015b6:	f7ff ffab 	bl	8001510 <wizchip_sw_reset>
 80015ba:	687b      	ldr	r3, [r7, #4]
 80015bc:	2b00      	cmp	r3, #0
 80015be:	d03b      	beq.n	8001638 <wizchip_init+0x90>
 80015c0:	2300      	movs	r3, #0
 80015c2:	73bb      	strb	r3, [r7, #14]
 80015c4:	2300      	movs	r3, #0
 80015c6:	73fb      	strb	r3, [r7, #15]
 80015c8:	e015      	b.n	80015f6 <wizchip_init+0x4e>
 80015ca:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80015ce:	687a      	ldr	r2, [r7, #4]
 80015d0:	4413      	add	r3, r2
 80015d2:	781a      	ldrb	r2, [r3, #0]
 80015d4:	7bbb      	ldrb	r3, [r7, #14]
 80015d6:	4413      	add	r3, r2
 80015d8:	b2db      	uxtb	r3, r3
 80015da:	73bb      	strb	r3, [r7, #14]
 80015dc:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80015e0:	2b10      	cmp	r3, #16
 80015e2:	dd02      	ble.n	80015ea <wizchip_init+0x42>
 80015e4:	f04f 33ff 	mov.w	r3, #4294967295
 80015e8:	e066      	b.n	80016b8 <wizchip_init+0x110>
 80015ea:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80015ee:	b2db      	uxtb	r3, r3
 80015f0:	3301      	adds	r3, #1
 80015f2:	b2db      	uxtb	r3, r3
 80015f4:	73fb      	strb	r3, [r7, #15]
 80015f6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80015fa:	2b07      	cmp	r3, #7
 80015fc:	dde5      	ble.n	80015ca <wizchip_init+0x22>
 80015fe:	2300      	movs	r3, #0
 8001600:	73fb      	strb	r3, [r7, #15]
 8001602:	e015      	b.n	8001630 <wizchip_init+0x88>
 8001604:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001608:	009b      	lsls	r3, r3, #2
 800160a:	3301      	adds	r3, #1
 800160c:	00db      	lsls	r3, r3, #3
 800160e:	f503 53f8 	add.w	r3, r3, #7936	; 0x1f00
 8001612:	4618      	mov	r0, r3
 8001614:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001618:	687a      	ldr	r2, [r7, #4]
 800161a:	4413      	add	r3, r2
 800161c:	781b      	ldrb	r3, [r3, #0]
 800161e:	4619      	mov	r1, r3
 8001620:	f000 fb6c 	bl	8001cfc <WIZCHIP_WRITE>
 8001624:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001628:	b2db      	uxtb	r3, r3
 800162a:	3301      	adds	r3, #1
 800162c:	b2db      	uxtb	r3, r3
 800162e:	73fb      	strb	r3, [r7, #15]
 8001630:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001634:	2b07      	cmp	r3, #7
 8001636:	dde5      	ble.n	8001604 <wizchip_init+0x5c>
 8001638:	683b      	ldr	r3, [r7, #0]
 800163a:	2b00      	cmp	r3, #0
 800163c:	d03b      	beq.n	80016b6 <wizchip_init+0x10e>
 800163e:	2300      	movs	r3, #0
 8001640:	73bb      	strb	r3, [r7, #14]
 8001642:	2300      	movs	r3, #0
 8001644:	73fb      	strb	r3, [r7, #15]
 8001646:	e015      	b.n	8001674 <wizchip_init+0xcc>
 8001648:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800164c:	683a      	ldr	r2, [r7, #0]
 800164e:	4413      	add	r3, r2
 8001650:	781a      	ldrb	r2, [r3, #0]
 8001652:	7bbb      	ldrb	r3, [r7, #14]
 8001654:	4413      	add	r3, r2
 8001656:	b2db      	uxtb	r3, r3
 8001658:	73bb      	strb	r3, [r7, #14]
 800165a:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800165e:	2b10      	cmp	r3, #16
 8001660:	dd02      	ble.n	8001668 <wizchip_init+0xc0>
 8001662:	f04f 33ff 	mov.w	r3, #4294967295
 8001666:	e027      	b.n	80016b8 <wizchip_init+0x110>
 8001668:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800166c:	b2db      	uxtb	r3, r3
 800166e:	3301      	adds	r3, #1
 8001670:	b2db      	uxtb	r3, r3
 8001672:	73fb      	strb	r3, [r7, #15]
 8001674:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001678:	2b07      	cmp	r3, #7
 800167a:	dde5      	ble.n	8001648 <wizchip_init+0xa0>
 800167c:	2300      	movs	r3, #0
 800167e:	73fb      	strb	r3, [r7, #15]
 8001680:	e015      	b.n	80016ae <wizchip_init+0x106>
 8001682:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001686:	009b      	lsls	r3, r3, #2
 8001688:	3301      	adds	r3, #1
 800168a:	00db      	lsls	r3, r3, #3
 800168c:	f503 53f0 	add.w	r3, r3, #7680	; 0x1e00
 8001690:	4618      	mov	r0, r3
 8001692:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001696:	683a      	ldr	r2, [r7, #0]
 8001698:	4413      	add	r3, r2
 800169a:	781b      	ldrb	r3, [r3, #0]
 800169c:	4619      	mov	r1, r3
 800169e:	f000 fb2d 	bl	8001cfc <WIZCHIP_WRITE>
 80016a2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80016a6:	b2db      	uxtb	r3, r3
 80016a8:	3301      	adds	r3, #1
 80016aa:	b2db      	uxtb	r3, r3
 80016ac:	73fb      	strb	r3, [r7, #15]
 80016ae:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80016b2:	2b07      	cmp	r3, #7
 80016b4:	dde5      	ble.n	8001682 <wizchip_init+0xda>
 80016b6:	2300      	movs	r3, #0
 80016b8:	4618      	mov	r0, r3
 80016ba:	3710      	adds	r7, #16
 80016bc:	46bd      	mov	sp, r7
 80016be:	bd80      	pop	{r7, pc}

080016c0 <wizchip_clrinterrupt>:
 80016c0:	b580      	push	{r7, lr}
 80016c2:	b084      	sub	sp, #16
 80016c4:	af00      	add	r7, sp, #0
 80016c6:	4603      	mov	r3, r0
 80016c8:	80fb      	strh	r3, [r7, #6]
 80016ca:	88fb      	ldrh	r3, [r7, #6]
 80016cc:	73fb      	strb	r3, [r7, #15]
 80016ce:	88fb      	ldrh	r3, [r7, #6]
 80016d0:	0a1b      	lsrs	r3, r3, #8
 80016d2:	b29b      	uxth	r3, r3
 80016d4:	73bb      	strb	r3, [r7, #14]
 80016d6:	7bfb      	ldrb	r3, [r7, #15]
 80016d8:	f023 030f 	bic.w	r3, r3, #15
 80016dc:	b2db      	uxtb	r3, r3
 80016de:	4619      	mov	r1, r3
 80016e0:	f44f 50a8 	mov.w	r0, #5376	; 0x1500
 80016e4:	f000 fb0a 	bl	8001cfc <WIZCHIP_WRITE>
 80016e8:	2300      	movs	r3, #0
 80016ea:	73fb      	strb	r3, [r7, #15]
 80016ec:	e014      	b.n	8001718 <wizchip_clrinterrupt+0x58>
 80016ee:	7bba      	ldrb	r2, [r7, #14]
 80016f0:	7bfb      	ldrb	r3, [r7, #15]
 80016f2:	fa42 f303 	asr.w	r3, r2, r3
 80016f6:	f003 0301 	and.w	r3, r3, #1
 80016fa:	2b00      	cmp	r3, #0
 80016fc:	d009      	beq.n	8001712 <wizchip_clrinterrupt+0x52>
 80016fe:	7bfb      	ldrb	r3, [r7, #15]
 8001700:	009b      	lsls	r3, r3, #2
 8001702:	3301      	adds	r3, #1
 8001704:	00db      	lsls	r3, r3, #3
 8001706:	f503 7300 	add.w	r3, r3, #512	; 0x200
 800170a:	211f      	movs	r1, #31
 800170c:	4618      	mov	r0, r3
 800170e:	f000 faf5 	bl	8001cfc <WIZCHIP_WRITE>
 8001712:	7bfb      	ldrb	r3, [r7, #15]
 8001714:	3301      	adds	r3, #1
 8001716:	73fb      	strb	r3, [r7, #15]
 8001718:	7bfb      	ldrb	r3, [r7, #15]
 800171a:	2b07      	cmp	r3, #7
 800171c:	d9e7      	bls.n	80016ee <wizchip_clrinterrupt+0x2e>
 800171e:	bf00      	nop
 8001720:	bf00      	nop
 8001722:	3710      	adds	r7, #16
 8001724:	46bd      	mov	sp, r7
 8001726:	bd80      	pop	{r7, pc}

08001728 <wizchip_getinterrupt>:
 8001728:	b580      	push	{r7, lr}
 800172a:	b082      	sub	sp, #8
 800172c:	af00      	add	r7, sp, #0
 800172e:	2300      	movs	r3, #0
 8001730:	71fb      	strb	r3, [r7, #7]
 8001732:	2300      	movs	r3, #0
 8001734:	71bb      	strb	r3, [r7, #6]
 8001736:	2300      	movs	r3, #0
 8001738:	80bb      	strh	r3, [r7, #4]
 800173a:	f44f 50a8 	mov.w	r0, #5376	; 0x1500
 800173e:	f000 fa91 	bl	8001c64 <WIZCHIP_READ>
 8001742:	4603      	mov	r3, r0
 8001744:	f023 030f 	bic.w	r3, r3, #15
 8001748:	71fb      	strb	r3, [r7, #7]
 800174a:	f44f 50b8 	mov.w	r0, #5888	; 0x1700
 800174e:	f000 fa89 	bl	8001c64 <WIZCHIP_READ>
 8001752:	4603      	mov	r3, r0
 8001754:	71bb      	strb	r3, [r7, #6]
 8001756:	79bb      	ldrb	r3, [r7, #6]
 8001758:	80bb      	strh	r3, [r7, #4]
 800175a:	88bb      	ldrh	r3, [r7, #4]
 800175c:	021b      	lsls	r3, r3, #8
 800175e:	b29a      	uxth	r2, r3
 8001760:	79fb      	ldrb	r3, [r7, #7]
 8001762:	b29b      	uxth	r3, r3
 8001764:	4413      	add	r3, r2
 8001766:	80bb      	strh	r3, [r7, #4]
 8001768:	88bb      	ldrh	r3, [r7, #4]
 800176a:	4618      	mov	r0, r3
 800176c:	3708      	adds	r7, #8
 800176e:	46bd      	mov	sp, r7
 8001770:	bd80      	pop	{r7, pc}

08001772 <wizchip_setinterruptmask>:
 8001772:	b580      	push	{r7, lr}
 8001774:	b084      	sub	sp, #16
 8001776:	af00      	add	r7, sp, #0
 8001778:	4603      	mov	r3, r0
 800177a:	80fb      	strh	r3, [r7, #6]
 800177c:	88fb      	ldrh	r3, [r7, #6]
 800177e:	73fb      	strb	r3, [r7, #15]
 8001780:	88fb      	ldrh	r3, [r7, #6]
 8001782:	0a1b      	lsrs	r3, r3, #8
 8001784:	b29b      	uxth	r3, r3
 8001786:	73bb      	strb	r3, [r7, #14]
 8001788:	7bfb      	ldrb	r3, [r7, #15]
 800178a:	4619      	mov	r1, r3
 800178c:	f44f 50b0 	mov.w	r0, #5632	; 0x1600
 8001790:	f000 fab4 	bl	8001cfc <WIZCHIP_WRITE>
 8001794:	7bbb      	ldrb	r3, [r7, #14]
 8001796:	4619      	mov	r1, r3
 8001798:	f44f 50c0 	mov.w	r0, #6144	; 0x1800
 800179c:	f000 faae 	bl	8001cfc <WIZCHIP_WRITE>
 80017a0:	bf00      	nop
 80017a2:	3710      	adds	r7, #16
 80017a4:	46bd      	mov	sp, r7
 80017a6:	bd80      	pop	{r7, pc}

080017a8 <wizchip_getinterruptmask>:
 80017a8:	b580      	push	{r7, lr}
 80017aa:	b082      	sub	sp, #8
 80017ac:	af00      	add	r7, sp, #0
 80017ae:	2300      	movs	r3, #0
 80017b0:	71fb      	strb	r3, [r7, #7]
 80017b2:	2300      	movs	r3, #0
 80017b4:	71bb      	strb	r3, [r7, #6]
 80017b6:	2300      	movs	r3, #0
 80017b8:	80bb      	strh	r3, [r7, #4]
 80017ba:	f44f 50b0 	mov.w	r0, #5632	; 0x1600
 80017be:	f000 fa51 	bl	8001c64 <WIZCHIP_READ>
 80017c2:	4603      	mov	r3, r0
 80017c4:	71fb      	strb	r3, [r7, #7]
 80017c6:	f44f 50c0 	mov.w	r0, #6144	; 0x1800
 80017ca:	f000 fa4b 	bl	8001c64 <WIZCHIP_READ>
 80017ce:	4603      	mov	r3, r0
 80017d0:	71bb      	strb	r3, [r7, #6]
 80017d2:	79bb      	ldrb	r3, [r7, #6]
 80017d4:	80bb      	strh	r3, [r7, #4]
 80017d6:	88bb      	ldrh	r3, [r7, #4]
 80017d8:	021b      	lsls	r3, r3, #8
 80017da:	b29a      	uxth	r2, r3
 80017dc:	79fb      	ldrb	r3, [r7, #7]
 80017de:	b29b      	uxth	r3, r3
 80017e0:	4413      	add	r3, r2
 80017e2:	80bb      	strh	r3, [r7, #4]
 80017e4:	88bb      	ldrh	r3, [r7, #4]
 80017e6:	4618      	mov	r0, r3
 80017e8:	3708      	adds	r7, #8
 80017ea:	46bd      	mov	sp, r7
 80017ec:	bd80      	pop	{r7, pc}

080017ee <wizphy_getphylink>:
 80017ee:	b580      	push	{r7, lr}
 80017f0:	b082      	sub	sp, #8
 80017f2:	af00      	add	r7, sp, #0
 80017f4:	2300      	movs	r3, #0
 80017f6:	71fb      	strb	r3, [r7, #7]
 80017f8:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 80017fc:	f000 fa32 	bl	8001c64 <WIZCHIP_READ>
 8001800:	4603      	mov	r3, r0
 8001802:	f003 0301 	and.w	r3, r3, #1
 8001806:	2b00      	cmp	r3, #0
 8001808:	d001      	beq.n	800180e <wizphy_getphylink+0x20>
 800180a:	2301      	movs	r3, #1
 800180c:	71fb      	strb	r3, [r7, #7]
 800180e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001812:	4618      	mov	r0, r3
 8001814:	3708      	adds	r7, #8
 8001816:	46bd      	mov	sp, r7
 8001818:	bd80      	pop	{r7, pc}

0800181a <wizphy_getphypmode>:
 800181a:	b580      	push	{r7, lr}
 800181c:	b082      	sub	sp, #8
 800181e:	af00      	add	r7, sp, #0
 8001820:	2300      	movs	r3, #0
 8001822:	71fb      	strb	r3, [r7, #7]
 8001824:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8001828:	f000 fa1c 	bl	8001c64 <WIZCHIP_READ>
 800182c:	4603      	mov	r3, r0
 800182e:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8001832:	2b30      	cmp	r3, #48	; 0x30
 8001834:	d102      	bne.n	800183c <wizphy_getphypmode+0x22>
 8001836:	2301      	movs	r3, #1
 8001838:	71fb      	strb	r3, [r7, #7]
 800183a:	e001      	b.n	8001840 <wizphy_getphypmode+0x26>
 800183c:	2300      	movs	r3, #0
 800183e:	71fb      	strb	r3, [r7, #7]
 8001840:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001844:	4618      	mov	r0, r3
 8001846:	3708      	adds	r7, #8
 8001848:	46bd      	mov	sp, r7
 800184a:	bd80      	pop	{r7, pc}

0800184c <wizphy_reset>:
 800184c:	b580      	push	{r7, lr}
 800184e:	b082      	sub	sp, #8
 8001850:	af00      	add	r7, sp, #0
 8001852:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8001856:	f000 fa05 	bl	8001c64 <WIZCHIP_READ>
 800185a:	4603      	mov	r3, r0
 800185c:	71fb      	strb	r3, [r7, #7]
 800185e:	79fb      	ldrb	r3, [r7, #7]
 8001860:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8001864:	71fb      	strb	r3, [r7, #7]
 8001866:	79fb      	ldrb	r3, [r7, #7]
 8001868:	4619      	mov	r1, r3
 800186a:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 800186e:	f000 fa45 	bl	8001cfc <WIZCHIP_WRITE>
 8001872:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8001876:	f000 f9f5 	bl	8001c64 <WIZCHIP_READ>
 800187a:	4603      	mov	r3, r0
 800187c:	71fb      	strb	r3, [r7, #7]
 800187e:	79fb      	ldrb	r3, [r7, #7]
 8001880:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8001884:	71fb      	strb	r3, [r7, #7]
 8001886:	79fb      	ldrb	r3, [r7, #7]
 8001888:	4619      	mov	r1, r3
 800188a:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 800188e:	f000 fa35 	bl	8001cfc <WIZCHIP_WRITE>
 8001892:	bf00      	nop
 8001894:	3708      	adds	r7, #8
 8001896:	46bd      	mov	sp, r7
 8001898:	bd80      	pop	{r7, pc}

0800189a <wizphy_setphyconf>:
 800189a:	b580      	push	{r7, lr}
 800189c:	b084      	sub	sp, #16
 800189e:	af00      	add	r7, sp, #0
 80018a0:	6078      	str	r0, [r7, #4]
 80018a2:	2300      	movs	r3, #0
 80018a4:	73fb      	strb	r3, [r7, #15]
 80018a6:	687b      	ldr	r3, [r7, #4]
 80018a8:	781b      	ldrb	r3, [r3, #0]
 80018aa:	2b01      	cmp	r3, #1
 80018ac:	d104      	bne.n	80018b8 <wizphy_setphyconf+0x1e>
 80018ae:	7bfb      	ldrb	r3, [r7, #15]
 80018b0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80018b4:	73fb      	strb	r3, [r7, #15]
 80018b6:	e003      	b.n	80018c0 <wizphy_setphyconf+0x26>
 80018b8:	7bfb      	ldrb	r3, [r7, #15]
 80018ba:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80018be:	73fb      	strb	r3, [r7, #15]
 80018c0:	687b      	ldr	r3, [r7, #4]
 80018c2:	785b      	ldrb	r3, [r3, #1]
 80018c4:	2b01      	cmp	r3, #1
 80018c6:	d104      	bne.n	80018d2 <wizphy_setphyconf+0x38>
 80018c8:	7bfb      	ldrb	r3, [r7, #15]
 80018ca:	f043 0338 	orr.w	r3, r3, #56	; 0x38
 80018ce:	73fb      	strb	r3, [r7, #15]
 80018d0:	e019      	b.n	8001906 <wizphy_setphyconf+0x6c>
 80018d2:	687b      	ldr	r3, [r7, #4]
 80018d4:	78db      	ldrb	r3, [r3, #3]
 80018d6:	2b01      	cmp	r3, #1
 80018d8:	d10d      	bne.n	80018f6 <wizphy_setphyconf+0x5c>
 80018da:	687b      	ldr	r3, [r7, #4]
 80018dc:	789b      	ldrb	r3, [r3, #2]
 80018de:	2b01      	cmp	r3, #1
 80018e0:	d104      	bne.n	80018ec <wizphy_setphyconf+0x52>
 80018e2:	7bfb      	ldrb	r3, [r7, #15]
 80018e4:	f043 0318 	orr.w	r3, r3, #24
 80018e8:	73fb      	strb	r3, [r7, #15]
 80018ea:	e00c      	b.n	8001906 <wizphy_setphyconf+0x6c>
 80018ec:	7bfb      	ldrb	r3, [r7, #15]
 80018ee:	f043 0308 	orr.w	r3, r3, #8
 80018f2:	73fb      	strb	r3, [r7, #15]
 80018f4:	e007      	b.n	8001906 <wizphy_setphyconf+0x6c>
 80018f6:	687b      	ldr	r3, [r7, #4]
 80018f8:	789b      	ldrb	r3, [r3, #2]
 80018fa:	2b01      	cmp	r3, #1
 80018fc:	d103      	bne.n	8001906 <wizphy_setphyconf+0x6c>
 80018fe:	7bfb      	ldrb	r3, [r7, #15]
 8001900:	f043 0310 	orr.w	r3, r3, #16
 8001904:	73fb      	strb	r3, [r7, #15]
 8001906:	7bfb      	ldrb	r3, [r7, #15]
 8001908:	4619      	mov	r1, r3
 800190a:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 800190e:	f000 f9f5 	bl	8001cfc <WIZCHIP_WRITE>
 8001912:	f7ff ff9b 	bl	800184c <wizphy_reset>
 8001916:	bf00      	nop
 8001918:	3710      	adds	r7, #16
 800191a:	46bd      	mov	sp, r7
 800191c:	bd80      	pop	{r7, pc}
	...

08001920 <wizphy_getphyconf>:
 8001920:	b580      	push	{r7, lr}
 8001922:	b084      	sub	sp, #16
 8001924:	af00      	add	r7, sp, #0
 8001926:	6078      	str	r0, [r7, #4]
 8001928:	2300      	movs	r3, #0
 800192a:	73fb      	strb	r3, [r7, #15]
 800192c:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8001930:	f000 f998 	bl	8001c64 <WIZCHIP_READ>
 8001934:	4603      	mov	r3, r0
 8001936:	73fb      	strb	r3, [r7, #15]
 8001938:	7bfb      	ldrb	r3, [r7, #15]
 800193a:	119b      	asrs	r3, r3, #6
 800193c:	b2db      	uxtb	r3, r3
 800193e:	f003 0301 	and.w	r3, r3, #1
 8001942:	b2da      	uxtb	r2, r3
 8001944:	687b      	ldr	r3, [r7, #4]
 8001946:	701a      	strb	r2, [r3, #0]
 8001948:	7bfb      	ldrb	r3, [r7, #15]
 800194a:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800194e:	2b20      	cmp	r3, #32
 8001950:	d001      	beq.n	8001956 <wizphy_getphyconf+0x36>
 8001952:	2b38      	cmp	r3, #56	; 0x38
 8001954:	d103      	bne.n	800195e <wizphy_getphyconf+0x3e>
 8001956:	687b      	ldr	r3, [r7, #4]
 8001958:	2201      	movs	r2, #1
 800195a:	705a      	strb	r2, [r3, #1]
 800195c:	e003      	b.n	8001966 <wizphy_getphyconf+0x46>
 800195e:	687b      	ldr	r3, [r7, #4]
 8001960:	2200      	movs	r2, #0
 8001962:	705a      	strb	r2, [r3, #1]
 8001964:	bf00      	nop
 8001966:	7bfb      	ldrb	r3, [r7, #15]
 8001968:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800196c:	3b10      	subs	r3, #16
 800196e:	2b10      	cmp	r3, #16
 8001970:	bf8c      	ite	hi
 8001972:	2201      	movhi	r2, #1
 8001974:	2200      	movls	r2, #0
 8001976:	b2d2      	uxtb	r2, r2
 8001978:	2a00      	cmp	r2, #0
 800197a:	d10f      	bne.n	800199c <wizphy_getphyconf+0x7c>
 800197c:	4a1b      	ldr	r2, [pc, #108]	; (80019ec <wizphy_getphyconf+0xcc>)
 800197e:	fa22 f303 	lsr.w	r3, r2, r3
 8001982:	f003 0301 	and.w	r3, r3, #1
 8001986:	2b00      	cmp	r3, #0
 8001988:	bf14      	ite	ne
 800198a:	2301      	movne	r3, #1
 800198c:	2300      	moveq	r3, #0
 800198e:	b2db      	uxtb	r3, r3
 8001990:	2b00      	cmp	r3, #0
 8001992:	d003      	beq.n	800199c <wizphy_getphyconf+0x7c>
 8001994:	687b      	ldr	r3, [r7, #4]
 8001996:	2201      	movs	r2, #1
 8001998:	709a      	strb	r2, [r3, #2]
 800199a:	e003      	b.n	80019a4 <wizphy_getphyconf+0x84>
 800199c:	687b      	ldr	r3, [r7, #4]
 800199e:	2200      	movs	r2, #0
 80019a0:	709a      	strb	r2, [r3, #2]
 80019a2:	bf00      	nop
 80019a4:	7bfb      	ldrb	r3, [r7, #15]
 80019a6:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80019aa:	3b08      	subs	r3, #8
 80019ac:	2b18      	cmp	r3, #24
 80019ae:	bf8c      	ite	hi
 80019b0:	2201      	movhi	r2, #1
 80019b2:	2200      	movls	r2, #0
 80019b4:	b2d2      	uxtb	r2, r2
 80019b6:	2a00      	cmp	r2, #0
 80019b8:	d10f      	bne.n	80019da <wizphy_getphyconf+0xba>
 80019ba:	4a0d      	ldr	r2, [pc, #52]	; (80019f0 <wizphy_getphyconf+0xd0>)
 80019bc:	fa22 f303 	lsr.w	r3, r2, r3
 80019c0:	f003 0301 	and.w	r3, r3, #1
 80019c4:	2b00      	cmp	r3, #0
 80019c6:	bf14      	ite	ne
 80019c8:	2301      	movne	r3, #1
 80019ca:	2300      	moveq	r3, #0
 80019cc:	b2db      	uxtb	r3, r3
 80019ce:	2b00      	cmp	r3, #0
 80019d0:	d003      	beq.n	80019da <wizphy_getphyconf+0xba>
 80019d2:	687b      	ldr	r3, [r7, #4]
 80019d4:	2201      	movs	r2, #1
 80019d6:	70da      	strb	r2, [r3, #3]
 80019d8:	e003      	b.n	80019e2 <wizphy_getphyconf+0xc2>
 80019da:	687b      	ldr	r3, [r7, #4]
 80019dc:	2200      	movs	r2, #0
 80019de:	70da      	strb	r2, [r3, #3]
 80019e0:	bf00      	nop
 80019e2:	bf00      	nop
 80019e4:	3710      	adds	r7, #16
 80019e6:	46bd      	mov	sp, r7
 80019e8:	bd80      	pop	{r7, pc}
 80019ea:	bf00      	nop
 80019ec:	00010101 	.word	0x00010101
 80019f0:	01010001 	.word	0x01010001

080019f4 <wizphy_setphypmode>:
 80019f4:	b580      	push	{r7, lr}
 80019f6:	b084      	sub	sp, #16
 80019f8:	af00      	add	r7, sp, #0
 80019fa:	4603      	mov	r3, r0
 80019fc:	71fb      	strb	r3, [r7, #7]
 80019fe:	2300      	movs	r3, #0
 8001a00:	73fb      	strb	r3, [r7, #15]
 8001a02:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8001a06:	f000 f92d 	bl	8001c64 <WIZCHIP_READ>
 8001a0a:	4603      	mov	r3, r0
 8001a0c:	73fb      	strb	r3, [r7, #15]
 8001a0e:	7bfb      	ldrb	r3, [r7, #15]
 8001a10:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001a14:	2b00      	cmp	r3, #0
 8001a16:	d102      	bne.n	8001a1e <wizphy_setphypmode+0x2a>
 8001a18:	f04f 33ff 	mov.w	r3, #4294967295
 8001a1c:	e030      	b.n	8001a80 <wizphy_setphypmode+0x8c>
 8001a1e:	7bfb      	ldrb	r3, [r7, #15]
 8001a20:	f023 0338 	bic.w	r3, r3, #56	; 0x38
 8001a24:	73fb      	strb	r3, [r7, #15]
 8001a26:	79fb      	ldrb	r3, [r7, #7]
 8001a28:	2b01      	cmp	r3, #1
 8001a2a:	d104      	bne.n	8001a36 <wizphy_setphypmode+0x42>
 8001a2c:	7bfb      	ldrb	r3, [r7, #15]
 8001a2e:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 8001a32:	73fb      	strb	r3, [r7, #15]
 8001a34:	e003      	b.n	8001a3e <wizphy_setphypmode+0x4a>
 8001a36:	7bfb      	ldrb	r3, [r7, #15]
 8001a38:	f043 0338 	orr.w	r3, r3, #56	; 0x38
 8001a3c:	73fb      	strb	r3, [r7, #15]
 8001a3e:	7bfb      	ldrb	r3, [r7, #15]
 8001a40:	4619      	mov	r1, r3
 8001a42:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8001a46:	f000 f959 	bl	8001cfc <WIZCHIP_WRITE>
 8001a4a:	f7ff feff 	bl	800184c <wizphy_reset>
 8001a4e:	f44f 5038 	mov.w	r0, #11776	; 0x2e00
 8001a52:	f000 f907 	bl	8001c64 <WIZCHIP_READ>
 8001a56:	4603      	mov	r3, r0
 8001a58:	73fb      	strb	r3, [r7, #15]
 8001a5a:	79fb      	ldrb	r3, [r7, #7]
 8001a5c:	2b01      	cmp	r3, #1
 8001a5e:	d106      	bne.n	8001a6e <wizphy_setphypmode+0x7a>
 8001a60:	7bfb      	ldrb	r3, [r7, #15]
 8001a62:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8001a66:	2b00      	cmp	r3, #0
 8001a68:	d008      	beq.n	8001a7c <wizphy_setphypmode+0x88>
 8001a6a:	2300      	movs	r3, #0
 8001a6c:	e008      	b.n	8001a80 <wizphy_setphypmode+0x8c>
 8001a6e:	7bfb      	ldrb	r3, [r7, #15]
 8001a70:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8001a74:	2b00      	cmp	r3, #0
 8001a76:	d001      	beq.n	8001a7c <wizphy_setphypmode+0x88>
 8001a78:	2300      	movs	r3, #0
 8001a7a:	e001      	b.n	8001a80 <wizphy_setphypmode+0x8c>
 8001a7c:	f04f 33ff 	mov.w	r3, #4294967295
 8001a80:	4618      	mov	r0, r3
 8001a82:	3710      	adds	r7, #16
 8001a84:	46bd      	mov	sp, r7
 8001a86:	bd80      	pop	{r7, pc}

08001a88 <wizchip_setnetinfo>:
 8001a88:	b580      	push	{r7, lr}
 8001a8a:	b082      	sub	sp, #8
 8001a8c:	af00      	add	r7, sp, #0
 8001a8e:	6078      	str	r0, [r7, #4]
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	2206      	movs	r2, #6
 8001a94:	4619      	mov	r1, r3
 8001a96:	f44f 6010 	mov.w	r0, #2304	; 0x900
 8001a9a:	f000 f9dd 	bl	8001e58 <WIZCHIP_WRITE_BUF>
 8001a9e:	687b      	ldr	r3, [r7, #4]
 8001aa0:	330e      	adds	r3, #14
 8001aa2:	2204      	movs	r2, #4
 8001aa4:	4619      	mov	r1, r3
 8001aa6:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001aaa:	f000 f9d5 	bl	8001e58 <WIZCHIP_WRITE_BUF>
 8001aae:	687b      	ldr	r3, [r7, #4]
 8001ab0:	330a      	adds	r3, #10
 8001ab2:	2204      	movs	r2, #4
 8001ab4:	4619      	mov	r1, r3
 8001ab6:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 8001aba:	f000 f9cd 	bl	8001e58 <WIZCHIP_WRITE_BUF>
 8001abe:	687b      	ldr	r3, [r7, #4]
 8001ac0:	3306      	adds	r3, #6
 8001ac2:	2204      	movs	r2, #4
 8001ac4:	4619      	mov	r1, r3
 8001ac6:	f44f 6070 	mov.w	r0, #3840	; 0xf00
 8001aca:	f000 f9c5 	bl	8001e58 <WIZCHIP_WRITE_BUF>
 8001ace:	687b      	ldr	r3, [r7, #4]
 8001ad0:	7c9a      	ldrb	r2, [r3, #18]
 8001ad2:	4b0b      	ldr	r3, [pc, #44]	; (8001b00 <wizchip_setnetinfo+0x78>)
 8001ad4:	701a      	strb	r2, [r3, #0]
 8001ad6:	687b      	ldr	r3, [r7, #4]
 8001ad8:	7cda      	ldrb	r2, [r3, #19]
 8001ada:	4b09      	ldr	r3, [pc, #36]	; (8001b00 <wizchip_setnetinfo+0x78>)
 8001adc:	705a      	strb	r2, [r3, #1]
 8001ade:	687b      	ldr	r3, [r7, #4]
 8001ae0:	7d1a      	ldrb	r2, [r3, #20]
 8001ae2:	4b07      	ldr	r3, [pc, #28]	; (8001b00 <wizchip_setnetinfo+0x78>)
 8001ae4:	709a      	strb	r2, [r3, #2]
 8001ae6:	687b      	ldr	r3, [r7, #4]
 8001ae8:	7d5a      	ldrb	r2, [r3, #21]
 8001aea:	4b05      	ldr	r3, [pc, #20]	; (8001b00 <wizchip_setnetinfo+0x78>)
 8001aec:	70da      	strb	r2, [r3, #3]
 8001aee:	687b      	ldr	r3, [r7, #4]
 8001af0:	7d9a      	ldrb	r2, [r3, #22]
 8001af2:	4b04      	ldr	r3, [pc, #16]	; (8001b04 <wizchip_setnetinfo+0x7c>)
 8001af4:	701a      	strb	r2, [r3, #0]
 8001af6:	bf00      	nop
 8001af8:	3708      	adds	r7, #8
 8001afa:	46bd      	mov	sp, r7
 8001afc:	bd80      	pop	{r7, pc}
 8001afe:	bf00      	nop
 8001b00:	200007dc 	.word	0x200007dc
 8001b04:	200007e0 	.word	0x200007e0

08001b08 <wizchip_getnetinfo>:
 8001b08:	b580      	push	{r7, lr}
 8001b0a:	b082      	sub	sp, #8
 8001b0c:	af00      	add	r7, sp, #0
 8001b0e:	6078      	str	r0, [r7, #4]
 8001b10:	687b      	ldr	r3, [r7, #4]
 8001b12:	2206      	movs	r2, #6
 8001b14:	4619      	mov	r1, r3
 8001b16:	f44f 6010 	mov.w	r0, #2304	; 0x900
 8001b1a:	f000 f93d 	bl	8001d98 <WIZCHIP_READ_BUF>
 8001b1e:	687b      	ldr	r3, [r7, #4]
 8001b20:	330e      	adds	r3, #14
 8001b22:	2204      	movs	r2, #4
 8001b24:	4619      	mov	r1, r3
 8001b26:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001b2a:	f000 f935 	bl	8001d98 <WIZCHIP_READ_BUF>
 8001b2e:	687b      	ldr	r3, [r7, #4]
 8001b30:	330a      	adds	r3, #10
 8001b32:	2204      	movs	r2, #4
 8001b34:	4619      	mov	r1, r3
 8001b36:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 8001b3a:	f000 f92d 	bl	8001d98 <WIZCHIP_READ_BUF>
 8001b3e:	687b      	ldr	r3, [r7, #4]
 8001b40:	3306      	adds	r3, #6
 8001b42:	2204      	movs	r2, #4
 8001b44:	4619      	mov	r1, r3
 8001b46:	f44f 6070 	mov.w	r0, #3840	; 0xf00
 8001b4a:	f000 f925 	bl	8001d98 <WIZCHIP_READ_BUF>
 8001b4e:	4b0c      	ldr	r3, [pc, #48]	; (8001b80 <wizchip_getnetinfo+0x78>)
 8001b50:	781a      	ldrb	r2, [r3, #0]
 8001b52:	687b      	ldr	r3, [r7, #4]
 8001b54:	749a      	strb	r2, [r3, #18]
 8001b56:	4b0a      	ldr	r3, [pc, #40]	; (8001b80 <wizchip_getnetinfo+0x78>)
 8001b58:	785a      	ldrb	r2, [r3, #1]
 8001b5a:	687b      	ldr	r3, [r7, #4]
 8001b5c:	74da      	strb	r2, [r3, #19]
 8001b5e:	4b08      	ldr	r3, [pc, #32]	; (8001b80 <wizchip_getnetinfo+0x78>)
 8001b60:	789a      	ldrb	r2, [r3, #2]
 8001b62:	687b      	ldr	r3, [r7, #4]
 8001b64:	751a      	strb	r2, [r3, #20]
 8001b66:	4b06      	ldr	r3, [pc, #24]	; (8001b80 <wizchip_getnetinfo+0x78>)
 8001b68:	78da      	ldrb	r2, [r3, #3]
 8001b6a:	687b      	ldr	r3, [r7, #4]
 8001b6c:	755a      	strb	r2, [r3, #21]
 8001b6e:	4b05      	ldr	r3, [pc, #20]	; (8001b84 <wizchip_getnetinfo+0x7c>)
 8001b70:	781a      	ldrb	r2, [r3, #0]
 8001b72:	687b      	ldr	r3, [r7, #4]
 8001b74:	759a      	strb	r2, [r3, #22]
 8001b76:	bf00      	nop
 8001b78:	3708      	adds	r7, #8
 8001b7a:	46bd      	mov	sp, r7
 8001b7c:	bd80      	pop	{r7, pc}
 8001b7e:	bf00      	nop
 8001b80:	200007dc 	.word	0x200007dc
 8001b84:	200007e0 	.word	0x200007e0

08001b88 <wizchip_setnetmode>:
 8001b88:	b580      	push	{r7, lr}
 8001b8a:	b084      	sub	sp, #16
 8001b8c:	af00      	add	r7, sp, #0
 8001b8e:	4603      	mov	r3, r0
 8001b90:	71fb      	strb	r3, [r7, #7]
 8001b92:	2300      	movs	r3, #0
 8001b94:	73fb      	strb	r3, [r7, #15]
 8001b96:	79fb      	ldrb	r3, [r7, #7]
 8001b98:	f023 033a 	bic.w	r3, r3, #58	; 0x3a
 8001b9c:	2b00      	cmp	r3, #0
 8001b9e:	d002      	beq.n	8001ba6 <wizchip_setnetmode+0x1e>
 8001ba0:	f04f 33ff 	mov.w	r3, #4294967295
 8001ba4:	e00e      	b.n	8001bc4 <wizchip_setnetmode+0x3c>
 8001ba6:	2000      	movs	r0, #0
 8001ba8:	f000 f85c 	bl	8001c64 <WIZCHIP_READ>
 8001bac:	4603      	mov	r3, r0
 8001bae:	73fb      	strb	r3, [r7, #15]
 8001bb0:	7bfa      	ldrb	r2, [r7, #15]
 8001bb2:	79fb      	ldrb	r3, [r7, #7]
 8001bb4:	4313      	orrs	r3, r2
 8001bb6:	73fb      	strb	r3, [r7, #15]
 8001bb8:	7bfb      	ldrb	r3, [r7, #15]
 8001bba:	4619      	mov	r1, r3
 8001bbc:	2000      	movs	r0, #0
 8001bbe:	f000 f89d 	bl	8001cfc <WIZCHIP_WRITE>
 8001bc2:	2300      	movs	r3, #0
 8001bc4:	4618      	mov	r0, r3
 8001bc6:	3710      	adds	r7, #16
 8001bc8:	46bd      	mov	sp, r7
 8001bca:	bd80      	pop	{r7, pc}

08001bcc <wizchip_getnetmode>:
 8001bcc:	b580      	push	{r7, lr}
 8001bce:	af00      	add	r7, sp, #0
 8001bd0:	2000      	movs	r0, #0
 8001bd2:	f000 f847 	bl	8001c64 <WIZCHIP_READ>
 8001bd6:	4603      	mov	r3, r0
 8001bd8:	4618      	mov	r0, r3
 8001bda:	bd80      	pop	{r7, pc}

08001bdc <wizchip_settimeout>:
 8001bdc:	b580      	push	{r7, lr}
 8001bde:	b082      	sub	sp, #8
 8001be0:	af00      	add	r7, sp, #0
 8001be2:	6078      	str	r0, [r7, #4]
 8001be4:	687b      	ldr	r3, [r7, #4]
 8001be6:	781b      	ldrb	r3, [r3, #0]
 8001be8:	4619      	mov	r1, r3
 8001bea:	f44f 50d8 	mov.w	r0, #6912	; 0x1b00
 8001bee:	f000 f885 	bl	8001cfc <WIZCHIP_WRITE>
 8001bf2:	687b      	ldr	r3, [r7, #4]
 8001bf4:	885b      	ldrh	r3, [r3, #2]
 8001bf6:	0a1b      	lsrs	r3, r3, #8
 8001bf8:	b29b      	uxth	r3, r3
 8001bfa:	b2db      	uxtb	r3, r3
 8001bfc:	4619      	mov	r1, r3
 8001bfe:	f44f 50c8 	mov.w	r0, #6400	; 0x1900
 8001c02:	f000 f87b 	bl	8001cfc <WIZCHIP_WRITE>
 8001c06:	687b      	ldr	r3, [r7, #4]
 8001c08:	885b      	ldrh	r3, [r3, #2]
 8001c0a:	b2db      	uxtb	r3, r3
 8001c0c:	4619      	mov	r1, r3
 8001c0e:	f44f 50d0 	mov.w	r0, #6656	; 0x1a00
 8001c12:	f000 f873 	bl	8001cfc <WIZCHIP_WRITE>
 8001c16:	bf00      	nop
 8001c18:	3708      	adds	r7, #8
 8001c1a:	46bd      	mov	sp, r7
 8001c1c:	bd80      	pop	{r7, pc}

08001c1e <wizchip_gettimeout>:
 8001c1e:	b590      	push	{r4, r7, lr}
 8001c20:	b083      	sub	sp, #12
 8001c22:	af00      	add	r7, sp, #0
 8001c24:	6078      	str	r0, [r7, #4]
 8001c26:	f44f 50d8 	mov.w	r0, #6912	; 0x1b00
 8001c2a:	f000 f81b 	bl	8001c64 <WIZCHIP_READ>
 8001c2e:	4603      	mov	r3, r0
 8001c30:	461a      	mov	r2, r3
 8001c32:	687b      	ldr	r3, [r7, #4]
 8001c34:	701a      	strb	r2, [r3, #0]
 8001c36:	f44f 50c8 	mov.w	r0, #6400	; 0x1900
 8001c3a:	f000 f813 	bl	8001c64 <WIZCHIP_READ>
 8001c3e:	4603      	mov	r3, r0
 8001c40:	b29b      	uxth	r3, r3
 8001c42:	021b      	lsls	r3, r3, #8
 8001c44:	b29c      	uxth	r4, r3
 8001c46:	f44f 50d0 	mov.w	r0, #6656	; 0x1a00
 8001c4a:	f000 f80b 	bl	8001c64 <WIZCHIP_READ>
 8001c4e:	4603      	mov	r3, r0
 8001c50:	b29b      	uxth	r3, r3
 8001c52:	4423      	add	r3, r4
 8001c54:	b29a      	uxth	r2, r3
 8001c56:	687b      	ldr	r3, [r7, #4]
 8001c58:	805a      	strh	r2, [r3, #2]
 8001c5a:	bf00      	nop
 8001c5c:	370c      	adds	r7, #12
 8001c5e:	46bd      	mov	sp, r7
 8001c60:	bd90      	pop	{r4, r7, pc}
	...

08001c64 <WIZCHIP_READ>:
 8001c64:	b580      	push	{r7, lr}
 8001c66:	b084      	sub	sp, #16
 8001c68:	af00      	add	r7, sp, #0
 8001c6a:	6078      	str	r0, [r7, #4]
 8001c6c:	4b22      	ldr	r3, [pc, #136]	; (8001cf8 <WIZCHIP_READ+0x94>)
 8001c6e:	68db      	ldr	r3, [r3, #12]
 8001c70:	4798      	blx	r3
 8001c72:	4b21      	ldr	r3, [pc, #132]	; (8001cf8 <WIZCHIP_READ+0x94>)
 8001c74:	695b      	ldr	r3, [r3, #20]
 8001c76:	4798      	blx	r3
 8001c78:	4b1f      	ldr	r3, [pc, #124]	; (8001cf8 <WIZCHIP_READ+0x94>)
 8001c7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001c7c:	2b00      	cmp	r3, #0
 8001c7e:	d003      	beq.n	8001c88 <WIZCHIP_READ+0x24>
 8001c80:	4b1d      	ldr	r3, [pc, #116]	; (8001cf8 <WIZCHIP_READ+0x94>)
 8001c82:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001c84:	2b00      	cmp	r3, #0
 8001c86:	d114      	bne.n	8001cb2 <WIZCHIP_READ+0x4e>
 8001c88:	4b1b      	ldr	r3, [pc, #108]	; (8001cf8 <WIZCHIP_READ+0x94>)
 8001c8a:	6a1b      	ldr	r3, [r3, #32]
 8001c8c:	687a      	ldr	r2, [r7, #4]
 8001c8e:	0c12      	lsrs	r2, r2, #16
 8001c90:	b2d2      	uxtb	r2, r2
 8001c92:	4610      	mov	r0, r2
 8001c94:	4798      	blx	r3
 8001c96:	4b18      	ldr	r3, [pc, #96]	; (8001cf8 <WIZCHIP_READ+0x94>)
 8001c98:	6a1b      	ldr	r3, [r3, #32]
 8001c9a:	687a      	ldr	r2, [r7, #4]
 8001c9c:	0a12      	lsrs	r2, r2, #8
 8001c9e:	b2d2      	uxtb	r2, r2
 8001ca0:	4610      	mov	r0, r2
 8001ca2:	4798      	blx	r3
 8001ca4:	4b14      	ldr	r3, [pc, #80]	; (8001cf8 <WIZCHIP_READ+0x94>)
 8001ca6:	6a1b      	ldr	r3, [r3, #32]
 8001ca8:	687a      	ldr	r2, [r7, #4]
 8001caa:	b2d2      	uxtb	r2, r2
 8001cac:	4610      	mov	r0, r2
 8001cae:	4798      	blx	r3
 8001cb0:	e011      	b.n	8001cd6 <WIZCHIP_READ+0x72>
 8001cb2:	687b      	ldr	r3, [r7, #4]
 8001cb4:	0c1b      	lsrs	r3, r3, #16
 8001cb6:	b2db      	uxtb	r3, r3
 8001cb8:	733b      	strb	r3, [r7, #12]
 8001cba:	687b      	ldr	r3, [r7, #4]
 8001cbc:	0a1b      	lsrs	r3, r3, #8
 8001cbe:	b2db      	uxtb	r3, r3
 8001cc0:	737b      	strb	r3, [r7, #13]
 8001cc2:	687b      	ldr	r3, [r7, #4]
 8001cc4:	b2db      	uxtb	r3, r3
 8001cc6:	73bb      	strb	r3, [r7, #14]
 8001cc8:	4b0b      	ldr	r3, [pc, #44]	; (8001cf8 <WIZCHIP_READ+0x94>)
 8001cca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001ccc:	f107 020c 	add.w	r2, r7, #12
 8001cd0:	2103      	movs	r1, #3
 8001cd2:	4610      	mov	r0, r2
 8001cd4:	4798      	blx	r3
 8001cd6:	4b08      	ldr	r3, [pc, #32]	; (8001cf8 <WIZCHIP_READ+0x94>)
 8001cd8:	69db      	ldr	r3, [r3, #28]
 8001cda:	4798      	blx	r3
 8001cdc:	4603      	mov	r3, r0
 8001cde:	73fb      	strb	r3, [r7, #15]
 8001ce0:	4b05      	ldr	r3, [pc, #20]	; (8001cf8 <WIZCHIP_READ+0x94>)
 8001ce2:	699b      	ldr	r3, [r3, #24]
 8001ce4:	4798      	blx	r3
 8001ce6:	4b04      	ldr	r3, [pc, #16]	; (8001cf8 <WIZCHIP_READ+0x94>)
 8001ce8:	691b      	ldr	r3, [r3, #16]
 8001cea:	4798      	blx	r3
 8001cec:	7bfb      	ldrb	r3, [r7, #15]
 8001cee:	4618      	mov	r0, r3
 8001cf0:	3710      	adds	r7, #16
 8001cf2:	46bd      	mov	sp, r7
 8001cf4:	bd80      	pop	{r7, pc}
 8001cf6:	bf00      	nop
 8001cf8:	20000020 	.word	0x20000020

08001cfc <WIZCHIP_WRITE>:
 8001cfc:	b580      	push	{r7, lr}
 8001cfe:	b084      	sub	sp, #16
 8001d00:	af00      	add	r7, sp, #0
 8001d02:	6078      	str	r0, [r7, #4]
 8001d04:	460b      	mov	r3, r1
 8001d06:	70fb      	strb	r3, [r7, #3]
 8001d08:	4b22      	ldr	r3, [pc, #136]	; (8001d94 <WIZCHIP_WRITE+0x98>)
 8001d0a:	68db      	ldr	r3, [r3, #12]
 8001d0c:	4798      	blx	r3
 8001d0e:	4b21      	ldr	r3, [pc, #132]	; (8001d94 <WIZCHIP_WRITE+0x98>)
 8001d10:	695b      	ldr	r3, [r3, #20]
 8001d12:	4798      	blx	r3
 8001d14:	687b      	ldr	r3, [r7, #4]
 8001d16:	f043 0304 	orr.w	r3, r3, #4
 8001d1a:	607b      	str	r3, [r7, #4]
 8001d1c:	4b1d      	ldr	r3, [pc, #116]	; (8001d94 <WIZCHIP_WRITE+0x98>)
 8001d1e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001d20:	2b00      	cmp	r3, #0
 8001d22:	d119      	bne.n	8001d58 <WIZCHIP_WRITE+0x5c>
 8001d24:	4b1b      	ldr	r3, [pc, #108]	; (8001d94 <WIZCHIP_WRITE+0x98>)
 8001d26:	6a1b      	ldr	r3, [r3, #32]
 8001d28:	687a      	ldr	r2, [r7, #4]
 8001d2a:	0c12      	lsrs	r2, r2, #16
 8001d2c:	b2d2      	uxtb	r2, r2
 8001d2e:	4610      	mov	r0, r2
 8001d30:	4798      	blx	r3
 8001d32:	4b18      	ldr	r3, [pc, #96]	; (8001d94 <WIZCHIP_WRITE+0x98>)
 8001d34:	6a1b      	ldr	r3, [r3, #32]
 8001d36:	687a      	ldr	r2, [r7, #4]
 8001d38:	0a12      	lsrs	r2, r2, #8
 8001d3a:	b2d2      	uxtb	r2, r2
 8001d3c:	4610      	mov	r0, r2
 8001d3e:	4798      	blx	r3
 8001d40:	4b14      	ldr	r3, [pc, #80]	; (8001d94 <WIZCHIP_WRITE+0x98>)
 8001d42:	6a1b      	ldr	r3, [r3, #32]
 8001d44:	687a      	ldr	r2, [r7, #4]
 8001d46:	b2d2      	uxtb	r2, r2
 8001d48:	4610      	mov	r0, r2
 8001d4a:	4798      	blx	r3
 8001d4c:	4b11      	ldr	r3, [pc, #68]	; (8001d94 <WIZCHIP_WRITE+0x98>)
 8001d4e:	6a1b      	ldr	r3, [r3, #32]
 8001d50:	78fa      	ldrb	r2, [r7, #3]
 8001d52:	4610      	mov	r0, r2
 8001d54:	4798      	blx	r3
 8001d56:	e013      	b.n	8001d80 <WIZCHIP_WRITE+0x84>
 8001d58:	687b      	ldr	r3, [r7, #4]
 8001d5a:	0c1b      	lsrs	r3, r3, #16
 8001d5c:	b2db      	uxtb	r3, r3
 8001d5e:	733b      	strb	r3, [r7, #12]
 8001d60:	687b      	ldr	r3, [r7, #4]
 8001d62:	0a1b      	lsrs	r3, r3, #8
 8001d64:	b2db      	uxtb	r3, r3
 8001d66:	737b      	strb	r3, [r7, #13]
 8001d68:	687b      	ldr	r3, [r7, #4]
 8001d6a:	b2db      	uxtb	r3, r3
 8001d6c:	73bb      	strb	r3, [r7, #14]
 8001d6e:	78fb      	ldrb	r3, [r7, #3]
 8001d70:	73fb      	strb	r3, [r7, #15]
 8001d72:	4b08      	ldr	r3, [pc, #32]	; (8001d94 <WIZCHIP_WRITE+0x98>)
 8001d74:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001d76:	f107 020c 	add.w	r2, r7, #12
 8001d7a:	2104      	movs	r1, #4
 8001d7c:	4610      	mov	r0, r2
 8001d7e:	4798      	blx	r3
 8001d80:	4b04      	ldr	r3, [pc, #16]	; (8001d94 <WIZCHIP_WRITE+0x98>)
 8001d82:	699b      	ldr	r3, [r3, #24]
 8001d84:	4798      	blx	r3
 8001d86:	4b03      	ldr	r3, [pc, #12]	; (8001d94 <WIZCHIP_WRITE+0x98>)
 8001d88:	691b      	ldr	r3, [r3, #16]
 8001d8a:	4798      	blx	r3
 8001d8c:	bf00      	nop
 8001d8e:	3710      	adds	r7, #16
 8001d90:	46bd      	mov	sp, r7
 8001d92:	bd80      	pop	{r7, pc}
 8001d94:	20000020 	.word	0x20000020

08001d98 <WIZCHIP_READ_BUF>:
 8001d98:	b590      	push	{r4, r7, lr}
 8001d9a:	b087      	sub	sp, #28
 8001d9c:	af00      	add	r7, sp, #0
 8001d9e:	60f8      	str	r0, [r7, #12]
 8001da0:	60b9      	str	r1, [r7, #8]
 8001da2:	4613      	mov	r3, r2
 8001da4:	80fb      	strh	r3, [r7, #6]
 8001da6:	4b2b      	ldr	r3, [pc, #172]	; (8001e54 <WIZCHIP_READ_BUF+0xbc>)
 8001da8:	68db      	ldr	r3, [r3, #12]
 8001daa:	4798      	blx	r3
 8001dac:	4b29      	ldr	r3, [pc, #164]	; (8001e54 <WIZCHIP_READ_BUF+0xbc>)
 8001dae:	695b      	ldr	r3, [r3, #20]
 8001db0:	4798      	blx	r3
 8001db2:	4b28      	ldr	r3, [pc, #160]	; (8001e54 <WIZCHIP_READ_BUF+0xbc>)
 8001db4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001db6:	2b00      	cmp	r3, #0
 8001db8:	d003      	beq.n	8001dc2 <WIZCHIP_READ_BUF+0x2a>
 8001dba:	4b26      	ldr	r3, [pc, #152]	; (8001e54 <WIZCHIP_READ_BUF+0xbc>)
 8001dbc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001dbe:	2b00      	cmp	r3, #0
 8001dc0:	d126      	bne.n	8001e10 <WIZCHIP_READ_BUF+0x78>
 8001dc2:	4b24      	ldr	r3, [pc, #144]	; (8001e54 <WIZCHIP_READ_BUF+0xbc>)
 8001dc4:	6a1b      	ldr	r3, [r3, #32]
 8001dc6:	68fa      	ldr	r2, [r7, #12]
 8001dc8:	0c12      	lsrs	r2, r2, #16
 8001dca:	b2d2      	uxtb	r2, r2
 8001dcc:	4610      	mov	r0, r2
 8001dce:	4798      	blx	r3
 8001dd0:	4b20      	ldr	r3, [pc, #128]	; (8001e54 <WIZCHIP_READ_BUF+0xbc>)
 8001dd2:	6a1b      	ldr	r3, [r3, #32]
 8001dd4:	68fa      	ldr	r2, [r7, #12]
 8001dd6:	0a12      	lsrs	r2, r2, #8
 8001dd8:	b2d2      	uxtb	r2, r2
 8001dda:	4610      	mov	r0, r2
 8001ddc:	4798      	blx	r3
 8001dde:	4b1d      	ldr	r3, [pc, #116]	; (8001e54 <WIZCHIP_READ_BUF+0xbc>)
 8001de0:	6a1b      	ldr	r3, [r3, #32]
 8001de2:	68fa      	ldr	r2, [r7, #12]
 8001de4:	b2d2      	uxtb	r2, r2
 8001de6:	4610      	mov	r0, r2
 8001de8:	4798      	blx	r3
 8001dea:	2300      	movs	r3, #0
 8001dec:	82fb      	strh	r3, [r7, #22]
 8001dee:	e00a      	b.n	8001e06 <WIZCHIP_READ_BUF+0x6e>
 8001df0:	4b18      	ldr	r3, [pc, #96]	; (8001e54 <WIZCHIP_READ_BUF+0xbc>)
 8001df2:	69db      	ldr	r3, [r3, #28]
 8001df4:	8afa      	ldrh	r2, [r7, #22]
 8001df6:	68b9      	ldr	r1, [r7, #8]
 8001df8:	188c      	adds	r4, r1, r2
 8001dfa:	4798      	blx	r3
 8001dfc:	4603      	mov	r3, r0
 8001dfe:	7023      	strb	r3, [r4, #0]
 8001e00:	8afb      	ldrh	r3, [r7, #22]
 8001e02:	3301      	adds	r3, #1
 8001e04:	82fb      	strh	r3, [r7, #22]
 8001e06:	8afa      	ldrh	r2, [r7, #22]
 8001e08:	88fb      	ldrh	r3, [r7, #6]
 8001e0a:	429a      	cmp	r2, r3
 8001e0c:	d3f0      	bcc.n	8001df0 <WIZCHIP_READ_BUF+0x58>
 8001e0e:	e017      	b.n	8001e40 <WIZCHIP_READ_BUF+0xa8>
 8001e10:	68fb      	ldr	r3, [r7, #12]
 8001e12:	0c1b      	lsrs	r3, r3, #16
 8001e14:	b2db      	uxtb	r3, r3
 8001e16:	743b      	strb	r3, [r7, #16]
 8001e18:	68fb      	ldr	r3, [r7, #12]
 8001e1a:	0a1b      	lsrs	r3, r3, #8
 8001e1c:	b2db      	uxtb	r3, r3
 8001e1e:	747b      	strb	r3, [r7, #17]
 8001e20:	68fb      	ldr	r3, [r7, #12]
 8001e22:	b2db      	uxtb	r3, r3
 8001e24:	74bb      	strb	r3, [r7, #18]
 8001e26:	4b0b      	ldr	r3, [pc, #44]	; (8001e54 <WIZCHIP_READ_BUF+0xbc>)
 8001e28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001e2a:	f107 0210 	add.w	r2, r7, #16
 8001e2e:	2103      	movs	r1, #3
 8001e30:	4610      	mov	r0, r2
 8001e32:	4798      	blx	r3
 8001e34:	4b07      	ldr	r3, [pc, #28]	; (8001e54 <WIZCHIP_READ_BUF+0xbc>)
 8001e36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e38:	88fa      	ldrh	r2, [r7, #6]
 8001e3a:	4611      	mov	r1, r2
 8001e3c:	68b8      	ldr	r0, [r7, #8]
 8001e3e:	4798      	blx	r3
 8001e40:	4b04      	ldr	r3, [pc, #16]	; (8001e54 <WIZCHIP_READ_BUF+0xbc>)
 8001e42:	699b      	ldr	r3, [r3, #24]
 8001e44:	4798      	blx	r3
 8001e46:	4b03      	ldr	r3, [pc, #12]	; (8001e54 <WIZCHIP_READ_BUF+0xbc>)
 8001e48:	691b      	ldr	r3, [r3, #16]
 8001e4a:	4798      	blx	r3
 8001e4c:	bf00      	nop
 8001e4e:	371c      	adds	r7, #28
 8001e50:	46bd      	mov	sp, r7
 8001e52:	bd90      	pop	{r4, r7, pc}
 8001e54:	20000020 	.word	0x20000020

08001e58 <WIZCHIP_WRITE_BUF>:
 8001e58:	b580      	push	{r7, lr}
 8001e5a:	b086      	sub	sp, #24
 8001e5c:	af00      	add	r7, sp, #0
 8001e5e:	60f8      	str	r0, [r7, #12]
 8001e60:	60b9      	str	r1, [r7, #8]
 8001e62:	4613      	mov	r3, r2
 8001e64:	80fb      	strh	r3, [r7, #6]
 8001e66:	4b2b      	ldr	r3, [pc, #172]	; (8001f14 <WIZCHIP_WRITE_BUF+0xbc>)
 8001e68:	68db      	ldr	r3, [r3, #12]
 8001e6a:	4798      	blx	r3
 8001e6c:	4b29      	ldr	r3, [pc, #164]	; (8001f14 <WIZCHIP_WRITE_BUF+0xbc>)
 8001e6e:	695b      	ldr	r3, [r3, #20]
 8001e70:	4798      	blx	r3
 8001e72:	68fb      	ldr	r3, [r7, #12]
 8001e74:	f043 0304 	orr.w	r3, r3, #4
 8001e78:	60fb      	str	r3, [r7, #12]
 8001e7a:	4b26      	ldr	r3, [pc, #152]	; (8001f14 <WIZCHIP_WRITE_BUF+0xbc>)
 8001e7c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001e7e:	2b00      	cmp	r3, #0
 8001e80:	d126      	bne.n	8001ed0 <WIZCHIP_WRITE_BUF+0x78>
 8001e82:	4b24      	ldr	r3, [pc, #144]	; (8001f14 <WIZCHIP_WRITE_BUF+0xbc>)
 8001e84:	6a1b      	ldr	r3, [r3, #32]
 8001e86:	68fa      	ldr	r2, [r7, #12]
 8001e88:	0c12      	lsrs	r2, r2, #16
 8001e8a:	b2d2      	uxtb	r2, r2
 8001e8c:	4610      	mov	r0, r2
 8001e8e:	4798      	blx	r3
 8001e90:	4b20      	ldr	r3, [pc, #128]	; (8001f14 <WIZCHIP_WRITE_BUF+0xbc>)
 8001e92:	6a1b      	ldr	r3, [r3, #32]
 8001e94:	68fa      	ldr	r2, [r7, #12]
 8001e96:	0a12      	lsrs	r2, r2, #8
 8001e98:	b2d2      	uxtb	r2, r2
 8001e9a:	4610      	mov	r0, r2
 8001e9c:	4798      	blx	r3
 8001e9e:	4b1d      	ldr	r3, [pc, #116]	; (8001f14 <WIZCHIP_WRITE_BUF+0xbc>)
 8001ea0:	6a1b      	ldr	r3, [r3, #32]
 8001ea2:	68fa      	ldr	r2, [r7, #12]
 8001ea4:	b2d2      	uxtb	r2, r2
 8001ea6:	4610      	mov	r0, r2
 8001ea8:	4798      	blx	r3
 8001eaa:	2300      	movs	r3, #0
 8001eac:	82fb      	strh	r3, [r7, #22]
 8001eae:	e00a      	b.n	8001ec6 <WIZCHIP_WRITE_BUF+0x6e>
 8001eb0:	4b18      	ldr	r3, [pc, #96]	; (8001f14 <WIZCHIP_WRITE_BUF+0xbc>)
 8001eb2:	6a1b      	ldr	r3, [r3, #32]
 8001eb4:	8afa      	ldrh	r2, [r7, #22]
 8001eb6:	68b9      	ldr	r1, [r7, #8]
 8001eb8:	440a      	add	r2, r1
 8001eba:	7812      	ldrb	r2, [r2, #0]
 8001ebc:	4610      	mov	r0, r2
 8001ebe:	4798      	blx	r3
 8001ec0:	8afb      	ldrh	r3, [r7, #22]
 8001ec2:	3301      	adds	r3, #1
 8001ec4:	82fb      	strh	r3, [r7, #22]
 8001ec6:	8afa      	ldrh	r2, [r7, #22]
 8001ec8:	88fb      	ldrh	r3, [r7, #6]
 8001eca:	429a      	cmp	r2, r3
 8001ecc:	d3f0      	bcc.n	8001eb0 <WIZCHIP_WRITE_BUF+0x58>
 8001ece:	e017      	b.n	8001f00 <WIZCHIP_WRITE_BUF+0xa8>
 8001ed0:	68fb      	ldr	r3, [r7, #12]
 8001ed2:	0c1b      	lsrs	r3, r3, #16
 8001ed4:	b2db      	uxtb	r3, r3
 8001ed6:	743b      	strb	r3, [r7, #16]
 8001ed8:	68fb      	ldr	r3, [r7, #12]
 8001eda:	0a1b      	lsrs	r3, r3, #8
 8001edc:	b2db      	uxtb	r3, r3
 8001ede:	747b      	strb	r3, [r7, #17]
 8001ee0:	68fb      	ldr	r3, [r7, #12]
 8001ee2:	b2db      	uxtb	r3, r3
 8001ee4:	74bb      	strb	r3, [r7, #18]
 8001ee6:	4b0b      	ldr	r3, [pc, #44]	; (8001f14 <WIZCHIP_WRITE_BUF+0xbc>)
 8001ee8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001eea:	f107 0210 	add.w	r2, r7, #16
 8001eee:	2103      	movs	r1, #3
 8001ef0:	4610      	mov	r0, r2
 8001ef2:	4798      	blx	r3
 8001ef4:	4b07      	ldr	r3, [pc, #28]	; (8001f14 <WIZCHIP_WRITE_BUF+0xbc>)
 8001ef6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001ef8:	88fa      	ldrh	r2, [r7, #6]
 8001efa:	4611      	mov	r1, r2
 8001efc:	68b8      	ldr	r0, [r7, #8]
 8001efe:	4798      	blx	r3
 8001f00:	4b04      	ldr	r3, [pc, #16]	; (8001f14 <WIZCHIP_WRITE_BUF+0xbc>)
 8001f02:	699b      	ldr	r3, [r3, #24]
 8001f04:	4798      	blx	r3
 8001f06:	4b03      	ldr	r3, [pc, #12]	; (8001f14 <WIZCHIP_WRITE_BUF+0xbc>)
 8001f08:	691b      	ldr	r3, [r3, #16]
 8001f0a:	4798      	blx	r3
 8001f0c:	bf00      	nop
 8001f0e:	3718      	adds	r7, #24
 8001f10:	46bd      	mov	sp, r7
 8001f12:	bd80      	pop	{r7, pc}
 8001f14:	20000020 	.word	0x20000020

08001f18 <getSn_TX_FSR>:
 8001f18:	b590      	push	{r4, r7, lr}
 8001f1a:	b085      	sub	sp, #20
 8001f1c:	af00      	add	r7, sp, #0
 8001f1e:	4603      	mov	r3, r0
 8001f20:	71fb      	strb	r3, [r7, #7]
 8001f22:	2300      	movs	r3, #0
 8001f24:	81fb      	strh	r3, [r7, #14]
 8001f26:	2300      	movs	r3, #0
 8001f28:	81bb      	strh	r3, [r7, #12]
 8001f2a:	79fb      	ldrb	r3, [r7, #7]
 8001f2c:	009b      	lsls	r3, r3, #2
 8001f2e:	3301      	adds	r3, #1
 8001f30:	00db      	lsls	r3, r3, #3
 8001f32:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8001f36:	4618      	mov	r0, r3
 8001f38:	f7ff fe94 	bl	8001c64 <WIZCHIP_READ>
 8001f3c:	4603      	mov	r3, r0
 8001f3e:	81bb      	strh	r3, [r7, #12]
 8001f40:	89bb      	ldrh	r3, [r7, #12]
 8001f42:	021b      	lsls	r3, r3, #8
 8001f44:	b29c      	uxth	r4, r3
 8001f46:	79fb      	ldrb	r3, [r7, #7]
 8001f48:	009b      	lsls	r3, r3, #2
 8001f4a:	3301      	adds	r3, #1
 8001f4c:	00db      	lsls	r3, r3, #3
 8001f4e:	f503 5304 	add.w	r3, r3, #8448	; 0x2100
 8001f52:	4618      	mov	r0, r3
 8001f54:	f7ff fe86 	bl	8001c64 <WIZCHIP_READ>
 8001f58:	4603      	mov	r3, r0
 8001f5a:	b29b      	uxth	r3, r3
 8001f5c:	4423      	add	r3, r4
 8001f5e:	81bb      	strh	r3, [r7, #12]
 8001f60:	89bb      	ldrh	r3, [r7, #12]
 8001f62:	2b00      	cmp	r3, #0
 8001f64:	d01a      	beq.n	8001f9c <getSn_TX_FSR+0x84>
 8001f66:	79fb      	ldrb	r3, [r7, #7]
 8001f68:	009b      	lsls	r3, r3, #2
 8001f6a:	3301      	adds	r3, #1
 8001f6c:	00db      	lsls	r3, r3, #3
 8001f6e:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8001f72:	4618      	mov	r0, r3
 8001f74:	f7ff fe76 	bl	8001c64 <WIZCHIP_READ>
 8001f78:	4603      	mov	r3, r0
 8001f7a:	81fb      	strh	r3, [r7, #14]
 8001f7c:	89fb      	ldrh	r3, [r7, #14]
 8001f7e:	021b      	lsls	r3, r3, #8
 8001f80:	b29c      	uxth	r4, r3
 8001f82:	79fb      	ldrb	r3, [r7, #7]
 8001f84:	009b      	lsls	r3, r3, #2
 8001f86:	3301      	adds	r3, #1
 8001f88:	00db      	lsls	r3, r3, #3
 8001f8a:	f503 5304 	add.w	r3, r3, #8448	; 0x2100
 8001f8e:	4618      	mov	r0, r3
 8001f90:	f7ff fe68 	bl	8001c64 <WIZCHIP_READ>
 8001f94:	4603      	mov	r3, r0
 8001f96:	b29b      	uxth	r3, r3
 8001f98:	4423      	add	r3, r4
 8001f9a:	81fb      	strh	r3, [r7, #14]
 8001f9c:	89fa      	ldrh	r2, [r7, #14]
 8001f9e:	89bb      	ldrh	r3, [r7, #12]
 8001fa0:	429a      	cmp	r2, r3
 8001fa2:	d1c2      	bne.n	8001f2a <getSn_TX_FSR+0x12>
 8001fa4:	89fb      	ldrh	r3, [r7, #14]
 8001fa6:	4618      	mov	r0, r3
 8001fa8:	3714      	adds	r7, #20
 8001faa:	46bd      	mov	sp, r7
 8001fac:	bd90      	pop	{r4, r7, pc}

08001fae <getSn_RX_RSR>:
 8001fae:	b590      	push	{r4, r7, lr}
 8001fb0:	b085      	sub	sp, #20
 8001fb2:	af00      	add	r7, sp, #0
 8001fb4:	4603      	mov	r3, r0
 8001fb6:	71fb      	strb	r3, [r7, #7]
 8001fb8:	2300      	movs	r3, #0
 8001fba:	81fb      	strh	r3, [r7, #14]
 8001fbc:	2300      	movs	r3, #0
 8001fbe:	81bb      	strh	r3, [r7, #12]
 8001fc0:	79fb      	ldrb	r3, [r7, #7]
 8001fc2:	009b      	lsls	r3, r3, #2
 8001fc4:	3301      	adds	r3, #1
 8001fc6:	00db      	lsls	r3, r3, #3
 8001fc8:	f503 5318 	add.w	r3, r3, #9728	; 0x2600
 8001fcc:	4618      	mov	r0, r3
 8001fce:	f7ff fe49 	bl	8001c64 <WIZCHIP_READ>
 8001fd2:	4603      	mov	r3, r0
 8001fd4:	81bb      	strh	r3, [r7, #12]
 8001fd6:	89bb      	ldrh	r3, [r7, #12]
 8001fd8:	021b      	lsls	r3, r3, #8
 8001fda:	b29c      	uxth	r4, r3
 8001fdc:	79fb      	ldrb	r3, [r7, #7]
 8001fde:	009b      	lsls	r3, r3, #2
 8001fe0:	3301      	adds	r3, #1
 8001fe2:	00db      	lsls	r3, r3, #3
 8001fe4:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
 8001fe8:	4618      	mov	r0, r3
 8001fea:	f7ff fe3b 	bl	8001c64 <WIZCHIP_READ>
 8001fee:	4603      	mov	r3, r0
 8001ff0:	b29b      	uxth	r3, r3
 8001ff2:	4423      	add	r3, r4
 8001ff4:	81bb      	strh	r3, [r7, #12]
 8001ff6:	89bb      	ldrh	r3, [r7, #12]
 8001ff8:	2b00      	cmp	r3, #0
 8001ffa:	d01a      	beq.n	8002032 <getSn_RX_RSR+0x84>
 8001ffc:	79fb      	ldrb	r3, [r7, #7]
 8001ffe:	009b      	lsls	r3, r3, #2
 8002000:	3301      	adds	r3, #1
 8002002:	00db      	lsls	r3, r3, #3
 8002004:	f503 5318 	add.w	r3, r3, #9728	; 0x2600
 8002008:	4618      	mov	r0, r3
 800200a:	f7ff fe2b 	bl	8001c64 <WIZCHIP_READ>
 800200e:	4603      	mov	r3, r0
 8002010:	81fb      	strh	r3, [r7, #14]
 8002012:	89fb      	ldrh	r3, [r7, #14]
 8002014:	021b      	lsls	r3, r3, #8
 8002016:	b29c      	uxth	r4, r3
 8002018:	79fb      	ldrb	r3, [r7, #7]
 800201a:	009b      	lsls	r3, r3, #2
 800201c:	3301      	adds	r3, #1
 800201e:	00db      	lsls	r3, r3, #3
 8002020:	f503 531c 	add.w	r3, r3, #9984	; 0x2700
 8002024:	4618      	mov	r0, r3
 8002026:	f7ff fe1d 	bl	8001c64 <WIZCHIP_READ>
 800202a:	4603      	mov	r3, r0
 800202c:	b29b      	uxth	r3, r3
 800202e:	4423      	add	r3, r4
 8002030:	81fb      	strh	r3, [r7, #14]
 8002032:	89fa      	ldrh	r2, [r7, #14]
 8002034:	89bb      	ldrh	r3, [r7, #12]
 8002036:	429a      	cmp	r2, r3
 8002038:	d1c2      	bne.n	8001fc0 <getSn_RX_RSR+0x12>
 800203a:	89fb      	ldrh	r3, [r7, #14]
 800203c:	4618      	mov	r0, r3
 800203e:	3714      	adds	r7, #20
 8002040:	46bd      	mov	sp, r7
 8002042:	bd90      	pop	{r4, r7, pc}

08002044 <wiz_send_data>:
 8002044:	b590      	push	{r4, r7, lr}
 8002046:	b085      	sub	sp, #20
 8002048:	af00      	add	r7, sp, #0
 800204a:	4603      	mov	r3, r0
 800204c:	6039      	str	r1, [r7, #0]
 800204e:	71fb      	strb	r3, [r7, #7]
 8002050:	4613      	mov	r3, r2
 8002052:	80bb      	strh	r3, [r7, #4]
 8002054:	2300      	movs	r3, #0
 8002056:	81fb      	strh	r3, [r7, #14]
 8002058:	2300      	movs	r3, #0
 800205a:	60bb      	str	r3, [r7, #8]
 800205c:	88bb      	ldrh	r3, [r7, #4]
 800205e:	2b00      	cmp	r3, #0
 8002060:	d048      	beq.n	80020f4 <wiz_send_data+0xb0>
 8002062:	79fb      	ldrb	r3, [r7, #7]
 8002064:	009b      	lsls	r3, r3, #2
 8002066:	3301      	adds	r3, #1
 8002068:	00db      	lsls	r3, r3, #3
 800206a:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
 800206e:	4618      	mov	r0, r3
 8002070:	f7ff fdf8 	bl	8001c64 <WIZCHIP_READ>
 8002074:	4603      	mov	r3, r0
 8002076:	b29b      	uxth	r3, r3
 8002078:	021b      	lsls	r3, r3, #8
 800207a:	b29c      	uxth	r4, r3
 800207c:	79fb      	ldrb	r3, [r7, #7]
 800207e:	009b      	lsls	r3, r3, #2
 8002080:	3301      	adds	r3, #1
 8002082:	00db      	lsls	r3, r3, #3
 8002084:	f503 5314 	add.w	r3, r3, #9472	; 0x2500
 8002088:	4618      	mov	r0, r3
 800208a:	f7ff fdeb 	bl	8001c64 <WIZCHIP_READ>
 800208e:	4603      	mov	r3, r0
 8002090:	b29b      	uxth	r3, r3
 8002092:	4423      	add	r3, r4
 8002094:	81fb      	strh	r3, [r7, #14]
 8002096:	89fb      	ldrh	r3, [r7, #14]
 8002098:	021b      	lsls	r3, r3, #8
 800209a:	79fa      	ldrb	r2, [r7, #7]
 800209c:	0092      	lsls	r2, r2, #2
 800209e:	3202      	adds	r2, #2
 80020a0:	00d2      	lsls	r2, r2, #3
 80020a2:	4413      	add	r3, r2
 80020a4:	60bb      	str	r3, [r7, #8]
 80020a6:	88bb      	ldrh	r3, [r7, #4]
 80020a8:	461a      	mov	r2, r3
 80020aa:	6839      	ldr	r1, [r7, #0]
 80020ac:	68b8      	ldr	r0, [r7, #8]
 80020ae:	f7ff fed3 	bl	8001e58 <WIZCHIP_WRITE_BUF>
 80020b2:	89fa      	ldrh	r2, [r7, #14]
 80020b4:	88bb      	ldrh	r3, [r7, #4]
 80020b6:	4413      	add	r3, r2
 80020b8:	81fb      	strh	r3, [r7, #14]
 80020ba:	79fb      	ldrb	r3, [r7, #7]
 80020bc:	009b      	lsls	r3, r3, #2
 80020be:	3301      	adds	r3, #1
 80020c0:	00db      	lsls	r3, r3, #3
 80020c2:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
 80020c6:	461a      	mov	r2, r3
 80020c8:	89fb      	ldrh	r3, [r7, #14]
 80020ca:	0a1b      	lsrs	r3, r3, #8
 80020cc:	b29b      	uxth	r3, r3
 80020ce:	b2db      	uxtb	r3, r3
 80020d0:	4619      	mov	r1, r3
 80020d2:	4610      	mov	r0, r2
 80020d4:	f7ff fe12 	bl	8001cfc <WIZCHIP_WRITE>
 80020d8:	79fb      	ldrb	r3, [r7, #7]
 80020da:	009b      	lsls	r3, r3, #2
 80020dc:	3301      	adds	r3, #1
 80020de:	00db      	lsls	r3, r3, #3
 80020e0:	f503 5314 	add.w	r3, r3, #9472	; 0x2500
 80020e4:	461a      	mov	r2, r3
 80020e6:	89fb      	ldrh	r3, [r7, #14]
 80020e8:	b2db      	uxtb	r3, r3
 80020ea:	4619      	mov	r1, r3
 80020ec:	4610      	mov	r0, r2
 80020ee:	f7ff fe05 	bl	8001cfc <WIZCHIP_WRITE>
 80020f2:	e000      	b.n	80020f6 <wiz_send_data+0xb2>
 80020f4:	bf00      	nop
 80020f6:	3714      	adds	r7, #20
 80020f8:	46bd      	mov	sp, r7
 80020fa:	bd90      	pop	{r4, r7, pc}

080020fc <wiz_recv_data>:
 80020fc:	b590      	push	{r4, r7, lr}
 80020fe:	b085      	sub	sp, #20
 8002100:	af00      	add	r7, sp, #0
 8002102:	4603      	mov	r3, r0
 8002104:	6039      	str	r1, [r7, #0]
 8002106:	71fb      	strb	r3, [r7, #7]
 8002108:	4613      	mov	r3, r2
 800210a:	80bb      	strh	r3, [r7, #4]
 800210c:	2300      	movs	r3, #0
 800210e:	81fb      	strh	r3, [r7, #14]
 8002110:	2300      	movs	r3, #0
 8002112:	60bb      	str	r3, [r7, #8]
 8002114:	88bb      	ldrh	r3, [r7, #4]
 8002116:	2b00      	cmp	r3, #0
 8002118:	d048      	beq.n	80021ac <wiz_recv_data+0xb0>
 800211a:	79fb      	ldrb	r3, [r7, #7]
 800211c:	009b      	lsls	r3, r3, #2
 800211e:	3301      	adds	r3, #1
 8002120:	00db      	lsls	r3, r3, #3
 8002122:	f503 5320 	add.w	r3, r3, #10240	; 0x2800
 8002126:	4618      	mov	r0, r3
 8002128:	f7ff fd9c 	bl	8001c64 <WIZCHIP_READ>
 800212c:	4603      	mov	r3, r0
 800212e:	b29b      	uxth	r3, r3
 8002130:	021b      	lsls	r3, r3, #8
 8002132:	b29c      	uxth	r4, r3
 8002134:	79fb      	ldrb	r3, [r7, #7]
 8002136:	009b      	lsls	r3, r3, #2
 8002138:	3301      	adds	r3, #1
 800213a:	00db      	lsls	r3, r3, #3
 800213c:	f503 5324 	add.w	r3, r3, #10496	; 0x2900
 8002140:	4618      	mov	r0, r3
 8002142:	f7ff fd8f 	bl	8001c64 <WIZCHIP_READ>
 8002146:	4603      	mov	r3, r0
 8002148:	b29b      	uxth	r3, r3
 800214a:	4423      	add	r3, r4
 800214c:	81fb      	strh	r3, [r7, #14]
 800214e:	89fb      	ldrh	r3, [r7, #14]
 8002150:	021b      	lsls	r3, r3, #8
 8002152:	79fa      	ldrb	r2, [r7, #7]
 8002154:	0092      	lsls	r2, r2, #2
 8002156:	3203      	adds	r2, #3
 8002158:	00d2      	lsls	r2, r2, #3
 800215a:	4413      	add	r3, r2
 800215c:	60bb      	str	r3, [r7, #8]
 800215e:	88bb      	ldrh	r3, [r7, #4]
 8002160:	461a      	mov	r2, r3
 8002162:	6839      	ldr	r1, [r7, #0]
 8002164:	68b8      	ldr	r0, [r7, #8]
 8002166:	f7ff fe17 	bl	8001d98 <WIZCHIP_READ_BUF>
 800216a:	89fa      	ldrh	r2, [r7, #14]
 800216c:	88bb      	ldrh	r3, [r7, #4]
 800216e:	4413      	add	r3, r2
 8002170:	81fb      	strh	r3, [r7, #14]
 8002172:	79fb      	ldrb	r3, [r7, #7]
 8002174:	009b      	lsls	r3, r3, #2
 8002176:	3301      	adds	r3, #1
 8002178:	00db      	lsls	r3, r3, #3
 800217a:	f503 5320 	add.w	r3, r3, #10240	; 0x2800
 800217e:	461a      	mov	r2, r3
 8002180:	89fb      	ldrh	r3, [r7, #14]
 8002182:	0a1b      	lsrs	r3, r3, #8
 8002184:	b29b      	uxth	r3, r3
 8002186:	b2db      	uxtb	r3, r3
 8002188:	4619      	mov	r1, r3
 800218a:	4610      	mov	r0, r2
 800218c:	f7ff fdb6 	bl	8001cfc <WIZCHIP_WRITE>
 8002190:	79fb      	ldrb	r3, [r7, #7]
 8002192:	009b      	lsls	r3, r3, #2
 8002194:	3301      	adds	r3, #1
 8002196:	00db      	lsls	r3, r3, #3
 8002198:	f503 5324 	add.w	r3, r3, #10496	; 0x2900
 800219c:	461a      	mov	r2, r3
 800219e:	89fb      	ldrh	r3, [r7, #14]
 80021a0:	b2db      	uxtb	r3, r3
 80021a2:	4619      	mov	r1, r3
 80021a4:	4610      	mov	r0, r2
 80021a6:	f7ff fda9 	bl	8001cfc <WIZCHIP_WRITE>
 80021aa:	e000      	b.n	80021ae <wiz_recv_data+0xb2>
 80021ac:	bf00      	nop
 80021ae:	3714      	adds	r7, #20
 80021b0:	46bd      	mov	sp, r7
 80021b2:	bd90      	pop	{r4, r7, pc}

080021b4 <Reset_Handler>:
 80021b4:	f7fe fa18 	bl	80005e8 <SystemInit>
 80021b8:	480b      	ldr	r0, [pc, #44]	; (80021e8 <LoopFillZerobss+0xe>)
 80021ba:	490c      	ldr	r1, [pc, #48]	; (80021ec <LoopFillZerobss+0x12>)
 80021bc:	4a0c      	ldr	r2, [pc, #48]	; (80021f0 <LoopFillZerobss+0x16>)
 80021be:	2300      	movs	r3, #0
 80021c0:	e002      	b.n	80021c8 <LoopCopyDataInit>

080021c2 <CopyDataInit>:
 80021c2:	58d4      	ldr	r4, [r2, r3]
 80021c4:	50c4      	str	r4, [r0, r3]
 80021c6:	3304      	adds	r3, #4

080021c8 <LoopCopyDataInit>:
 80021c8:	18c4      	adds	r4, r0, r3
 80021ca:	428c      	cmp	r4, r1
 80021cc:	d3f9      	bcc.n	80021c2 <CopyDataInit>
 80021ce:	4a09      	ldr	r2, [pc, #36]	; (80021f4 <LoopFillZerobss+0x1a>)
 80021d0:	4c09      	ldr	r4, [pc, #36]	; (80021f8 <LoopFillZerobss+0x1e>)
 80021d2:	2300      	movs	r3, #0
 80021d4:	e001      	b.n	80021da <LoopFillZerobss>

080021d6 <FillZerobss>:
 80021d6:	6013      	str	r3, [r2, #0]
 80021d8:	3204      	adds	r2, #4

080021da <LoopFillZerobss>:
 80021da:	42a2      	cmp	r2, r4
 80021dc:	d3fb      	bcc.n	80021d6 <FillZerobss>
 80021de:	f002 fed5 	bl	8004f8c <__libc_init_array>
 80021e2:	f7fe f81d 	bl	8000220 <main>
 80021e6:	4770      	bx	lr
 80021e8:	20000000 	.word	0x20000000
 80021ec:	200000a8 	.word	0x200000a8
 80021f0:	08005370 	.word	0x08005370
 80021f4:	200000a8 	.word	0x200000a8
 80021f8:	20001674 	.word	0x20001674

080021fc <ADC1_2_IRQHandler>:
 80021fc:	e7fe      	b.n	80021fc <ADC1_2_IRQHandler>
	...

08002200 <HAL_Init>:
 8002200:	b580      	push	{r7, lr}
 8002202:	af00      	add	r7, sp, #0
 8002204:	4b08      	ldr	r3, [pc, #32]	; (8002228 <HAL_Init+0x28>)
 8002206:	681b      	ldr	r3, [r3, #0]
 8002208:	4a07      	ldr	r2, [pc, #28]	; (8002228 <HAL_Init+0x28>)
 800220a:	f043 0310 	orr.w	r3, r3, #16
 800220e:	6013      	str	r3, [r2, #0]
 8002210:	2003      	movs	r0, #3
 8002212:	f000 f92b 	bl	800246c <HAL_NVIC_SetPriorityGrouping>
 8002216:	200f      	movs	r0, #15
 8002218:	f000 f808 	bl	800222c <HAL_InitTick>
 800221c:	f7fe f93e 	bl	800049c <HAL_MspInit>
 8002220:	2300      	movs	r3, #0
 8002222:	4618      	mov	r0, r3
 8002224:	bd80      	pop	{r7, pc}
 8002226:	bf00      	nop
 8002228:	40022000 	.word	0x40022000

0800222c <HAL_InitTick>:
 800222c:	b580      	push	{r7, lr}
 800222e:	b082      	sub	sp, #8
 8002230:	af00      	add	r7, sp, #0
 8002232:	6078      	str	r0, [r7, #4]
 8002234:	4b12      	ldr	r3, [pc, #72]	; (8002280 <HAL_InitTick+0x54>)
 8002236:	681a      	ldr	r2, [r3, #0]
 8002238:	4b12      	ldr	r3, [pc, #72]	; (8002284 <HAL_InitTick+0x58>)
 800223a:	781b      	ldrb	r3, [r3, #0]
 800223c:	4619      	mov	r1, r3
 800223e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002242:	fbb3 f3f1 	udiv	r3, r3, r1
 8002246:	fbb2 f3f3 	udiv	r3, r2, r3
 800224a:	4618      	mov	r0, r3
 800224c:	f000 f935 	bl	80024ba <HAL_SYSTICK_Config>
 8002250:	4603      	mov	r3, r0
 8002252:	2b00      	cmp	r3, #0
 8002254:	d001      	beq.n	800225a <HAL_InitTick+0x2e>
 8002256:	2301      	movs	r3, #1
 8002258:	e00e      	b.n	8002278 <HAL_InitTick+0x4c>
 800225a:	687b      	ldr	r3, [r7, #4]
 800225c:	2b0f      	cmp	r3, #15
 800225e:	d80a      	bhi.n	8002276 <HAL_InitTick+0x4a>
 8002260:	2200      	movs	r2, #0
 8002262:	6879      	ldr	r1, [r7, #4]
 8002264:	f04f 30ff 	mov.w	r0, #4294967295
 8002268:	f000 f90b 	bl	8002482 <HAL_NVIC_SetPriority>
 800226c:	4a06      	ldr	r2, [pc, #24]	; (8002288 <HAL_InitTick+0x5c>)
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	6013      	str	r3, [r2, #0]
 8002272:	2300      	movs	r3, #0
 8002274:	e000      	b.n	8002278 <HAL_InitTick+0x4c>
 8002276:	2301      	movs	r3, #1
 8002278:	4618      	mov	r0, r3
 800227a:	3708      	adds	r7, #8
 800227c:	46bd      	mov	sp, r7
 800227e:	bd80      	pop	{r7, pc}
 8002280:	20000018 	.word	0x20000018
 8002284:	20000050 	.word	0x20000050
 8002288:	2000004c 	.word	0x2000004c

0800228c <HAL_IncTick>:
 800228c:	b480      	push	{r7}
 800228e:	af00      	add	r7, sp, #0
 8002290:	4b05      	ldr	r3, [pc, #20]	; (80022a8 <HAL_IncTick+0x1c>)
 8002292:	781b      	ldrb	r3, [r3, #0]
 8002294:	461a      	mov	r2, r3
 8002296:	4b05      	ldr	r3, [pc, #20]	; (80022ac <HAL_IncTick+0x20>)
 8002298:	681b      	ldr	r3, [r3, #0]
 800229a:	4413      	add	r3, r2
 800229c:	4a03      	ldr	r2, [pc, #12]	; (80022ac <HAL_IncTick+0x20>)
 800229e:	6013      	str	r3, [r2, #0]
 80022a0:	bf00      	nop
 80022a2:	46bd      	mov	sp, r7
 80022a4:	bc80      	pop	{r7}
 80022a6:	4770      	bx	lr
 80022a8:	20000050 	.word	0x20000050
 80022ac:	200007e4 	.word	0x200007e4

080022b0 <HAL_GetTick>:
 80022b0:	b480      	push	{r7}
 80022b2:	af00      	add	r7, sp, #0
 80022b4:	4b02      	ldr	r3, [pc, #8]	; (80022c0 <HAL_GetTick+0x10>)
 80022b6:	681b      	ldr	r3, [r3, #0]
 80022b8:	4618      	mov	r0, r3
 80022ba:	46bd      	mov	sp, r7
 80022bc:	bc80      	pop	{r7}
 80022be:	4770      	bx	lr
 80022c0:	200007e4 	.word	0x200007e4

080022c4 <HAL_Delay>:
 80022c4:	b580      	push	{r7, lr}
 80022c6:	b084      	sub	sp, #16
 80022c8:	af00      	add	r7, sp, #0
 80022ca:	6078      	str	r0, [r7, #4]
 80022cc:	f7ff fff0 	bl	80022b0 <HAL_GetTick>
 80022d0:	60b8      	str	r0, [r7, #8]
 80022d2:	687b      	ldr	r3, [r7, #4]
 80022d4:	60fb      	str	r3, [r7, #12]
 80022d6:	68fb      	ldr	r3, [r7, #12]
 80022d8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80022dc:	d005      	beq.n	80022ea <HAL_Delay+0x26>
 80022de:	4b0a      	ldr	r3, [pc, #40]	; (8002308 <HAL_Delay+0x44>)
 80022e0:	781b      	ldrb	r3, [r3, #0]
 80022e2:	461a      	mov	r2, r3
 80022e4:	68fb      	ldr	r3, [r7, #12]
 80022e6:	4413      	add	r3, r2
 80022e8:	60fb      	str	r3, [r7, #12]
 80022ea:	bf00      	nop
 80022ec:	f7ff ffe0 	bl	80022b0 <HAL_GetTick>
 80022f0:	4602      	mov	r2, r0
 80022f2:	68bb      	ldr	r3, [r7, #8]
 80022f4:	1ad3      	subs	r3, r2, r3
 80022f6:	68fa      	ldr	r2, [r7, #12]
 80022f8:	429a      	cmp	r2, r3
 80022fa:	d8f7      	bhi.n	80022ec <HAL_Delay+0x28>
 80022fc:	bf00      	nop
 80022fe:	bf00      	nop
 8002300:	3710      	adds	r7, #16
 8002302:	46bd      	mov	sp, r7
 8002304:	bd80      	pop	{r7, pc}
 8002306:	bf00      	nop
 8002308:	20000050 	.word	0x20000050

0800230c <__NVIC_SetPriorityGrouping>:
 800230c:	b480      	push	{r7}
 800230e:	b085      	sub	sp, #20
 8002310:	af00      	add	r7, sp, #0
 8002312:	6078      	str	r0, [r7, #4]
 8002314:	687b      	ldr	r3, [r7, #4]
 8002316:	f003 0307 	and.w	r3, r3, #7
 800231a:	60fb      	str	r3, [r7, #12]
 800231c:	4b0c      	ldr	r3, [pc, #48]	; (8002350 <__NVIC_SetPriorityGrouping+0x44>)
 800231e:	68db      	ldr	r3, [r3, #12]
 8002320:	60bb      	str	r3, [r7, #8]
 8002322:	68ba      	ldr	r2, [r7, #8]
 8002324:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002328:	4013      	ands	r3, r2
 800232a:	60bb      	str	r3, [r7, #8]
 800232c:	68fb      	ldr	r3, [r7, #12]
 800232e:	021a      	lsls	r2, r3, #8
 8002330:	68bb      	ldr	r3, [r7, #8]
 8002332:	4313      	orrs	r3, r2
 8002334:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8002338:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800233c:	60bb      	str	r3, [r7, #8]
 800233e:	4a04      	ldr	r2, [pc, #16]	; (8002350 <__NVIC_SetPriorityGrouping+0x44>)
 8002340:	68bb      	ldr	r3, [r7, #8]
 8002342:	60d3      	str	r3, [r2, #12]
 8002344:	bf00      	nop
 8002346:	3714      	adds	r7, #20
 8002348:	46bd      	mov	sp, r7
 800234a:	bc80      	pop	{r7}
 800234c:	4770      	bx	lr
 800234e:	bf00      	nop
 8002350:	e000ed00 	.word	0xe000ed00

08002354 <__NVIC_GetPriorityGrouping>:
 8002354:	b480      	push	{r7}
 8002356:	af00      	add	r7, sp, #0
 8002358:	4b04      	ldr	r3, [pc, #16]	; (800236c <__NVIC_GetPriorityGrouping+0x18>)
 800235a:	68db      	ldr	r3, [r3, #12]
 800235c:	0a1b      	lsrs	r3, r3, #8
 800235e:	f003 0307 	and.w	r3, r3, #7
 8002362:	4618      	mov	r0, r3
 8002364:	46bd      	mov	sp, r7
 8002366:	bc80      	pop	{r7}
 8002368:	4770      	bx	lr
 800236a:	bf00      	nop
 800236c:	e000ed00 	.word	0xe000ed00

08002370 <__NVIC_SetPriority>:
 8002370:	b480      	push	{r7}
 8002372:	b083      	sub	sp, #12
 8002374:	af00      	add	r7, sp, #0
 8002376:	4603      	mov	r3, r0
 8002378:	6039      	str	r1, [r7, #0]
 800237a:	71fb      	strb	r3, [r7, #7]
 800237c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002380:	2b00      	cmp	r3, #0
 8002382:	db0a      	blt.n	800239a <__NVIC_SetPriority+0x2a>
 8002384:	683b      	ldr	r3, [r7, #0]
 8002386:	b2da      	uxtb	r2, r3
 8002388:	490c      	ldr	r1, [pc, #48]	; (80023bc <__NVIC_SetPriority+0x4c>)
 800238a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800238e:	0112      	lsls	r2, r2, #4
 8002390:	b2d2      	uxtb	r2, r2
 8002392:	440b      	add	r3, r1
 8002394:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8002398:	e00a      	b.n	80023b0 <__NVIC_SetPriority+0x40>
 800239a:	683b      	ldr	r3, [r7, #0]
 800239c:	b2da      	uxtb	r2, r3
 800239e:	4908      	ldr	r1, [pc, #32]	; (80023c0 <__NVIC_SetPriority+0x50>)
 80023a0:	79fb      	ldrb	r3, [r7, #7]
 80023a2:	f003 030f 	and.w	r3, r3, #15
 80023a6:	3b04      	subs	r3, #4
 80023a8:	0112      	lsls	r2, r2, #4
 80023aa:	b2d2      	uxtb	r2, r2
 80023ac:	440b      	add	r3, r1
 80023ae:	761a      	strb	r2, [r3, #24]
 80023b0:	bf00      	nop
 80023b2:	370c      	adds	r7, #12
 80023b4:	46bd      	mov	sp, r7
 80023b6:	bc80      	pop	{r7}
 80023b8:	4770      	bx	lr
 80023ba:	bf00      	nop
 80023bc:	e000e100 	.word	0xe000e100
 80023c0:	e000ed00 	.word	0xe000ed00

080023c4 <NVIC_EncodePriority>:
 80023c4:	b480      	push	{r7}
 80023c6:	b089      	sub	sp, #36	; 0x24
 80023c8:	af00      	add	r7, sp, #0
 80023ca:	60f8      	str	r0, [r7, #12]
 80023cc:	60b9      	str	r1, [r7, #8]
 80023ce:	607a      	str	r2, [r7, #4]
 80023d0:	68fb      	ldr	r3, [r7, #12]
 80023d2:	f003 0307 	and.w	r3, r3, #7
 80023d6:	61fb      	str	r3, [r7, #28]
 80023d8:	69fb      	ldr	r3, [r7, #28]
 80023da:	f1c3 0307 	rsb	r3, r3, #7
 80023de:	2b04      	cmp	r3, #4
 80023e0:	bf28      	it	cs
 80023e2:	2304      	movcs	r3, #4
 80023e4:	61bb      	str	r3, [r7, #24]
 80023e6:	69fb      	ldr	r3, [r7, #28]
 80023e8:	3304      	adds	r3, #4
 80023ea:	2b06      	cmp	r3, #6
 80023ec:	d902      	bls.n	80023f4 <NVIC_EncodePriority+0x30>
 80023ee:	69fb      	ldr	r3, [r7, #28]
 80023f0:	3b03      	subs	r3, #3
 80023f2:	e000      	b.n	80023f6 <NVIC_EncodePriority+0x32>
 80023f4:	2300      	movs	r3, #0
 80023f6:	617b      	str	r3, [r7, #20]
 80023f8:	f04f 32ff 	mov.w	r2, #4294967295
 80023fc:	69bb      	ldr	r3, [r7, #24]
 80023fe:	fa02 f303 	lsl.w	r3, r2, r3
 8002402:	43da      	mvns	r2, r3
 8002404:	68bb      	ldr	r3, [r7, #8]
 8002406:	401a      	ands	r2, r3
 8002408:	697b      	ldr	r3, [r7, #20]
 800240a:	409a      	lsls	r2, r3
 800240c:	f04f 31ff 	mov.w	r1, #4294967295
 8002410:	697b      	ldr	r3, [r7, #20]
 8002412:	fa01 f303 	lsl.w	r3, r1, r3
 8002416:	43d9      	mvns	r1, r3
 8002418:	687b      	ldr	r3, [r7, #4]
 800241a:	400b      	ands	r3, r1
 800241c:	4313      	orrs	r3, r2
 800241e:	4618      	mov	r0, r3
 8002420:	3724      	adds	r7, #36	; 0x24
 8002422:	46bd      	mov	sp, r7
 8002424:	bc80      	pop	{r7}
 8002426:	4770      	bx	lr

08002428 <SysTick_Config>:
 8002428:	b580      	push	{r7, lr}
 800242a:	b082      	sub	sp, #8
 800242c:	af00      	add	r7, sp, #0
 800242e:	6078      	str	r0, [r7, #4]
 8002430:	687b      	ldr	r3, [r7, #4]
 8002432:	3b01      	subs	r3, #1
 8002434:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8002438:	d301      	bcc.n	800243e <SysTick_Config+0x16>
 800243a:	2301      	movs	r3, #1
 800243c:	e00f      	b.n	800245e <SysTick_Config+0x36>
 800243e:	4a0a      	ldr	r2, [pc, #40]	; (8002468 <SysTick_Config+0x40>)
 8002440:	687b      	ldr	r3, [r7, #4]
 8002442:	3b01      	subs	r3, #1
 8002444:	6053      	str	r3, [r2, #4]
 8002446:	210f      	movs	r1, #15
 8002448:	f04f 30ff 	mov.w	r0, #4294967295
 800244c:	f7ff ff90 	bl	8002370 <__NVIC_SetPriority>
 8002450:	4b05      	ldr	r3, [pc, #20]	; (8002468 <SysTick_Config+0x40>)
 8002452:	2200      	movs	r2, #0
 8002454:	609a      	str	r2, [r3, #8]
 8002456:	4b04      	ldr	r3, [pc, #16]	; (8002468 <SysTick_Config+0x40>)
 8002458:	2207      	movs	r2, #7
 800245a:	601a      	str	r2, [r3, #0]
 800245c:	2300      	movs	r3, #0
 800245e:	4618      	mov	r0, r3
 8002460:	3708      	adds	r7, #8
 8002462:	46bd      	mov	sp, r7
 8002464:	bd80      	pop	{r7, pc}
 8002466:	bf00      	nop
 8002468:	e000e010 	.word	0xe000e010

0800246c <HAL_NVIC_SetPriorityGrouping>:
 800246c:	b580      	push	{r7, lr}
 800246e:	b082      	sub	sp, #8
 8002470:	af00      	add	r7, sp, #0
 8002472:	6078      	str	r0, [r7, #4]
 8002474:	6878      	ldr	r0, [r7, #4]
 8002476:	f7ff ff49 	bl	800230c <__NVIC_SetPriorityGrouping>
 800247a:	bf00      	nop
 800247c:	3708      	adds	r7, #8
 800247e:	46bd      	mov	sp, r7
 8002480:	bd80      	pop	{r7, pc}

08002482 <HAL_NVIC_SetPriority>:
 8002482:	b580      	push	{r7, lr}
 8002484:	b086      	sub	sp, #24
 8002486:	af00      	add	r7, sp, #0
 8002488:	4603      	mov	r3, r0
 800248a:	60b9      	str	r1, [r7, #8]
 800248c:	607a      	str	r2, [r7, #4]
 800248e:	73fb      	strb	r3, [r7, #15]
 8002490:	2300      	movs	r3, #0
 8002492:	617b      	str	r3, [r7, #20]
 8002494:	f7ff ff5e 	bl	8002354 <__NVIC_GetPriorityGrouping>
 8002498:	6178      	str	r0, [r7, #20]
 800249a:	687a      	ldr	r2, [r7, #4]
 800249c:	68b9      	ldr	r1, [r7, #8]
 800249e:	6978      	ldr	r0, [r7, #20]
 80024a0:	f7ff ff90 	bl	80023c4 <NVIC_EncodePriority>
 80024a4:	4602      	mov	r2, r0
 80024a6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80024aa:	4611      	mov	r1, r2
 80024ac:	4618      	mov	r0, r3
 80024ae:	f7ff ff5f 	bl	8002370 <__NVIC_SetPriority>
 80024b2:	bf00      	nop
 80024b4:	3718      	adds	r7, #24
 80024b6:	46bd      	mov	sp, r7
 80024b8:	bd80      	pop	{r7, pc}

080024ba <HAL_SYSTICK_Config>:
 80024ba:	b580      	push	{r7, lr}
 80024bc:	b082      	sub	sp, #8
 80024be:	af00      	add	r7, sp, #0
 80024c0:	6078      	str	r0, [r7, #4]
 80024c2:	6878      	ldr	r0, [r7, #4]
 80024c4:	f7ff ffb0 	bl	8002428 <SysTick_Config>
 80024c8:	4603      	mov	r3, r0
 80024ca:	4618      	mov	r0, r3
 80024cc:	3708      	adds	r7, #8
 80024ce:	46bd      	mov	sp, r7
 80024d0:	bd80      	pop	{r7, pc}
	...

080024d4 <HAL_GPIO_Init>:
 80024d4:	b480      	push	{r7}
 80024d6:	b08b      	sub	sp, #44	; 0x2c
 80024d8:	af00      	add	r7, sp, #0
 80024da:	6078      	str	r0, [r7, #4]
 80024dc:	6039      	str	r1, [r7, #0]
 80024de:	2300      	movs	r3, #0
 80024e0:	627b      	str	r3, [r7, #36]	; 0x24
 80024e2:	2300      	movs	r3, #0
 80024e4:	623b      	str	r3, [r7, #32]
 80024e6:	e169      	b.n	80027bc <HAL_GPIO_Init+0x2e8>
 80024e8:	2201      	movs	r2, #1
 80024ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80024ec:	fa02 f303 	lsl.w	r3, r2, r3
 80024f0:	61fb      	str	r3, [r7, #28]
 80024f2:	683b      	ldr	r3, [r7, #0]
 80024f4:	681b      	ldr	r3, [r3, #0]
 80024f6:	69fa      	ldr	r2, [r7, #28]
 80024f8:	4013      	ands	r3, r2
 80024fa:	61bb      	str	r3, [r7, #24]
 80024fc:	69ba      	ldr	r2, [r7, #24]
 80024fe:	69fb      	ldr	r3, [r7, #28]
 8002500:	429a      	cmp	r2, r3
 8002502:	f040 8158 	bne.w	80027b6 <HAL_GPIO_Init+0x2e2>
 8002506:	683b      	ldr	r3, [r7, #0]
 8002508:	685b      	ldr	r3, [r3, #4]
 800250a:	4a9a      	ldr	r2, [pc, #616]	; (8002774 <HAL_GPIO_Init+0x2a0>)
 800250c:	4293      	cmp	r3, r2
 800250e:	d05e      	beq.n	80025ce <HAL_GPIO_Init+0xfa>
 8002510:	4a98      	ldr	r2, [pc, #608]	; (8002774 <HAL_GPIO_Init+0x2a0>)
 8002512:	4293      	cmp	r3, r2
 8002514:	d875      	bhi.n	8002602 <HAL_GPIO_Init+0x12e>
 8002516:	4a98      	ldr	r2, [pc, #608]	; (8002778 <HAL_GPIO_Init+0x2a4>)
 8002518:	4293      	cmp	r3, r2
 800251a:	d058      	beq.n	80025ce <HAL_GPIO_Init+0xfa>
 800251c:	4a96      	ldr	r2, [pc, #600]	; (8002778 <HAL_GPIO_Init+0x2a4>)
 800251e:	4293      	cmp	r3, r2
 8002520:	d86f      	bhi.n	8002602 <HAL_GPIO_Init+0x12e>
 8002522:	4a96      	ldr	r2, [pc, #600]	; (800277c <HAL_GPIO_Init+0x2a8>)
 8002524:	4293      	cmp	r3, r2
 8002526:	d052      	beq.n	80025ce <HAL_GPIO_Init+0xfa>
 8002528:	4a94      	ldr	r2, [pc, #592]	; (800277c <HAL_GPIO_Init+0x2a8>)
 800252a:	4293      	cmp	r3, r2
 800252c:	d869      	bhi.n	8002602 <HAL_GPIO_Init+0x12e>
 800252e:	4a94      	ldr	r2, [pc, #592]	; (8002780 <HAL_GPIO_Init+0x2ac>)
 8002530:	4293      	cmp	r3, r2
 8002532:	d04c      	beq.n	80025ce <HAL_GPIO_Init+0xfa>
 8002534:	4a92      	ldr	r2, [pc, #584]	; (8002780 <HAL_GPIO_Init+0x2ac>)
 8002536:	4293      	cmp	r3, r2
 8002538:	d863      	bhi.n	8002602 <HAL_GPIO_Init+0x12e>
 800253a:	4a92      	ldr	r2, [pc, #584]	; (8002784 <HAL_GPIO_Init+0x2b0>)
 800253c:	4293      	cmp	r3, r2
 800253e:	d046      	beq.n	80025ce <HAL_GPIO_Init+0xfa>
 8002540:	4a90      	ldr	r2, [pc, #576]	; (8002784 <HAL_GPIO_Init+0x2b0>)
 8002542:	4293      	cmp	r3, r2
 8002544:	d85d      	bhi.n	8002602 <HAL_GPIO_Init+0x12e>
 8002546:	2b12      	cmp	r3, #18
 8002548:	d82a      	bhi.n	80025a0 <HAL_GPIO_Init+0xcc>
 800254a:	2b12      	cmp	r3, #18
 800254c:	d859      	bhi.n	8002602 <HAL_GPIO_Init+0x12e>
 800254e:	a201      	add	r2, pc, #4	; (adr r2, 8002554 <HAL_GPIO_Init+0x80>)
 8002550:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002554:	080025cf 	.word	0x080025cf
 8002558:	080025a9 	.word	0x080025a9
 800255c:	080025bb 	.word	0x080025bb
 8002560:	080025fd 	.word	0x080025fd
 8002564:	08002603 	.word	0x08002603
 8002568:	08002603 	.word	0x08002603
 800256c:	08002603 	.word	0x08002603
 8002570:	08002603 	.word	0x08002603
 8002574:	08002603 	.word	0x08002603
 8002578:	08002603 	.word	0x08002603
 800257c:	08002603 	.word	0x08002603
 8002580:	08002603 	.word	0x08002603
 8002584:	08002603 	.word	0x08002603
 8002588:	08002603 	.word	0x08002603
 800258c:	08002603 	.word	0x08002603
 8002590:	08002603 	.word	0x08002603
 8002594:	08002603 	.word	0x08002603
 8002598:	080025b1 	.word	0x080025b1
 800259c:	080025c5 	.word	0x080025c5
 80025a0:	4a79      	ldr	r2, [pc, #484]	; (8002788 <HAL_GPIO_Init+0x2b4>)
 80025a2:	4293      	cmp	r3, r2
 80025a4:	d013      	beq.n	80025ce <HAL_GPIO_Init+0xfa>
 80025a6:	e02c      	b.n	8002602 <HAL_GPIO_Init+0x12e>
 80025a8:	683b      	ldr	r3, [r7, #0]
 80025aa:	68db      	ldr	r3, [r3, #12]
 80025ac:	623b      	str	r3, [r7, #32]
 80025ae:	e029      	b.n	8002604 <HAL_GPIO_Init+0x130>
 80025b0:	683b      	ldr	r3, [r7, #0]
 80025b2:	68db      	ldr	r3, [r3, #12]
 80025b4:	3304      	adds	r3, #4
 80025b6:	623b      	str	r3, [r7, #32]
 80025b8:	e024      	b.n	8002604 <HAL_GPIO_Init+0x130>
 80025ba:	683b      	ldr	r3, [r7, #0]
 80025bc:	68db      	ldr	r3, [r3, #12]
 80025be:	3308      	adds	r3, #8
 80025c0:	623b      	str	r3, [r7, #32]
 80025c2:	e01f      	b.n	8002604 <HAL_GPIO_Init+0x130>
 80025c4:	683b      	ldr	r3, [r7, #0]
 80025c6:	68db      	ldr	r3, [r3, #12]
 80025c8:	330c      	adds	r3, #12
 80025ca:	623b      	str	r3, [r7, #32]
 80025cc:	e01a      	b.n	8002604 <HAL_GPIO_Init+0x130>
 80025ce:	683b      	ldr	r3, [r7, #0]
 80025d0:	689b      	ldr	r3, [r3, #8]
 80025d2:	2b00      	cmp	r3, #0
 80025d4:	d102      	bne.n	80025dc <HAL_GPIO_Init+0x108>
 80025d6:	2304      	movs	r3, #4
 80025d8:	623b      	str	r3, [r7, #32]
 80025da:	e013      	b.n	8002604 <HAL_GPIO_Init+0x130>
 80025dc:	683b      	ldr	r3, [r7, #0]
 80025de:	689b      	ldr	r3, [r3, #8]
 80025e0:	2b01      	cmp	r3, #1
 80025e2:	d105      	bne.n	80025f0 <HAL_GPIO_Init+0x11c>
 80025e4:	2308      	movs	r3, #8
 80025e6:	623b      	str	r3, [r7, #32]
 80025e8:	687b      	ldr	r3, [r7, #4]
 80025ea:	69fa      	ldr	r2, [r7, #28]
 80025ec:	611a      	str	r2, [r3, #16]
 80025ee:	e009      	b.n	8002604 <HAL_GPIO_Init+0x130>
 80025f0:	2308      	movs	r3, #8
 80025f2:	623b      	str	r3, [r7, #32]
 80025f4:	687b      	ldr	r3, [r7, #4]
 80025f6:	69fa      	ldr	r2, [r7, #28]
 80025f8:	615a      	str	r2, [r3, #20]
 80025fa:	e003      	b.n	8002604 <HAL_GPIO_Init+0x130>
 80025fc:	2300      	movs	r3, #0
 80025fe:	623b      	str	r3, [r7, #32]
 8002600:	e000      	b.n	8002604 <HAL_GPIO_Init+0x130>
 8002602:	bf00      	nop
 8002604:	69bb      	ldr	r3, [r7, #24]
 8002606:	2bff      	cmp	r3, #255	; 0xff
 8002608:	d801      	bhi.n	800260e <HAL_GPIO_Init+0x13a>
 800260a:	687b      	ldr	r3, [r7, #4]
 800260c:	e001      	b.n	8002612 <HAL_GPIO_Init+0x13e>
 800260e:	687b      	ldr	r3, [r7, #4]
 8002610:	3304      	adds	r3, #4
 8002612:	617b      	str	r3, [r7, #20]
 8002614:	69bb      	ldr	r3, [r7, #24]
 8002616:	2bff      	cmp	r3, #255	; 0xff
 8002618:	d802      	bhi.n	8002620 <HAL_GPIO_Init+0x14c>
 800261a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800261c:	009b      	lsls	r3, r3, #2
 800261e:	e002      	b.n	8002626 <HAL_GPIO_Init+0x152>
 8002620:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002622:	3b08      	subs	r3, #8
 8002624:	009b      	lsls	r3, r3, #2
 8002626:	613b      	str	r3, [r7, #16]
 8002628:	697b      	ldr	r3, [r7, #20]
 800262a:	681a      	ldr	r2, [r3, #0]
 800262c:	210f      	movs	r1, #15
 800262e:	693b      	ldr	r3, [r7, #16]
 8002630:	fa01 f303 	lsl.w	r3, r1, r3
 8002634:	43db      	mvns	r3, r3
 8002636:	401a      	ands	r2, r3
 8002638:	6a39      	ldr	r1, [r7, #32]
 800263a:	693b      	ldr	r3, [r7, #16]
 800263c:	fa01 f303 	lsl.w	r3, r1, r3
 8002640:	431a      	orrs	r2, r3
 8002642:	697b      	ldr	r3, [r7, #20]
 8002644:	601a      	str	r2, [r3, #0]
 8002646:	683b      	ldr	r3, [r7, #0]
 8002648:	685b      	ldr	r3, [r3, #4]
 800264a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800264e:	2b00      	cmp	r3, #0
 8002650:	f000 80b1 	beq.w	80027b6 <HAL_GPIO_Init+0x2e2>
 8002654:	4b4d      	ldr	r3, [pc, #308]	; (800278c <HAL_GPIO_Init+0x2b8>)
 8002656:	699b      	ldr	r3, [r3, #24]
 8002658:	4a4c      	ldr	r2, [pc, #304]	; (800278c <HAL_GPIO_Init+0x2b8>)
 800265a:	f043 0301 	orr.w	r3, r3, #1
 800265e:	6193      	str	r3, [r2, #24]
 8002660:	4b4a      	ldr	r3, [pc, #296]	; (800278c <HAL_GPIO_Init+0x2b8>)
 8002662:	699b      	ldr	r3, [r3, #24]
 8002664:	f003 0301 	and.w	r3, r3, #1
 8002668:	60bb      	str	r3, [r7, #8]
 800266a:	68bb      	ldr	r3, [r7, #8]
 800266c:	4a48      	ldr	r2, [pc, #288]	; (8002790 <HAL_GPIO_Init+0x2bc>)
 800266e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002670:	089b      	lsrs	r3, r3, #2
 8002672:	3302      	adds	r3, #2
 8002674:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002678:	60fb      	str	r3, [r7, #12]
 800267a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800267c:	f003 0303 	and.w	r3, r3, #3
 8002680:	009b      	lsls	r3, r3, #2
 8002682:	220f      	movs	r2, #15
 8002684:	fa02 f303 	lsl.w	r3, r2, r3
 8002688:	43db      	mvns	r3, r3
 800268a:	68fa      	ldr	r2, [r7, #12]
 800268c:	4013      	ands	r3, r2
 800268e:	60fb      	str	r3, [r7, #12]
 8002690:	687b      	ldr	r3, [r7, #4]
 8002692:	4a40      	ldr	r2, [pc, #256]	; (8002794 <HAL_GPIO_Init+0x2c0>)
 8002694:	4293      	cmp	r3, r2
 8002696:	d013      	beq.n	80026c0 <HAL_GPIO_Init+0x1ec>
 8002698:	687b      	ldr	r3, [r7, #4]
 800269a:	4a3f      	ldr	r2, [pc, #252]	; (8002798 <HAL_GPIO_Init+0x2c4>)
 800269c:	4293      	cmp	r3, r2
 800269e:	d00d      	beq.n	80026bc <HAL_GPIO_Init+0x1e8>
 80026a0:	687b      	ldr	r3, [r7, #4]
 80026a2:	4a3e      	ldr	r2, [pc, #248]	; (800279c <HAL_GPIO_Init+0x2c8>)
 80026a4:	4293      	cmp	r3, r2
 80026a6:	d007      	beq.n	80026b8 <HAL_GPIO_Init+0x1e4>
 80026a8:	687b      	ldr	r3, [r7, #4]
 80026aa:	4a3d      	ldr	r2, [pc, #244]	; (80027a0 <HAL_GPIO_Init+0x2cc>)
 80026ac:	4293      	cmp	r3, r2
 80026ae:	d101      	bne.n	80026b4 <HAL_GPIO_Init+0x1e0>
 80026b0:	2303      	movs	r3, #3
 80026b2:	e006      	b.n	80026c2 <HAL_GPIO_Init+0x1ee>
 80026b4:	2304      	movs	r3, #4
 80026b6:	e004      	b.n	80026c2 <HAL_GPIO_Init+0x1ee>
 80026b8:	2302      	movs	r3, #2
 80026ba:	e002      	b.n	80026c2 <HAL_GPIO_Init+0x1ee>
 80026bc:	2301      	movs	r3, #1
 80026be:	e000      	b.n	80026c2 <HAL_GPIO_Init+0x1ee>
 80026c0:	2300      	movs	r3, #0
 80026c2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80026c4:	f002 0203 	and.w	r2, r2, #3
 80026c8:	0092      	lsls	r2, r2, #2
 80026ca:	4093      	lsls	r3, r2
 80026cc:	68fa      	ldr	r2, [r7, #12]
 80026ce:	4313      	orrs	r3, r2
 80026d0:	60fb      	str	r3, [r7, #12]
 80026d2:	492f      	ldr	r1, [pc, #188]	; (8002790 <HAL_GPIO_Init+0x2bc>)
 80026d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80026d6:	089b      	lsrs	r3, r3, #2
 80026d8:	3302      	adds	r3, #2
 80026da:	68fa      	ldr	r2, [r7, #12]
 80026dc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80026e0:	683b      	ldr	r3, [r7, #0]
 80026e2:	685b      	ldr	r3, [r3, #4]
 80026e4:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80026e8:	2b00      	cmp	r3, #0
 80026ea:	d006      	beq.n	80026fa <HAL_GPIO_Init+0x226>
 80026ec:	4b2d      	ldr	r3, [pc, #180]	; (80027a4 <HAL_GPIO_Init+0x2d0>)
 80026ee:	689a      	ldr	r2, [r3, #8]
 80026f0:	492c      	ldr	r1, [pc, #176]	; (80027a4 <HAL_GPIO_Init+0x2d0>)
 80026f2:	69bb      	ldr	r3, [r7, #24]
 80026f4:	4313      	orrs	r3, r2
 80026f6:	608b      	str	r3, [r1, #8]
 80026f8:	e006      	b.n	8002708 <HAL_GPIO_Init+0x234>
 80026fa:	4b2a      	ldr	r3, [pc, #168]	; (80027a4 <HAL_GPIO_Init+0x2d0>)
 80026fc:	689a      	ldr	r2, [r3, #8]
 80026fe:	69bb      	ldr	r3, [r7, #24]
 8002700:	43db      	mvns	r3, r3
 8002702:	4928      	ldr	r1, [pc, #160]	; (80027a4 <HAL_GPIO_Init+0x2d0>)
 8002704:	4013      	ands	r3, r2
 8002706:	608b      	str	r3, [r1, #8]
 8002708:	683b      	ldr	r3, [r7, #0]
 800270a:	685b      	ldr	r3, [r3, #4]
 800270c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002710:	2b00      	cmp	r3, #0
 8002712:	d006      	beq.n	8002722 <HAL_GPIO_Init+0x24e>
 8002714:	4b23      	ldr	r3, [pc, #140]	; (80027a4 <HAL_GPIO_Init+0x2d0>)
 8002716:	68da      	ldr	r2, [r3, #12]
 8002718:	4922      	ldr	r1, [pc, #136]	; (80027a4 <HAL_GPIO_Init+0x2d0>)
 800271a:	69bb      	ldr	r3, [r7, #24]
 800271c:	4313      	orrs	r3, r2
 800271e:	60cb      	str	r3, [r1, #12]
 8002720:	e006      	b.n	8002730 <HAL_GPIO_Init+0x25c>
 8002722:	4b20      	ldr	r3, [pc, #128]	; (80027a4 <HAL_GPIO_Init+0x2d0>)
 8002724:	68da      	ldr	r2, [r3, #12]
 8002726:	69bb      	ldr	r3, [r7, #24]
 8002728:	43db      	mvns	r3, r3
 800272a:	491e      	ldr	r1, [pc, #120]	; (80027a4 <HAL_GPIO_Init+0x2d0>)
 800272c:	4013      	ands	r3, r2
 800272e:	60cb      	str	r3, [r1, #12]
 8002730:	683b      	ldr	r3, [r7, #0]
 8002732:	685b      	ldr	r3, [r3, #4]
 8002734:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002738:	2b00      	cmp	r3, #0
 800273a:	d006      	beq.n	800274a <HAL_GPIO_Init+0x276>
 800273c:	4b19      	ldr	r3, [pc, #100]	; (80027a4 <HAL_GPIO_Init+0x2d0>)
 800273e:	685a      	ldr	r2, [r3, #4]
 8002740:	4918      	ldr	r1, [pc, #96]	; (80027a4 <HAL_GPIO_Init+0x2d0>)
 8002742:	69bb      	ldr	r3, [r7, #24]
 8002744:	4313      	orrs	r3, r2
 8002746:	604b      	str	r3, [r1, #4]
 8002748:	e006      	b.n	8002758 <HAL_GPIO_Init+0x284>
 800274a:	4b16      	ldr	r3, [pc, #88]	; (80027a4 <HAL_GPIO_Init+0x2d0>)
 800274c:	685a      	ldr	r2, [r3, #4]
 800274e:	69bb      	ldr	r3, [r7, #24]
 8002750:	43db      	mvns	r3, r3
 8002752:	4914      	ldr	r1, [pc, #80]	; (80027a4 <HAL_GPIO_Init+0x2d0>)
 8002754:	4013      	ands	r3, r2
 8002756:	604b      	str	r3, [r1, #4]
 8002758:	683b      	ldr	r3, [r7, #0]
 800275a:	685b      	ldr	r3, [r3, #4]
 800275c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002760:	2b00      	cmp	r3, #0
 8002762:	d021      	beq.n	80027a8 <HAL_GPIO_Init+0x2d4>
 8002764:	4b0f      	ldr	r3, [pc, #60]	; (80027a4 <HAL_GPIO_Init+0x2d0>)
 8002766:	681a      	ldr	r2, [r3, #0]
 8002768:	490e      	ldr	r1, [pc, #56]	; (80027a4 <HAL_GPIO_Init+0x2d0>)
 800276a:	69bb      	ldr	r3, [r7, #24]
 800276c:	4313      	orrs	r3, r2
 800276e:	600b      	str	r3, [r1, #0]
 8002770:	e021      	b.n	80027b6 <HAL_GPIO_Init+0x2e2>
 8002772:	bf00      	nop
 8002774:	10320000 	.word	0x10320000
 8002778:	10310000 	.word	0x10310000
 800277c:	10220000 	.word	0x10220000
 8002780:	10210000 	.word	0x10210000
 8002784:	10120000 	.word	0x10120000
 8002788:	10110000 	.word	0x10110000
 800278c:	40021000 	.word	0x40021000
 8002790:	40010000 	.word	0x40010000
 8002794:	40010800 	.word	0x40010800
 8002798:	40010c00 	.word	0x40010c00
 800279c:	40011000 	.word	0x40011000
 80027a0:	40011400 	.word	0x40011400
 80027a4:	40010400 	.word	0x40010400
 80027a8:	4b0b      	ldr	r3, [pc, #44]	; (80027d8 <HAL_GPIO_Init+0x304>)
 80027aa:	681a      	ldr	r2, [r3, #0]
 80027ac:	69bb      	ldr	r3, [r7, #24]
 80027ae:	43db      	mvns	r3, r3
 80027b0:	4909      	ldr	r1, [pc, #36]	; (80027d8 <HAL_GPIO_Init+0x304>)
 80027b2:	4013      	ands	r3, r2
 80027b4:	600b      	str	r3, [r1, #0]
 80027b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80027b8:	3301      	adds	r3, #1
 80027ba:	627b      	str	r3, [r7, #36]	; 0x24
 80027bc:	683b      	ldr	r3, [r7, #0]
 80027be:	681a      	ldr	r2, [r3, #0]
 80027c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80027c2:	fa22 f303 	lsr.w	r3, r2, r3
 80027c6:	2b00      	cmp	r3, #0
 80027c8:	f47f ae8e 	bne.w	80024e8 <HAL_GPIO_Init+0x14>
 80027cc:	bf00      	nop
 80027ce:	bf00      	nop
 80027d0:	372c      	adds	r7, #44	; 0x2c
 80027d2:	46bd      	mov	sp, r7
 80027d4:	bc80      	pop	{r7}
 80027d6:	4770      	bx	lr
 80027d8:	40010400 	.word	0x40010400

080027dc <HAL_GPIO_ReadPin>:
 80027dc:	b480      	push	{r7}
 80027de:	b085      	sub	sp, #20
 80027e0:	af00      	add	r7, sp, #0
 80027e2:	6078      	str	r0, [r7, #4]
 80027e4:	460b      	mov	r3, r1
 80027e6:	807b      	strh	r3, [r7, #2]
 80027e8:	687b      	ldr	r3, [r7, #4]
 80027ea:	689a      	ldr	r2, [r3, #8]
 80027ec:	887b      	ldrh	r3, [r7, #2]
 80027ee:	4013      	ands	r3, r2
 80027f0:	2b00      	cmp	r3, #0
 80027f2:	d002      	beq.n	80027fa <HAL_GPIO_ReadPin+0x1e>
 80027f4:	2301      	movs	r3, #1
 80027f6:	73fb      	strb	r3, [r7, #15]
 80027f8:	e001      	b.n	80027fe <HAL_GPIO_ReadPin+0x22>
 80027fa:	2300      	movs	r3, #0
 80027fc:	73fb      	strb	r3, [r7, #15]
 80027fe:	7bfb      	ldrb	r3, [r7, #15]
 8002800:	4618      	mov	r0, r3
 8002802:	3714      	adds	r7, #20
 8002804:	46bd      	mov	sp, r7
 8002806:	bc80      	pop	{r7}
 8002808:	4770      	bx	lr

0800280a <HAL_GPIO_WritePin>:
 800280a:	b480      	push	{r7}
 800280c:	b083      	sub	sp, #12
 800280e:	af00      	add	r7, sp, #0
 8002810:	6078      	str	r0, [r7, #4]
 8002812:	460b      	mov	r3, r1
 8002814:	807b      	strh	r3, [r7, #2]
 8002816:	4613      	mov	r3, r2
 8002818:	707b      	strb	r3, [r7, #1]
 800281a:	787b      	ldrb	r3, [r7, #1]
 800281c:	2b00      	cmp	r3, #0
 800281e:	d003      	beq.n	8002828 <HAL_GPIO_WritePin+0x1e>
 8002820:	887a      	ldrh	r2, [r7, #2]
 8002822:	687b      	ldr	r3, [r7, #4]
 8002824:	611a      	str	r2, [r3, #16]
 8002826:	e003      	b.n	8002830 <HAL_GPIO_WritePin+0x26>
 8002828:	887b      	ldrh	r3, [r7, #2]
 800282a:	041a      	lsls	r2, r3, #16
 800282c:	687b      	ldr	r3, [r7, #4]
 800282e:	611a      	str	r2, [r3, #16]
 8002830:	bf00      	nop
 8002832:	370c      	adds	r7, #12
 8002834:	46bd      	mov	sp, r7
 8002836:	bc80      	pop	{r7}
 8002838:	4770      	bx	lr

0800283a <HAL_GPIO_TogglePin>:
 800283a:	b480      	push	{r7}
 800283c:	b085      	sub	sp, #20
 800283e:	af00      	add	r7, sp, #0
 8002840:	6078      	str	r0, [r7, #4]
 8002842:	460b      	mov	r3, r1
 8002844:	807b      	strh	r3, [r7, #2]
 8002846:	687b      	ldr	r3, [r7, #4]
 8002848:	68db      	ldr	r3, [r3, #12]
 800284a:	60fb      	str	r3, [r7, #12]
 800284c:	887a      	ldrh	r2, [r7, #2]
 800284e:	68fb      	ldr	r3, [r7, #12]
 8002850:	4013      	ands	r3, r2
 8002852:	041a      	lsls	r2, r3, #16
 8002854:	68fb      	ldr	r3, [r7, #12]
 8002856:	43d9      	mvns	r1, r3
 8002858:	887b      	ldrh	r3, [r7, #2]
 800285a:	400b      	ands	r3, r1
 800285c:	431a      	orrs	r2, r3
 800285e:	687b      	ldr	r3, [r7, #4]
 8002860:	611a      	str	r2, [r3, #16]
 8002862:	bf00      	nop
 8002864:	3714      	adds	r7, #20
 8002866:	46bd      	mov	sp, r7
 8002868:	bc80      	pop	{r7}
 800286a:	4770      	bx	lr

0800286c <HAL_RCC_OscConfig>:
 800286c:	b580      	push	{r7, lr}
 800286e:	b086      	sub	sp, #24
 8002870:	af00      	add	r7, sp, #0
 8002872:	6078      	str	r0, [r7, #4]
 8002874:	687b      	ldr	r3, [r7, #4]
 8002876:	2b00      	cmp	r3, #0
 8002878:	d101      	bne.n	800287e <HAL_RCC_OscConfig+0x12>
 800287a:	2301      	movs	r3, #1
 800287c:	e272      	b.n	8002d64 <HAL_RCC_OscConfig+0x4f8>
 800287e:	687b      	ldr	r3, [r7, #4]
 8002880:	681b      	ldr	r3, [r3, #0]
 8002882:	f003 0301 	and.w	r3, r3, #1
 8002886:	2b00      	cmp	r3, #0
 8002888:	f000 8087 	beq.w	800299a <HAL_RCC_OscConfig+0x12e>
 800288c:	4b92      	ldr	r3, [pc, #584]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 800288e:	685b      	ldr	r3, [r3, #4]
 8002890:	f003 030c 	and.w	r3, r3, #12
 8002894:	2b04      	cmp	r3, #4
 8002896:	d00c      	beq.n	80028b2 <HAL_RCC_OscConfig+0x46>
 8002898:	4b8f      	ldr	r3, [pc, #572]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 800289a:	685b      	ldr	r3, [r3, #4]
 800289c:	f003 030c 	and.w	r3, r3, #12
 80028a0:	2b08      	cmp	r3, #8
 80028a2:	d112      	bne.n	80028ca <HAL_RCC_OscConfig+0x5e>
 80028a4:	4b8c      	ldr	r3, [pc, #560]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 80028a6:	685b      	ldr	r3, [r3, #4]
 80028a8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80028ac:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80028b0:	d10b      	bne.n	80028ca <HAL_RCC_OscConfig+0x5e>
 80028b2:	4b89      	ldr	r3, [pc, #548]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 80028b4:	681b      	ldr	r3, [r3, #0]
 80028b6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80028ba:	2b00      	cmp	r3, #0
 80028bc:	d06c      	beq.n	8002998 <HAL_RCC_OscConfig+0x12c>
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	685b      	ldr	r3, [r3, #4]
 80028c2:	2b00      	cmp	r3, #0
 80028c4:	d168      	bne.n	8002998 <HAL_RCC_OscConfig+0x12c>
 80028c6:	2301      	movs	r3, #1
 80028c8:	e24c      	b.n	8002d64 <HAL_RCC_OscConfig+0x4f8>
 80028ca:	687b      	ldr	r3, [r7, #4]
 80028cc:	685b      	ldr	r3, [r3, #4]
 80028ce:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80028d2:	d106      	bne.n	80028e2 <HAL_RCC_OscConfig+0x76>
 80028d4:	4b80      	ldr	r3, [pc, #512]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 80028d6:	681b      	ldr	r3, [r3, #0]
 80028d8:	4a7f      	ldr	r2, [pc, #508]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 80028da:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80028de:	6013      	str	r3, [r2, #0]
 80028e0:	e02e      	b.n	8002940 <HAL_RCC_OscConfig+0xd4>
 80028e2:	687b      	ldr	r3, [r7, #4]
 80028e4:	685b      	ldr	r3, [r3, #4]
 80028e6:	2b00      	cmp	r3, #0
 80028e8:	d10c      	bne.n	8002904 <HAL_RCC_OscConfig+0x98>
 80028ea:	4b7b      	ldr	r3, [pc, #492]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 80028ec:	681b      	ldr	r3, [r3, #0]
 80028ee:	4a7a      	ldr	r2, [pc, #488]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 80028f0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80028f4:	6013      	str	r3, [r2, #0]
 80028f6:	4b78      	ldr	r3, [pc, #480]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 80028f8:	681b      	ldr	r3, [r3, #0]
 80028fa:	4a77      	ldr	r2, [pc, #476]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 80028fc:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002900:	6013      	str	r3, [r2, #0]
 8002902:	e01d      	b.n	8002940 <HAL_RCC_OscConfig+0xd4>
 8002904:	687b      	ldr	r3, [r7, #4]
 8002906:	685b      	ldr	r3, [r3, #4]
 8002908:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800290c:	d10c      	bne.n	8002928 <HAL_RCC_OscConfig+0xbc>
 800290e:	4b72      	ldr	r3, [pc, #456]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 8002910:	681b      	ldr	r3, [r3, #0]
 8002912:	4a71      	ldr	r2, [pc, #452]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 8002914:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002918:	6013      	str	r3, [r2, #0]
 800291a:	4b6f      	ldr	r3, [pc, #444]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 800291c:	681b      	ldr	r3, [r3, #0]
 800291e:	4a6e      	ldr	r2, [pc, #440]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 8002920:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002924:	6013      	str	r3, [r2, #0]
 8002926:	e00b      	b.n	8002940 <HAL_RCC_OscConfig+0xd4>
 8002928:	4b6b      	ldr	r3, [pc, #428]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 800292a:	681b      	ldr	r3, [r3, #0]
 800292c:	4a6a      	ldr	r2, [pc, #424]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 800292e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002932:	6013      	str	r3, [r2, #0]
 8002934:	4b68      	ldr	r3, [pc, #416]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 8002936:	681b      	ldr	r3, [r3, #0]
 8002938:	4a67      	ldr	r2, [pc, #412]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 800293a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800293e:	6013      	str	r3, [r2, #0]
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	685b      	ldr	r3, [r3, #4]
 8002944:	2b00      	cmp	r3, #0
 8002946:	d013      	beq.n	8002970 <HAL_RCC_OscConfig+0x104>
 8002948:	f7ff fcb2 	bl	80022b0 <HAL_GetTick>
 800294c:	6138      	str	r0, [r7, #16]
 800294e:	e008      	b.n	8002962 <HAL_RCC_OscConfig+0xf6>
 8002950:	f7ff fcae 	bl	80022b0 <HAL_GetTick>
 8002954:	4602      	mov	r2, r0
 8002956:	693b      	ldr	r3, [r7, #16]
 8002958:	1ad3      	subs	r3, r2, r3
 800295a:	2b64      	cmp	r3, #100	; 0x64
 800295c:	d901      	bls.n	8002962 <HAL_RCC_OscConfig+0xf6>
 800295e:	2303      	movs	r3, #3
 8002960:	e200      	b.n	8002d64 <HAL_RCC_OscConfig+0x4f8>
 8002962:	4b5d      	ldr	r3, [pc, #372]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 8002964:	681b      	ldr	r3, [r3, #0]
 8002966:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800296a:	2b00      	cmp	r3, #0
 800296c:	d0f0      	beq.n	8002950 <HAL_RCC_OscConfig+0xe4>
 800296e:	e014      	b.n	800299a <HAL_RCC_OscConfig+0x12e>
 8002970:	f7ff fc9e 	bl	80022b0 <HAL_GetTick>
 8002974:	6138      	str	r0, [r7, #16]
 8002976:	e008      	b.n	800298a <HAL_RCC_OscConfig+0x11e>
 8002978:	f7ff fc9a 	bl	80022b0 <HAL_GetTick>
 800297c:	4602      	mov	r2, r0
 800297e:	693b      	ldr	r3, [r7, #16]
 8002980:	1ad3      	subs	r3, r2, r3
 8002982:	2b64      	cmp	r3, #100	; 0x64
 8002984:	d901      	bls.n	800298a <HAL_RCC_OscConfig+0x11e>
 8002986:	2303      	movs	r3, #3
 8002988:	e1ec      	b.n	8002d64 <HAL_RCC_OscConfig+0x4f8>
 800298a:	4b53      	ldr	r3, [pc, #332]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 800298c:	681b      	ldr	r3, [r3, #0]
 800298e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002992:	2b00      	cmp	r3, #0
 8002994:	d1f0      	bne.n	8002978 <HAL_RCC_OscConfig+0x10c>
 8002996:	e000      	b.n	800299a <HAL_RCC_OscConfig+0x12e>
 8002998:	bf00      	nop
 800299a:	687b      	ldr	r3, [r7, #4]
 800299c:	681b      	ldr	r3, [r3, #0]
 800299e:	f003 0302 	and.w	r3, r3, #2
 80029a2:	2b00      	cmp	r3, #0
 80029a4:	d063      	beq.n	8002a6e <HAL_RCC_OscConfig+0x202>
 80029a6:	4b4c      	ldr	r3, [pc, #304]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 80029a8:	685b      	ldr	r3, [r3, #4]
 80029aa:	f003 030c 	and.w	r3, r3, #12
 80029ae:	2b00      	cmp	r3, #0
 80029b0:	d00b      	beq.n	80029ca <HAL_RCC_OscConfig+0x15e>
 80029b2:	4b49      	ldr	r3, [pc, #292]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 80029b4:	685b      	ldr	r3, [r3, #4]
 80029b6:	f003 030c 	and.w	r3, r3, #12
 80029ba:	2b08      	cmp	r3, #8
 80029bc:	d11c      	bne.n	80029f8 <HAL_RCC_OscConfig+0x18c>
 80029be:	4b46      	ldr	r3, [pc, #280]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 80029c0:	685b      	ldr	r3, [r3, #4]
 80029c2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80029c6:	2b00      	cmp	r3, #0
 80029c8:	d116      	bne.n	80029f8 <HAL_RCC_OscConfig+0x18c>
 80029ca:	4b43      	ldr	r3, [pc, #268]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 80029cc:	681b      	ldr	r3, [r3, #0]
 80029ce:	f003 0302 	and.w	r3, r3, #2
 80029d2:	2b00      	cmp	r3, #0
 80029d4:	d005      	beq.n	80029e2 <HAL_RCC_OscConfig+0x176>
 80029d6:	687b      	ldr	r3, [r7, #4]
 80029d8:	691b      	ldr	r3, [r3, #16]
 80029da:	2b01      	cmp	r3, #1
 80029dc:	d001      	beq.n	80029e2 <HAL_RCC_OscConfig+0x176>
 80029de:	2301      	movs	r3, #1
 80029e0:	e1c0      	b.n	8002d64 <HAL_RCC_OscConfig+0x4f8>
 80029e2:	4b3d      	ldr	r3, [pc, #244]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 80029e4:	681b      	ldr	r3, [r3, #0]
 80029e6:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80029ea:	687b      	ldr	r3, [r7, #4]
 80029ec:	695b      	ldr	r3, [r3, #20]
 80029ee:	00db      	lsls	r3, r3, #3
 80029f0:	4939      	ldr	r1, [pc, #228]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 80029f2:	4313      	orrs	r3, r2
 80029f4:	600b      	str	r3, [r1, #0]
 80029f6:	e03a      	b.n	8002a6e <HAL_RCC_OscConfig+0x202>
 80029f8:	687b      	ldr	r3, [r7, #4]
 80029fa:	691b      	ldr	r3, [r3, #16]
 80029fc:	2b00      	cmp	r3, #0
 80029fe:	d020      	beq.n	8002a42 <HAL_RCC_OscConfig+0x1d6>
 8002a00:	4b36      	ldr	r3, [pc, #216]	; (8002adc <HAL_RCC_OscConfig+0x270>)
 8002a02:	2201      	movs	r2, #1
 8002a04:	601a      	str	r2, [r3, #0]
 8002a06:	f7ff fc53 	bl	80022b0 <HAL_GetTick>
 8002a0a:	6138      	str	r0, [r7, #16]
 8002a0c:	e008      	b.n	8002a20 <HAL_RCC_OscConfig+0x1b4>
 8002a0e:	f7ff fc4f 	bl	80022b0 <HAL_GetTick>
 8002a12:	4602      	mov	r2, r0
 8002a14:	693b      	ldr	r3, [r7, #16]
 8002a16:	1ad3      	subs	r3, r2, r3
 8002a18:	2b02      	cmp	r3, #2
 8002a1a:	d901      	bls.n	8002a20 <HAL_RCC_OscConfig+0x1b4>
 8002a1c:	2303      	movs	r3, #3
 8002a1e:	e1a1      	b.n	8002d64 <HAL_RCC_OscConfig+0x4f8>
 8002a20:	4b2d      	ldr	r3, [pc, #180]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 8002a22:	681b      	ldr	r3, [r3, #0]
 8002a24:	f003 0302 	and.w	r3, r3, #2
 8002a28:	2b00      	cmp	r3, #0
 8002a2a:	d0f0      	beq.n	8002a0e <HAL_RCC_OscConfig+0x1a2>
 8002a2c:	4b2a      	ldr	r3, [pc, #168]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 8002a2e:	681b      	ldr	r3, [r3, #0]
 8002a30:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002a34:	687b      	ldr	r3, [r7, #4]
 8002a36:	695b      	ldr	r3, [r3, #20]
 8002a38:	00db      	lsls	r3, r3, #3
 8002a3a:	4927      	ldr	r1, [pc, #156]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 8002a3c:	4313      	orrs	r3, r2
 8002a3e:	600b      	str	r3, [r1, #0]
 8002a40:	e015      	b.n	8002a6e <HAL_RCC_OscConfig+0x202>
 8002a42:	4b26      	ldr	r3, [pc, #152]	; (8002adc <HAL_RCC_OscConfig+0x270>)
 8002a44:	2200      	movs	r2, #0
 8002a46:	601a      	str	r2, [r3, #0]
 8002a48:	f7ff fc32 	bl	80022b0 <HAL_GetTick>
 8002a4c:	6138      	str	r0, [r7, #16]
 8002a4e:	e008      	b.n	8002a62 <HAL_RCC_OscConfig+0x1f6>
 8002a50:	f7ff fc2e 	bl	80022b0 <HAL_GetTick>
 8002a54:	4602      	mov	r2, r0
 8002a56:	693b      	ldr	r3, [r7, #16]
 8002a58:	1ad3      	subs	r3, r2, r3
 8002a5a:	2b02      	cmp	r3, #2
 8002a5c:	d901      	bls.n	8002a62 <HAL_RCC_OscConfig+0x1f6>
 8002a5e:	2303      	movs	r3, #3
 8002a60:	e180      	b.n	8002d64 <HAL_RCC_OscConfig+0x4f8>
 8002a62:	4b1d      	ldr	r3, [pc, #116]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 8002a64:	681b      	ldr	r3, [r3, #0]
 8002a66:	f003 0302 	and.w	r3, r3, #2
 8002a6a:	2b00      	cmp	r3, #0
 8002a6c:	d1f0      	bne.n	8002a50 <HAL_RCC_OscConfig+0x1e4>
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	681b      	ldr	r3, [r3, #0]
 8002a72:	f003 0308 	and.w	r3, r3, #8
 8002a76:	2b00      	cmp	r3, #0
 8002a78:	d03a      	beq.n	8002af0 <HAL_RCC_OscConfig+0x284>
 8002a7a:	687b      	ldr	r3, [r7, #4]
 8002a7c:	699b      	ldr	r3, [r3, #24]
 8002a7e:	2b00      	cmp	r3, #0
 8002a80:	d019      	beq.n	8002ab6 <HAL_RCC_OscConfig+0x24a>
 8002a82:	4b17      	ldr	r3, [pc, #92]	; (8002ae0 <HAL_RCC_OscConfig+0x274>)
 8002a84:	2201      	movs	r2, #1
 8002a86:	601a      	str	r2, [r3, #0]
 8002a88:	f7ff fc12 	bl	80022b0 <HAL_GetTick>
 8002a8c:	6138      	str	r0, [r7, #16]
 8002a8e:	e008      	b.n	8002aa2 <HAL_RCC_OscConfig+0x236>
 8002a90:	f7ff fc0e 	bl	80022b0 <HAL_GetTick>
 8002a94:	4602      	mov	r2, r0
 8002a96:	693b      	ldr	r3, [r7, #16]
 8002a98:	1ad3      	subs	r3, r2, r3
 8002a9a:	2b02      	cmp	r3, #2
 8002a9c:	d901      	bls.n	8002aa2 <HAL_RCC_OscConfig+0x236>
 8002a9e:	2303      	movs	r3, #3
 8002aa0:	e160      	b.n	8002d64 <HAL_RCC_OscConfig+0x4f8>
 8002aa2:	4b0d      	ldr	r3, [pc, #52]	; (8002ad8 <HAL_RCC_OscConfig+0x26c>)
 8002aa4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002aa6:	f003 0302 	and.w	r3, r3, #2
 8002aaa:	2b00      	cmp	r3, #0
 8002aac:	d0f0      	beq.n	8002a90 <HAL_RCC_OscConfig+0x224>
 8002aae:	2001      	movs	r0, #1
 8002ab0:	f000 fabc 	bl	800302c <RCC_Delay>
 8002ab4:	e01c      	b.n	8002af0 <HAL_RCC_OscConfig+0x284>
 8002ab6:	4b0a      	ldr	r3, [pc, #40]	; (8002ae0 <HAL_RCC_OscConfig+0x274>)
 8002ab8:	2200      	movs	r2, #0
 8002aba:	601a      	str	r2, [r3, #0]
 8002abc:	f7ff fbf8 	bl	80022b0 <HAL_GetTick>
 8002ac0:	6138      	str	r0, [r7, #16]
 8002ac2:	e00f      	b.n	8002ae4 <HAL_RCC_OscConfig+0x278>
 8002ac4:	f7ff fbf4 	bl	80022b0 <HAL_GetTick>
 8002ac8:	4602      	mov	r2, r0
 8002aca:	693b      	ldr	r3, [r7, #16]
 8002acc:	1ad3      	subs	r3, r2, r3
 8002ace:	2b02      	cmp	r3, #2
 8002ad0:	d908      	bls.n	8002ae4 <HAL_RCC_OscConfig+0x278>
 8002ad2:	2303      	movs	r3, #3
 8002ad4:	e146      	b.n	8002d64 <HAL_RCC_OscConfig+0x4f8>
 8002ad6:	bf00      	nop
 8002ad8:	40021000 	.word	0x40021000
 8002adc:	42420000 	.word	0x42420000
 8002ae0:	42420480 	.word	0x42420480
 8002ae4:	4b92      	ldr	r3, [pc, #584]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002ae6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ae8:	f003 0302 	and.w	r3, r3, #2
 8002aec:	2b00      	cmp	r3, #0
 8002aee:	d1e9      	bne.n	8002ac4 <HAL_RCC_OscConfig+0x258>
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	681b      	ldr	r3, [r3, #0]
 8002af4:	f003 0304 	and.w	r3, r3, #4
 8002af8:	2b00      	cmp	r3, #0
 8002afa:	f000 80a6 	beq.w	8002c4a <HAL_RCC_OscConfig+0x3de>
 8002afe:	2300      	movs	r3, #0
 8002b00:	75fb      	strb	r3, [r7, #23]
 8002b02:	4b8b      	ldr	r3, [pc, #556]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002b04:	69db      	ldr	r3, [r3, #28]
 8002b06:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002b0a:	2b00      	cmp	r3, #0
 8002b0c:	d10d      	bne.n	8002b2a <HAL_RCC_OscConfig+0x2be>
 8002b0e:	4b88      	ldr	r3, [pc, #544]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002b10:	69db      	ldr	r3, [r3, #28]
 8002b12:	4a87      	ldr	r2, [pc, #540]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002b14:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002b18:	61d3      	str	r3, [r2, #28]
 8002b1a:	4b85      	ldr	r3, [pc, #532]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002b1c:	69db      	ldr	r3, [r3, #28]
 8002b1e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002b22:	60bb      	str	r3, [r7, #8]
 8002b24:	68bb      	ldr	r3, [r7, #8]
 8002b26:	2301      	movs	r3, #1
 8002b28:	75fb      	strb	r3, [r7, #23]
 8002b2a:	4b82      	ldr	r3, [pc, #520]	; (8002d34 <HAL_RCC_OscConfig+0x4c8>)
 8002b2c:	681b      	ldr	r3, [r3, #0]
 8002b2e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002b32:	2b00      	cmp	r3, #0
 8002b34:	d118      	bne.n	8002b68 <HAL_RCC_OscConfig+0x2fc>
 8002b36:	4b7f      	ldr	r3, [pc, #508]	; (8002d34 <HAL_RCC_OscConfig+0x4c8>)
 8002b38:	681b      	ldr	r3, [r3, #0]
 8002b3a:	4a7e      	ldr	r2, [pc, #504]	; (8002d34 <HAL_RCC_OscConfig+0x4c8>)
 8002b3c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002b40:	6013      	str	r3, [r2, #0]
 8002b42:	f7ff fbb5 	bl	80022b0 <HAL_GetTick>
 8002b46:	6138      	str	r0, [r7, #16]
 8002b48:	e008      	b.n	8002b5c <HAL_RCC_OscConfig+0x2f0>
 8002b4a:	f7ff fbb1 	bl	80022b0 <HAL_GetTick>
 8002b4e:	4602      	mov	r2, r0
 8002b50:	693b      	ldr	r3, [r7, #16]
 8002b52:	1ad3      	subs	r3, r2, r3
 8002b54:	2b64      	cmp	r3, #100	; 0x64
 8002b56:	d901      	bls.n	8002b5c <HAL_RCC_OscConfig+0x2f0>
 8002b58:	2303      	movs	r3, #3
 8002b5a:	e103      	b.n	8002d64 <HAL_RCC_OscConfig+0x4f8>
 8002b5c:	4b75      	ldr	r3, [pc, #468]	; (8002d34 <HAL_RCC_OscConfig+0x4c8>)
 8002b5e:	681b      	ldr	r3, [r3, #0]
 8002b60:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002b64:	2b00      	cmp	r3, #0
 8002b66:	d0f0      	beq.n	8002b4a <HAL_RCC_OscConfig+0x2de>
 8002b68:	687b      	ldr	r3, [r7, #4]
 8002b6a:	68db      	ldr	r3, [r3, #12]
 8002b6c:	2b01      	cmp	r3, #1
 8002b6e:	d106      	bne.n	8002b7e <HAL_RCC_OscConfig+0x312>
 8002b70:	4b6f      	ldr	r3, [pc, #444]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002b72:	6a1b      	ldr	r3, [r3, #32]
 8002b74:	4a6e      	ldr	r2, [pc, #440]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002b76:	f043 0301 	orr.w	r3, r3, #1
 8002b7a:	6213      	str	r3, [r2, #32]
 8002b7c:	e02d      	b.n	8002bda <HAL_RCC_OscConfig+0x36e>
 8002b7e:	687b      	ldr	r3, [r7, #4]
 8002b80:	68db      	ldr	r3, [r3, #12]
 8002b82:	2b00      	cmp	r3, #0
 8002b84:	d10c      	bne.n	8002ba0 <HAL_RCC_OscConfig+0x334>
 8002b86:	4b6a      	ldr	r3, [pc, #424]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002b88:	6a1b      	ldr	r3, [r3, #32]
 8002b8a:	4a69      	ldr	r2, [pc, #420]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002b8c:	f023 0301 	bic.w	r3, r3, #1
 8002b90:	6213      	str	r3, [r2, #32]
 8002b92:	4b67      	ldr	r3, [pc, #412]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002b94:	6a1b      	ldr	r3, [r3, #32]
 8002b96:	4a66      	ldr	r2, [pc, #408]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002b98:	f023 0304 	bic.w	r3, r3, #4
 8002b9c:	6213      	str	r3, [r2, #32]
 8002b9e:	e01c      	b.n	8002bda <HAL_RCC_OscConfig+0x36e>
 8002ba0:	687b      	ldr	r3, [r7, #4]
 8002ba2:	68db      	ldr	r3, [r3, #12]
 8002ba4:	2b05      	cmp	r3, #5
 8002ba6:	d10c      	bne.n	8002bc2 <HAL_RCC_OscConfig+0x356>
 8002ba8:	4b61      	ldr	r3, [pc, #388]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002baa:	6a1b      	ldr	r3, [r3, #32]
 8002bac:	4a60      	ldr	r2, [pc, #384]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002bae:	f043 0304 	orr.w	r3, r3, #4
 8002bb2:	6213      	str	r3, [r2, #32]
 8002bb4:	4b5e      	ldr	r3, [pc, #376]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002bb6:	6a1b      	ldr	r3, [r3, #32]
 8002bb8:	4a5d      	ldr	r2, [pc, #372]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002bba:	f043 0301 	orr.w	r3, r3, #1
 8002bbe:	6213      	str	r3, [r2, #32]
 8002bc0:	e00b      	b.n	8002bda <HAL_RCC_OscConfig+0x36e>
 8002bc2:	4b5b      	ldr	r3, [pc, #364]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002bc4:	6a1b      	ldr	r3, [r3, #32]
 8002bc6:	4a5a      	ldr	r2, [pc, #360]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002bc8:	f023 0301 	bic.w	r3, r3, #1
 8002bcc:	6213      	str	r3, [r2, #32]
 8002bce:	4b58      	ldr	r3, [pc, #352]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002bd0:	6a1b      	ldr	r3, [r3, #32]
 8002bd2:	4a57      	ldr	r2, [pc, #348]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002bd4:	f023 0304 	bic.w	r3, r3, #4
 8002bd8:	6213      	str	r3, [r2, #32]
 8002bda:	687b      	ldr	r3, [r7, #4]
 8002bdc:	68db      	ldr	r3, [r3, #12]
 8002bde:	2b00      	cmp	r3, #0
 8002be0:	d015      	beq.n	8002c0e <HAL_RCC_OscConfig+0x3a2>
 8002be2:	f7ff fb65 	bl	80022b0 <HAL_GetTick>
 8002be6:	6138      	str	r0, [r7, #16]
 8002be8:	e00a      	b.n	8002c00 <HAL_RCC_OscConfig+0x394>
 8002bea:	f7ff fb61 	bl	80022b0 <HAL_GetTick>
 8002bee:	4602      	mov	r2, r0
 8002bf0:	693b      	ldr	r3, [r7, #16]
 8002bf2:	1ad3      	subs	r3, r2, r3
 8002bf4:	f241 3288 	movw	r2, #5000	; 0x1388
 8002bf8:	4293      	cmp	r3, r2
 8002bfa:	d901      	bls.n	8002c00 <HAL_RCC_OscConfig+0x394>
 8002bfc:	2303      	movs	r3, #3
 8002bfe:	e0b1      	b.n	8002d64 <HAL_RCC_OscConfig+0x4f8>
 8002c00:	4b4b      	ldr	r3, [pc, #300]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002c02:	6a1b      	ldr	r3, [r3, #32]
 8002c04:	f003 0302 	and.w	r3, r3, #2
 8002c08:	2b00      	cmp	r3, #0
 8002c0a:	d0ee      	beq.n	8002bea <HAL_RCC_OscConfig+0x37e>
 8002c0c:	e014      	b.n	8002c38 <HAL_RCC_OscConfig+0x3cc>
 8002c0e:	f7ff fb4f 	bl	80022b0 <HAL_GetTick>
 8002c12:	6138      	str	r0, [r7, #16]
 8002c14:	e00a      	b.n	8002c2c <HAL_RCC_OscConfig+0x3c0>
 8002c16:	f7ff fb4b 	bl	80022b0 <HAL_GetTick>
 8002c1a:	4602      	mov	r2, r0
 8002c1c:	693b      	ldr	r3, [r7, #16]
 8002c1e:	1ad3      	subs	r3, r2, r3
 8002c20:	f241 3288 	movw	r2, #5000	; 0x1388
 8002c24:	4293      	cmp	r3, r2
 8002c26:	d901      	bls.n	8002c2c <HAL_RCC_OscConfig+0x3c0>
 8002c28:	2303      	movs	r3, #3
 8002c2a:	e09b      	b.n	8002d64 <HAL_RCC_OscConfig+0x4f8>
 8002c2c:	4b40      	ldr	r3, [pc, #256]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002c2e:	6a1b      	ldr	r3, [r3, #32]
 8002c30:	f003 0302 	and.w	r3, r3, #2
 8002c34:	2b00      	cmp	r3, #0
 8002c36:	d1ee      	bne.n	8002c16 <HAL_RCC_OscConfig+0x3aa>
 8002c38:	7dfb      	ldrb	r3, [r7, #23]
 8002c3a:	2b01      	cmp	r3, #1
 8002c3c:	d105      	bne.n	8002c4a <HAL_RCC_OscConfig+0x3de>
 8002c3e:	4b3c      	ldr	r3, [pc, #240]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002c40:	69db      	ldr	r3, [r3, #28]
 8002c42:	4a3b      	ldr	r2, [pc, #236]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002c44:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002c48:	61d3      	str	r3, [r2, #28]
 8002c4a:	687b      	ldr	r3, [r7, #4]
 8002c4c:	69db      	ldr	r3, [r3, #28]
 8002c4e:	2b00      	cmp	r3, #0
 8002c50:	f000 8087 	beq.w	8002d62 <HAL_RCC_OscConfig+0x4f6>
 8002c54:	4b36      	ldr	r3, [pc, #216]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002c56:	685b      	ldr	r3, [r3, #4]
 8002c58:	f003 030c 	and.w	r3, r3, #12
 8002c5c:	2b08      	cmp	r3, #8
 8002c5e:	d061      	beq.n	8002d24 <HAL_RCC_OscConfig+0x4b8>
 8002c60:	687b      	ldr	r3, [r7, #4]
 8002c62:	69db      	ldr	r3, [r3, #28]
 8002c64:	2b02      	cmp	r3, #2
 8002c66:	d146      	bne.n	8002cf6 <HAL_RCC_OscConfig+0x48a>
 8002c68:	4b33      	ldr	r3, [pc, #204]	; (8002d38 <HAL_RCC_OscConfig+0x4cc>)
 8002c6a:	2200      	movs	r2, #0
 8002c6c:	601a      	str	r2, [r3, #0]
 8002c6e:	f7ff fb1f 	bl	80022b0 <HAL_GetTick>
 8002c72:	6138      	str	r0, [r7, #16]
 8002c74:	e008      	b.n	8002c88 <HAL_RCC_OscConfig+0x41c>
 8002c76:	f7ff fb1b 	bl	80022b0 <HAL_GetTick>
 8002c7a:	4602      	mov	r2, r0
 8002c7c:	693b      	ldr	r3, [r7, #16]
 8002c7e:	1ad3      	subs	r3, r2, r3
 8002c80:	2b02      	cmp	r3, #2
 8002c82:	d901      	bls.n	8002c88 <HAL_RCC_OscConfig+0x41c>
 8002c84:	2303      	movs	r3, #3
 8002c86:	e06d      	b.n	8002d64 <HAL_RCC_OscConfig+0x4f8>
 8002c88:	4b29      	ldr	r3, [pc, #164]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002c8a:	681b      	ldr	r3, [r3, #0]
 8002c8c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002c90:	2b00      	cmp	r3, #0
 8002c92:	d1f0      	bne.n	8002c76 <HAL_RCC_OscConfig+0x40a>
 8002c94:	687b      	ldr	r3, [r7, #4]
 8002c96:	6a1b      	ldr	r3, [r3, #32]
 8002c98:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002c9c:	d108      	bne.n	8002cb0 <HAL_RCC_OscConfig+0x444>
 8002c9e:	4b24      	ldr	r3, [pc, #144]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002ca0:	685b      	ldr	r3, [r3, #4]
 8002ca2:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8002ca6:	687b      	ldr	r3, [r7, #4]
 8002ca8:	689b      	ldr	r3, [r3, #8]
 8002caa:	4921      	ldr	r1, [pc, #132]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002cac:	4313      	orrs	r3, r2
 8002cae:	604b      	str	r3, [r1, #4]
 8002cb0:	4b1f      	ldr	r3, [pc, #124]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002cb2:	685b      	ldr	r3, [r3, #4]
 8002cb4:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	6a19      	ldr	r1, [r3, #32]
 8002cbc:	687b      	ldr	r3, [r7, #4]
 8002cbe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002cc0:	430b      	orrs	r3, r1
 8002cc2:	491b      	ldr	r1, [pc, #108]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002cc4:	4313      	orrs	r3, r2
 8002cc6:	604b      	str	r3, [r1, #4]
 8002cc8:	4b1b      	ldr	r3, [pc, #108]	; (8002d38 <HAL_RCC_OscConfig+0x4cc>)
 8002cca:	2201      	movs	r2, #1
 8002ccc:	601a      	str	r2, [r3, #0]
 8002cce:	f7ff faef 	bl	80022b0 <HAL_GetTick>
 8002cd2:	6138      	str	r0, [r7, #16]
 8002cd4:	e008      	b.n	8002ce8 <HAL_RCC_OscConfig+0x47c>
 8002cd6:	f7ff faeb 	bl	80022b0 <HAL_GetTick>
 8002cda:	4602      	mov	r2, r0
 8002cdc:	693b      	ldr	r3, [r7, #16]
 8002cde:	1ad3      	subs	r3, r2, r3
 8002ce0:	2b02      	cmp	r3, #2
 8002ce2:	d901      	bls.n	8002ce8 <HAL_RCC_OscConfig+0x47c>
 8002ce4:	2303      	movs	r3, #3
 8002ce6:	e03d      	b.n	8002d64 <HAL_RCC_OscConfig+0x4f8>
 8002ce8:	4b11      	ldr	r3, [pc, #68]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002cea:	681b      	ldr	r3, [r3, #0]
 8002cec:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002cf0:	2b00      	cmp	r3, #0
 8002cf2:	d0f0      	beq.n	8002cd6 <HAL_RCC_OscConfig+0x46a>
 8002cf4:	e035      	b.n	8002d62 <HAL_RCC_OscConfig+0x4f6>
 8002cf6:	4b10      	ldr	r3, [pc, #64]	; (8002d38 <HAL_RCC_OscConfig+0x4cc>)
 8002cf8:	2200      	movs	r2, #0
 8002cfa:	601a      	str	r2, [r3, #0]
 8002cfc:	f7ff fad8 	bl	80022b0 <HAL_GetTick>
 8002d00:	6138      	str	r0, [r7, #16]
 8002d02:	e008      	b.n	8002d16 <HAL_RCC_OscConfig+0x4aa>
 8002d04:	f7ff fad4 	bl	80022b0 <HAL_GetTick>
 8002d08:	4602      	mov	r2, r0
 8002d0a:	693b      	ldr	r3, [r7, #16]
 8002d0c:	1ad3      	subs	r3, r2, r3
 8002d0e:	2b02      	cmp	r3, #2
 8002d10:	d901      	bls.n	8002d16 <HAL_RCC_OscConfig+0x4aa>
 8002d12:	2303      	movs	r3, #3
 8002d14:	e026      	b.n	8002d64 <HAL_RCC_OscConfig+0x4f8>
 8002d16:	4b06      	ldr	r3, [pc, #24]	; (8002d30 <HAL_RCC_OscConfig+0x4c4>)
 8002d18:	681b      	ldr	r3, [r3, #0]
 8002d1a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002d1e:	2b00      	cmp	r3, #0
 8002d20:	d1f0      	bne.n	8002d04 <HAL_RCC_OscConfig+0x498>
 8002d22:	e01e      	b.n	8002d62 <HAL_RCC_OscConfig+0x4f6>
 8002d24:	687b      	ldr	r3, [r7, #4]
 8002d26:	69db      	ldr	r3, [r3, #28]
 8002d28:	2b01      	cmp	r3, #1
 8002d2a:	d107      	bne.n	8002d3c <HAL_RCC_OscConfig+0x4d0>
 8002d2c:	2301      	movs	r3, #1
 8002d2e:	e019      	b.n	8002d64 <HAL_RCC_OscConfig+0x4f8>
 8002d30:	40021000 	.word	0x40021000
 8002d34:	40007000 	.word	0x40007000
 8002d38:	42420060 	.word	0x42420060
 8002d3c:	4b0b      	ldr	r3, [pc, #44]	; (8002d6c <HAL_RCC_OscConfig+0x500>)
 8002d3e:	685b      	ldr	r3, [r3, #4]
 8002d40:	60fb      	str	r3, [r7, #12]
 8002d42:	68fb      	ldr	r3, [r7, #12]
 8002d44:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8002d48:	687b      	ldr	r3, [r7, #4]
 8002d4a:	6a1b      	ldr	r3, [r3, #32]
 8002d4c:	429a      	cmp	r2, r3
 8002d4e:	d106      	bne.n	8002d5e <HAL_RCC_OscConfig+0x4f2>
 8002d50:	68fb      	ldr	r3, [r7, #12]
 8002d52:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d5a:	429a      	cmp	r2, r3
 8002d5c:	d001      	beq.n	8002d62 <HAL_RCC_OscConfig+0x4f6>
 8002d5e:	2301      	movs	r3, #1
 8002d60:	e000      	b.n	8002d64 <HAL_RCC_OscConfig+0x4f8>
 8002d62:	2300      	movs	r3, #0
 8002d64:	4618      	mov	r0, r3
 8002d66:	3718      	adds	r7, #24
 8002d68:	46bd      	mov	sp, r7
 8002d6a:	bd80      	pop	{r7, pc}
 8002d6c:	40021000 	.word	0x40021000

08002d70 <HAL_RCC_ClockConfig>:
 8002d70:	b580      	push	{r7, lr}
 8002d72:	b084      	sub	sp, #16
 8002d74:	af00      	add	r7, sp, #0
 8002d76:	6078      	str	r0, [r7, #4]
 8002d78:	6039      	str	r1, [r7, #0]
 8002d7a:	687b      	ldr	r3, [r7, #4]
 8002d7c:	2b00      	cmp	r3, #0
 8002d7e:	d101      	bne.n	8002d84 <HAL_RCC_ClockConfig+0x14>
 8002d80:	2301      	movs	r3, #1
 8002d82:	e0d0      	b.n	8002f26 <HAL_RCC_ClockConfig+0x1b6>
 8002d84:	4b6a      	ldr	r3, [pc, #424]	; (8002f30 <HAL_RCC_ClockConfig+0x1c0>)
 8002d86:	681b      	ldr	r3, [r3, #0]
 8002d88:	f003 0307 	and.w	r3, r3, #7
 8002d8c:	683a      	ldr	r2, [r7, #0]
 8002d8e:	429a      	cmp	r2, r3
 8002d90:	d910      	bls.n	8002db4 <HAL_RCC_ClockConfig+0x44>
 8002d92:	4b67      	ldr	r3, [pc, #412]	; (8002f30 <HAL_RCC_ClockConfig+0x1c0>)
 8002d94:	681b      	ldr	r3, [r3, #0]
 8002d96:	f023 0207 	bic.w	r2, r3, #7
 8002d9a:	4965      	ldr	r1, [pc, #404]	; (8002f30 <HAL_RCC_ClockConfig+0x1c0>)
 8002d9c:	683b      	ldr	r3, [r7, #0]
 8002d9e:	4313      	orrs	r3, r2
 8002da0:	600b      	str	r3, [r1, #0]
 8002da2:	4b63      	ldr	r3, [pc, #396]	; (8002f30 <HAL_RCC_ClockConfig+0x1c0>)
 8002da4:	681b      	ldr	r3, [r3, #0]
 8002da6:	f003 0307 	and.w	r3, r3, #7
 8002daa:	683a      	ldr	r2, [r7, #0]
 8002dac:	429a      	cmp	r2, r3
 8002dae:	d001      	beq.n	8002db4 <HAL_RCC_ClockConfig+0x44>
 8002db0:	2301      	movs	r3, #1
 8002db2:	e0b8      	b.n	8002f26 <HAL_RCC_ClockConfig+0x1b6>
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	681b      	ldr	r3, [r3, #0]
 8002db8:	f003 0302 	and.w	r3, r3, #2
 8002dbc:	2b00      	cmp	r3, #0
 8002dbe:	d020      	beq.n	8002e02 <HAL_RCC_ClockConfig+0x92>
 8002dc0:	687b      	ldr	r3, [r7, #4]
 8002dc2:	681b      	ldr	r3, [r3, #0]
 8002dc4:	f003 0304 	and.w	r3, r3, #4
 8002dc8:	2b00      	cmp	r3, #0
 8002dca:	d005      	beq.n	8002dd8 <HAL_RCC_ClockConfig+0x68>
 8002dcc:	4b59      	ldr	r3, [pc, #356]	; (8002f34 <HAL_RCC_ClockConfig+0x1c4>)
 8002dce:	685b      	ldr	r3, [r3, #4]
 8002dd0:	4a58      	ldr	r2, [pc, #352]	; (8002f34 <HAL_RCC_ClockConfig+0x1c4>)
 8002dd2:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8002dd6:	6053      	str	r3, [r2, #4]
 8002dd8:	687b      	ldr	r3, [r7, #4]
 8002dda:	681b      	ldr	r3, [r3, #0]
 8002ddc:	f003 0308 	and.w	r3, r3, #8
 8002de0:	2b00      	cmp	r3, #0
 8002de2:	d005      	beq.n	8002df0 <HAL_RCC_ClockConfig+0x80>
 8002de4:	4b53      	ldr	r3, [pc, #332]	; (8002f34 <HAL_RCC_ClockConfig+0x1c4>)
 8002de6:	685b      	ldr	r3, [r3, #4]
 8002de8:	4a52      	ldr	r2, [pc, #328]	; (8002f34 <HAL_RCC_ClockConfig+0x1c4>)
 8002dea:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8002dee:	6053      	str	r3, [r2, #4]
 8002df0:	4b50      	ldr	r3, [pc, #320]	; (8002f34 <HAL_RCC_ClockConfig+0x1c4>)
 8002df2:	685b      	ldr	r3, [r3, #4]
 8002df4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002df8:	687b      	ldr	r3, [r7, #4]
 8002dfa:	689b      	ldr	r3, [r3, #8]
 8002dfc:	494d      	ldr	r1, [pc, #308]	; (8002f34 <HAL_RCC_ClockConfig+0x1c4>)
 8002dfe:	4313      	orrs	r3, r2
 8002e00:	604b      	str	r3, [r1, #4]
 8002e02:	687b      	ldr	r3, [r7, #4]
 8002e04:	681b      	ldr	r3, [r3, #0]
 8002e06:	f003 0301 	and.w	r3, r3, #1
 8002e0a:	2b00      	cmp	r3, #0
 8002e0c:	d040      	beq.n	8002e90 <HAL_RCC_ClockConfig+0x120>
 8002e0e:	687b      	ldr	r3, [r7, #4]
 8002e10:	685b      	ldr	r3, [r3, #4]
 8002e12:	2b01      	cmp	r3, #1
 8002e14:	d107      	bne.n	8002e26 <HAL_RCC_ClockConfig+0xb6>
 8002e16:	4b47      	ldr	r3, [pc, #284]	; (8002f34 <HAL_RCC_ClockConfig+0x1c4>)
 8002e18:	681b      	ldr	r3, [r3, #0]
 8002e1a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002e1e:	2b00      	cmp	r3, #0
 8002e20:	d115      	bne.n	8002e4e <HAL_RCC_ClockConfig+0xde>
 8002e22:	2301      	movs	r3, #1
 8002e24:	e07f      	b.n	8002f26 <HAL_RCC_ClockConfig+0x1b6>
 8002e26:	687b      	ldr	r3, [r7, #4]
 8002e28:	685b      	ldr	r3, [r3, #4]
 8002e2a:	2b02      	cmp	r3, #2
 8002e2c:	d107      	bne.n	8002e3e <HAL_RCC_ClockConfig+0xce>
 8002e2e:	4b41      	ldr	r3, [pc, #260]	; (8002f34 <HAL_RCC_ClockConfig+0x1c4>)
 8002e30:	681b      	ldr	r3, [r3, #0]
 8002e32:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002e36:	2b00      	cmp	r3, #0
 8002e38:	d109      	bne.n	8002e4e <HAL_RCC_ClockConfig+0xde>
 8002e3a:	2301      	movs	r3, #1
 8002e3c:	e073      	b.n	8002f26 <HAL_RCC_ClockConfig+0x1b6>
 8002e3e:	4b3d      	ldr	r3, [pc, #244]	; (8002f34 <HAL_RCC_ClockConfig+0x1c4>)
 8002e40:	681b      	ldr	r3, [r3, #0]
 8002e42:	f003 0302 	and.w	r3, r3, #2
 8002e46:	2b00      	cmp	r3, #0
 8002e48:	d101      	bne.n	8002e4e <HAL_RCC_ClockConfig+0xde>
 8002e4a:	2301      	movs	r3, #1
 8002e4c:	e06b      	b.n	8002f26 <HAL_RCC_ClockConfig+0x1b6>
 8002e4e:	4b39      	ldr	r3, [pc, #228]	; (8002f34 <HAL_RCC_ClockConfig+0x1c4>)
 8002e50:	685b      	ldr	r3, [r3, #4]
 8002e52:	f023 0203 	bic.w	r2, r3, #3
 8002e56:	687b      	ldr	r3, [r7, #4]
 8002e58:	685b      	ldr	r3, [r3, #4]
 8002e5a:	4936      	ldr	r1, [pc, #216]	; (8002f34 <HAL_RCC_ClockConfig+0x1c4>)
 8002e5c:	4313      	orrs	r3, r2
 8002e5e:	604b      	str	r3, [r1, #4]
 8002e60:	f7ff fa26 	bl	80022b0 <HAL_GetTick>
 8002e64:	60f8      	str	r0, [r7, #12]
 8002e66:	e00a      	b.n	8002e7e <HAL_RCC_ClockConfig+0x10e>
 8002e68:	f7ff fa22 	bl	80022b0 <HAL_GetTick>
 8002e6c:	4602      	mov	r2, r0
 8002e6e:	68fb      	ldr	r3, [r7, #12]
 8002e70:	1ad3      	subs	r3, r2, r3
 8002e72:	f241 3288 	movw	r2, #5000	; 0x1388
 8002e76:	4293      	cmp	r3, r2
 8002e78:	d901      	bls.n	8002e7e <HAL_RCC_ClockConfig+0x10e>
 8002e7a:	2303      	movs	r3, #3
 8002e7c:	e053      	b.n	8002f26 <HAL_RCC_ClockConfig+0x1b6>
 8002e7e:	4b2d      	ldr	r3, [pc, #180]	; (8002f34 <HAL_RCC_ClockConfig+0x1c4>)
 8002e80:	685b      	ldr	r3, [r3, #4]
 8002e82:	f003 020c 	and.w	r2, r3, #12
 8002e86:	687b      	ldr	r3, [r7, #4]
 8002e88:	685b      	ldr	r3, [r3, #4]
 8002e8a:	009b      	lsls	r3, r3, #2
 8002e8c:	429a      	cmp	r2, r3
 8002e8e:	d1eb      	bne.n	8002e68 <HAL_RCC_ClockConfig+0xf8>
 8002e90:	4b27      	ldr	r3, [pc, #156]	; (8002f30 <HAL_RCC_ClockConfig+0x1c0>)
 8002e92:	681b      	ldr	r3, [r3, #0]
 8002e94:	f003 0307 	and.w	r3, r3, #7
 8002e98:	683a      	ldr	r2, [r7, #0]
 8002e9a:	429a      	cmp	r2, r3
 8002e9c:	d210      	bcs.n	8002ec0 <HAL_RCC_ClockConfig+0x150>
 8002e9e:	4b24      	ldr	r3, [pc, #144]	; (8002f30 <HAL_RCC_ClockConfig+0x1c0>)
 8002ea0:	681b      	ldr	r3, [r3, #0]
 8002ea2:	f023 0207 	bic.w	r2, r3, #7
 8002ea6:	4922      	ldr	r1, [pc, #136]	; (8002f30 <HAL_RCC_ClockConfig+0x1c0>)
 8002ea8:	683b      	ldr	r3, [r7, #0]
 8002eaa:	4313      	orrs	r3, r2
 8002eac:	600b      	str	r3, [r1, #0]
 8002eae:	4b20      	ldr	r3, [pc, #128]	; (8002f30 <HAL_RCC_ClockConfig+0x1c0>)
 8002eb0:	681b      	ldr	r3, [r3, #0]
 8002eb2:	f003 0307 	and.w	r3, r3, #7
 8002eb6:	683a      	ldr	r2, [r7, #0]
 8002eb8:	429a      	cmp	r2, r3
 8002eba:	d001      	beq.n	8002ec0 <HAL_RCC_ClockConfig+0x150>
 8002ebc:	2301      	movs	r3, #1
 8002ebe:	e032      	b.n	8002f26 <HAL_RCC_ClockConfig+0x1b6>
 8002ec0:	687b      	ldr	r3, [r7, #4]
 8002ec2:	681b      	ldr	r3, [r3, #0]
 8002ec4:	f003 0304 	and.w	r3, r3, #4
 8002ec8:	2b00      	cmp	r3, #0
 8002eca:	d008      	beq.n	8002ede <HAL_RCC_ClockConfig+0x16e>
 8002ecc:	4b19      	ldr	r3, [pc, #100]	; (8002f34 <HAL_RCC_ClockConfig+0x1c4>)
 8002ece:	685b      	ldr	r3, [r3, #4]
 8002ed0:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8002ed4:	687b      	ldr	r3, [r7, #4]
 8002ed6:	68db      	ldr	r3, [r3, #12]
 8002ed8:	4916      	ldr	r1, [pc, #88]	; (8002f34 <HAL_RCC_ClockConfig+0x1c4>)
 8002eda:	4313      	orrs	r3, r2
 8002edc:	604b      	str	r3, [r1, #4]
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	681b      	ldr	r3, [r3, #0]
 8002ee2:	f003 0308 	and.w	r3, r3, #8
 8002ee6:	2b00      	cmp	r3, #0
 8002ee8:	d009      	beq.n	8002efe <HAL_RCC_ClockConfig+0x18e>
 8002eea:	4b12      	ldr	r3, [pc, #72]	; (8002f34 <HAL_RCC_ClockConfig+0x1c4>)
 8002eec:	685b      	ldr	r3, [r3, #4]
 8002eee:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8002ef2:	687b      	ldr	r3, [r7, #4]
 8002ef4:	691b      	ldr	r3, [r3, #16]
 8002ef6:	00db      	lsls	r3, r3, #3
 8002ef8:	490e      	ldr	r1, [pc, #56]	; (8002f34 <HAL_RCC_ClockConfig+0x1c4>)
 8002efa:	4313      	orrs	r3, r2
 8002efc:	604b      	str	r3, [r1, #4]
 8002efe:	f000 f82d 	bl	8002f5c <HAL_RCC_GetSysClockFreq>
 8002f02:	4602      	mov	r2, r0
 8002f04:	4b0b      	ldr	r3, [pc, #44]	; (8002f34 <HAL_RCC_ClockConfig+0x1c4>)
 8002f06:	685b      	ldr	r3, [r3, #4]
 8002f08:	091b      	lsrs	r3, r3, #4
 8002f0a:	f003 030f 	and.w	r3, r3, #15
 8002f0e:	490a      	ldr	r1, [pc, #40]	; (8002f38 <HAL_RCC_ClockConfig+0x1c8>)
 8002f10:	5ccb      	ldrb	r3, [r1, r3]
 8002f12:	fa22 f303 	lsr.w	r3, r2, r3
 8002f16:	4a09      	ldr	r2, [pc, #36]	; (8002f3c <HAL_RCC_ClockConfig+0x1cc>)
 8002f18:	6013      	str	r3, [r2, #0]
 8002f1a:	4b09      	ldr	r3, [pc, #36]	; (8002f40 <HAL_RCC_ClockConfig+0x1d0>)
 8002f1c:	681b      	ldr	r3, [r3, #0]
 8002f1e:	4618      	mov	r0, r3
 8002f20:	f7ff f984 	bl	800222c <HAL_InitTick>
 8002f24:	2300      	movs	r3, #0
 8002f26:	4618      	mov	r0, r3
 8002f28:	3710      	adds	r7, #16
 8002f2a:	46bd      	mov	sp, r7
 8002f2c:	bd80      	pop	{r7, pc}
 8002f2e:	bf00      	nop
 8002f30:	40022000 	.word	0x40022000
 8002f34:	40021000 	.word	0x40021000
 8002f38:	08005344 	.word	0x08005344
 8002f3c:	20000018 	.word	0x20000018
 8002f40:	2000004c 	.word	0x2000004c

08002f44 <HAL_RCC_EnableCSS>:
 8002f44:	b480      	push	{r7}
 8002f46:	af00      	add	r7, sp, #0
 8002f48:	4b03      	ldr	r3, [pc, #12]	; (8002f58 <HAL_RCC_EnableCSS+0x14>)
 8002f4a:	2201      	movs	r2, #1
 8002f4c:	601a      	str	r2, [r3, #0]
 8002f4e:	bf00      	nop
 8002f50:	46bd      	mov	sp, r7
 8002f52:	bc80      	pop	{r7}
 8002f54:	4770      	bx	lr
 8002f56:	bf00      	nop
 8002f58:	4242004c 	.word	0x4242004c

08002f5c <HAL_RCC_GetSysClockFreq>:
 8002f5c:	b480      	push	{r7}
 8002f5e:	b087      	sub	sp, #28
 8002f60:	af00      	add	r7, sp, #0
 8002f62:	2300      	movs	r3, #0
 8002f64:	60fb      	str	r3, [r7, #12]
 8002f66:	2300      	movs	r3, #0
 8002f68:	60bb      	str	r3, [r7, #8]
 8002f6a:	2300      	movs	r3, #0
 8002f6c:	617b      	str	r3, [r7, #20]
 8002f6e:	2300      	movs	r3, #0
 8002f70:	607b      	str	r3, [r7, #4]
 8002f72:	2300      	movs	r3, #0
 8002f74:	613b      	str	r3, [r7, #16]
 8002f76:	4b1e      	ldr	r3, [pc, #120]	; (8002ff0 <HAL_RCC_GetSysClockFreq+0x94>)
 8002f78:	685b      	ldr	r3, [r3, #4]
 8002f7a:	60fb      	str	r3, [r7, #12]
 8002f7c:	68fb      	ldr	r3, [r7, #12]
 8002f7e:	f003 030c 	and.w	r3, r3, #12
 8002f82:	2b04      	cmp	r3, #4
 8002f84:	d002      	beq.n	8002f8c <HAL_RCC_GetSysClockFreq+0x30>
 8002f86:	2b08      	cmp	r3, #8
 8002f88:	d003      	beq.n	8002f92 <HAL_RCC_GetSysClockFreq+0x36>
 8002f8a:	e027      	b.n	8002fdc <HAL_RCC_GetSysClockFreq+0x80>
 8002f8c:	4b19      	ldr	r3, [pc, #100]	; (8002ff4 <HAL_RCC_GetSysClockFreq+0x98>)
 8002f8e:	613b      	str	r3, [r7, #16]
 8002f90:	e027      	b.n	8002fe2 <HAL_RCC_GetSysClockFreq+0x86>
 8002f92:	68fb      	ldr	r3, [r7, #12]
 8002f94:	0c9b      	lsrs	r3, r3, #18
 8002f96:	f003 030f 	and.w	r3, r3, #15
 8002f9a:	4a17      	ldr	r2, [pc, #92]	; (8002ff8 <HAL_RCC_GetSysClockFreq+0x9c>)
 8002f9c:	5cd3      	ldrb	r3, [r2, r3]
 8002f9e:	607b      	str	r3, [r7, #4]
 8002fa0:	68fb      	ldr	r3, [r7, #12]
 8002fa2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002fa6:	2b00      	cmp	r3, #0
 8002fa8:	d010      	beq.n	8002fcc <HAL_RCC_GetSysClockFreq+0x70>
 8002faa:	4b11      	ldr	r3, [pc, #68]	; (8002ff0 <HAL_RCC_GetSysClockFreq+0x94>)
 8002fac:	685b      	ldr	r3, [r3, #4]
 8002fae:	0c5b      	lsrs	r3, r3, #17
 8002fb0:	f003 0301 	and.w	r3, r3, #1
 8002fb4:	4a11      	ldr	r2, [pc, #68]	; (8002ffc <HAL_RCC_GetSysClockFreq+0xa0>)
 8002fb6:	5cd3      	ldrb	r3, [r2, r3]
 8002fb8:	60bb      	str	r3, [r7, #8]
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	4a0d      	ldr	r2, [pc, #52]	; (8002ff4 <HAL_RCC_GetSysClockFreq+0x98>)
 8002fbe:	fb03 f202 	mul.w	r2, r3, r2
 8002fc2:	68bb      	ldr	r3, [r7, #8]
 8002fc4:	fbb2 f3f3 	udiv	r3, r2, r3
 8002fc8:	617b      	str	r3, [r7, #20]
 8002fca:	e004      	b.n	8002fd6 <HAL_RCC_GetSysClockFreq+0x7a>
 8002fcc:	687b      	ldr	r3, [r7, #4]
 8002fce:	4a0c      	ldr	r2, [pc, #48]	; (8003000 <HAL_RCC_GetSysClockFreq+0xa4>)
 8002fd0:	fb02 f303 	mul.w	r3, r2, r3
 8002fd4:	617b      	str	r3, [r7, #20]
 8002fd6:	697b      	ldr	r3, [r7, #20]
 8002fd8:	613b      	str	r3, [r7, #16]
 8002fda:	e002      	b.n	8002fe2 <HAL_RCC_GetSysClockFreq+0x86>
 8002fdc:	4b05      	ldr	r3, [pc, #20]	; (8002ff4 <HAL_RCC_GetSysClockFreq+0x98>)
 8002fde:	613b      	str	r3, [r7, #16]
 8002fe0:	bf00      	nop
 8002fe2:	693b      	ldr	r3, [r7, #16]
 8002fe4:	4618      	mov	r0, r3
 8002fe6:	371c      	adds	r7, #28
 8002fe8:	46bd      	mov	sp, r7
 8002fea:	bc80      	pop	{r7}
 8002fec:	4770      	bx	lr
 8002fee:	bf00      	nop
 8002ff0:	40021000 	.word	0x40021000
 8002ff4:	007a1200 	.word	0x007a1200
 8002ff8:	08005354 	.word	0x08005354
 8002ffc:	08005364 	.word	0x08005364
 8003000:	003d0900 	.word	0x003d0900

08003004 <HAL_RCC_NMI_IRQHandler>:
 8003004:	b580      	push	{r7, lr}
 8003006:	af00      	add	r7, sp, #0
 8003008:	4b06      	ldr	r3, [pc, #24]	; (8003024 <HAL_RCC_NMI_IRQHandler+0x20>)
 800300a:	689b      	ldr	r3, [r3, #8]
 800300c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003010:	2b80      	cmp	r3, #128	; 0x80
 8003012:	d104      	bne.n	800301e <HAL_RCC_NMI_IRQHandler+0x1a>
 8003014:	f000 f828 	bl	8003068 <HAL_RCC_CSSCallback>
 8003018:	4b03      	ldr	r3, [pc, #12]	; (8003028 <HAL_RCC_NMI_IRQHandler+0x24>)
 800301a:	2280      	movs	r2, #128	; 0x80
 800301c:	701a      	strb	r2, [r3, #0]
 800301e:	bf00      	nop
 8003020:	bd80      	pop	{r7, pc}
 8003022:	bf00      	nop
 8003024:	40021000 	.word	0x40021000
 8003028:	4002100a 	.word	0x4002100a

0800302c <RCC_Delay>:
 800302c:	b480      	push	{r7}
 800302e:	b085      	sub	sp, #20
 8003030:	af00      	add	r7, sp, #0
 8003032:	6078      	str	r0, [r7, #4]
 8003034:	4b0a      	ldr	r3, [pc, #40]	; (8003060 <RCC_Delay+0x34>)
 8003036:	681b      	ldr	r3, [r3, #0]
 8003038:	4a0a      	ldr	r2, [pc, #40]	; (8003064 <RCC_Delay+0x38>)
 800303a:	fba2 2303 	umull	r2, r3, r2, r3
 800303e:	0a5b      	lsrs	r3, r3, #9
 8003040:	687a      	ldr	r2, [r7, #4]
 8003042:	fb02 f303 	mul.w	r3, r2, r3
 8003046:	60fb      	str	r3, [r7, #12]
 8003048:	bf00      	nop
 800304a:	68fb      	ldr	r3, [r7, #12]
 800304c:	1e5a      	subs	r2, r3, #1
 800304e:	60fa      	str	r2, [r7, #12]
 8003050:	2b00      	cmp	r3, #0
 8003052:	d1f9      	bne.n	8003048 <RCC_Delay+0x1c>
 8003054:	bf00      	nop
 8003056:	bf00      	nop
 8003058:	3714      	adds	r7, #20
 800305a:	46bd      	mov	sp, r7
 800305c:	bc80      	pop	{r7}
 800305e:	4770      	bx	lr
 8003060:	20000018 	.word	0x20000018
 8003064:	10624dd3 	.word	0x10624dd3

08003068 <HAL_RCC_CSSCallback>:
 8003068:	b480      	push	{r7}
 800306a:	af00      	add	r7, sp, #0
 800306c:	bf00      	nop
 800306e:	46bd      	mov	sp, r7
 8003070:	bc80      	pop	{r7}
 8003072:	4770      	bx	lr

08003074 <HAL_SPI_Init>:
 8003074:	b580      	push	{r7, lr}
 8003076:	b082      	sub	sp, #8
 8003078:	af00      	add	r7, sp, #0
 800307a:	6078      	str	r0, [r7, #4]
 800307c:	687b      	ldr	r3, [r7, #4]
 800307e:	2b00      	cmp	r3, #0
 8003080:	d101      	bne.n	8003086 <HAL_SPI_Init+0x12>
 8003082:	2301      	movs	r3, #1
 8003084:	e076      	b.n	8003174 <HAL_SPI_Init+0x100>
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800308a:	2b00      	cmp	r3, #0
 800308c:	d108      	bne.n	80030a0 <HAL_SPI_Init+0x2c>
 800308e:	687b      	ldr	r3, [r7, #4]
 8003090:	685b      	ldr	r3, [r3, #4]
 8003092:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8003096:	d009      	beq.n	80030ac <HAL_SPI_Init+0x38>
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	2200      	movs	r2, #0
 800309c:	61da      	str	r2, [r3, #28]
 800309e:	e005      	b.n	80030ac <HAL_SPI_Init+0x38>
 80030a0:	687b      	ldr	r3, [r7, #4]
 80030a2:	2200      	movs	r2, #0
 80030a4:	611a      	str	r2, [r3, #16]
 80030a6:	687b      	ldr	r3, [r7, #4]
 80030a8:	2200      	movs	r2, #0
 80030aa:	615a      	str	r2, [r3, #20]
 80030ac:	687b      	ldr	r3, [r7, #4]
 80030ae:	2200      	movs	r2, #0
 80030b0:	629a      	str	r2, [r3, #40]	; 0x28
 80030b2:	687b      	ldr	r3, [r7, #4]
 80030b4:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80030b8:	b2db      	uxtb	r3, r3
 80030ba:	2b00      	cmp	r3, #0
 80030bc:	d106      	bne.n	80030cc <HAL_SPI_Init+0x58>
 80030be:	687b      	ldr	r3, [r7, #4]
 80030c0:	2200      	movs	r2, #0
 80030c2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80030c6:	6878      	ldr	r0, [r7, #4]
 80030c8:	f7fd fa20 	bl	800050c <HAL_SPI_MspInit>
 80030cc:	687b      	ldr	r3, [r7, #4]
 80030ce:	2202      	movs	r2, #2
 80030d0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	681b      	ldr	r3, [r3, #0]
 80030d8:	681a      	ldr	r2, [r3, #0]
 80030da:	687b      	ldr	r3, [r7, #4]
 80030dc:	681b      	ldr	r3, [r3, #0]
 80030de:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80030e2:	601a      	str	r2, [r3, #0]
 80030e4:	687b      	ldr	r3, [r7, #4]
 80030e6:	685b      	ldr	r3, [r3, #4]
 80030e8:	f403 7282 	and.w	r2, r3, #260	; 0x104
 80030ec:	687b      	ldr	r3, [r7, #4]
 80030ee:	689b      	ldr	r3, [r3, #8]
 80030f0:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 80030f4:	431a      	orrs	r2, r3
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	68db      	ldr	r3, [r3, #12]
 80030fa:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80030fe:	431a      	orrs	r2, r3
 8003100:	687b      	ldr	r3, [r7, #4]
 8003102:	691b      	ldr	r3, [r3, #16]
 8003104:	f003 0302 	and.w	r3, r3, #2
 8003108:	431a      	orrs	r2, r3
 800310a:	687b      	ldr	r3, [r7, #4]
 800310c:	695b      	ldr	r3, [r3, #20]
 800310e:	f003 0301 	and.w	r3, r3, #1
 8003112:	431a      	orrs	r2, r3
 8003114:	687b      	ldr	r3, [r7, #4]
 8003116:	699b      	ldr	r3, [r3, #24]
 8003118:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800311c:	431a      	orrs	r2, r3
 800311e:	687b      	ldr	r3, [r7, #4]
 8003120:	69db      	ldr	r3, [r3, #28]
 8003122:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8003126:	431a      	orrs	r2, r3
 8003128:	687b      	ldr	r3, [r7, #4]
 800312a:	6a1b      	ldr	r3, [r3, #32]
 800312c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003130:	ea42 0103 	orr.w	r1, r2, r3
 8003134:	687b      	ldr	r3, [r7, #4]
 8003136:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003138:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 800313c:	687b      	ldr	r3, [r7, #4]
 800313e:	681b      	ldr	r3, [r3, #0]
 8003140:	430a      	orrs	r2, r1
 8003142:	601a      	str	r2, [r3, #0]
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	699b      	ldr	r3, [r3, #24]
 8003148:	0c1a      	lsrs	r2, r3, #16
 800314a:	687b      	ldr	r3, [r7, #4]
 800314c:	681b      	ldr	r3, [r3, #0]
 800314e:	f002 0204 	and.w	r2, r2, #4
 8003152:	605a      	str	r2, [r3, #4]
 8003154:	687b      	ldr	r3, [r7, #4]
 8003156:	681b      	ldr	r3, [r3, #0]
 8003158:	69da      	ldr	r2, [r3, #28]
 800315a:	687b      	ldr	r3, [r7, #4]
 800315c:	681b      	ldr	r3, [r3, #0]
 800315e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003162:	61da      	str	r2, [r3, #28]
 8003164:	687b      	ldr	r3, [r7, #4]
 8003166:	2200      	movs	r2, #0
 8003168:	655a      	str	r2, [r3, #84]	; 0x54
 800316a:	687b      	ldr	r3, [r7, #4]
 800316c:	2201      	movs	r2, #1
 800316e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003172:	2300      	movs	r3, #0
 8003174:	4618      	mov	r0, r3
 8003176:	3708      	adds	r7, #8
 8003178:	46bd      	mov	sp, r7
 800317a:	bd80      	pop	{r7, pc}

0800317c <HAL_SPI_Transmit>:
 800317c:	b580      	push	{r7, lr}
 800317e:	b088      	sub	sp, #32
 8003180:	af00      	add	r7, sp, #0
 8003182:	60f8      	str	r0, [r7, #12]
 8003184:	60b9      	str	r1, [r7, #8]
 8003186:	603b      	str	r3, [r7, #0]
 8003188:	4613      	mov	r3, r2
 800318a:	80fb      	strh	r3, [r7, #6]
 800318c:	2300      	movs	r3, #0
 800318e:	77fb      	strb	r3, [r7, #31]
 8003190:	68fb      	ldr	r3, [r7, #12]
 8003192:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8003196:	2b01      	cmp	r3, #1
 8003198:	d101      	bne.n	800319e <HAL_SPI_Transmit+0x22>
 800319a:	2302      	movs	r3, #2
 800319c:	e12d      	b.n	80033fa <HAL_SPI_Transmit+0x27e>
 800319e:	68fb      	ldr	r3, [r7, #12]
 80031a0:	2201      	movs	r2, #1
 80031a2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80031a6:	f7ff f883 	bl	80022b0 <HAL_GetTick>
 80031aa:	61b8      	str	r0, [r7, #24]
 80031ac:	88fb      	ldrh	r3, [r7, #6]
 80031ae:	82fb      	strh	r3, [r7, #22]
 80031b0:	68fb      	ldr	r3, [r7, #12]
 80031b2:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80031b6:	b2db      	uxtb	r3, r3
 80031b8:	2b01      	cmp	r3, #1
 80031ba:	d002      	beq.n	80031c2 <HAL_SPI_Transmit+0x46>
 80031bc:	2302      	movs	r3, #2
 80031be:	77fb      	strb	r3, [r7, #31]
 80031c0:	e116      	b.n	80033f0 <HAL_SPI_Transmit+0x274>
 80031c2:	68bb      	ldr	r3, [r7, #8]
 80031c4:	2b00      	cmp	r3, #0
 80031c6:	d002      	beq.n	80031ce <HAL_SPI_Transmit+0x52>
 80031c8:	88fb      	ldrh	r3, [r7, #6]
 80031ca:	2b00      	cmp	r3, #0
 80031cc:	d102      	bne.n	80031d4 <HAL_SPI_Transmit+0x58>
 80031ce:	2301      	movs	r3, #1
 80031d0:	77fb      	strb	r3, [r7, #31]
 80031d2:	e10d      	b.n	80033f0 <HAL_SPI_Transmit+0x274>
 80031d4:	68fb      	ldr	r3, [r7, #12]
 80031d6:	2203      	movs	r2, #3
 80031d8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80031dc:	68fb      	ldr	r3, [r7, #12]
 80031de:	2200      	movs	r2, #0
 80031e0:	655a      	str	r2, [r3, #84]	; 0x54
 80031e2:	68fb      	ldr	r3, [r7, #12]
 80031e4:	68ba      	ldr	r2, [r7, #8]
 80031e6:	631a      	str	r2, [r3, #48]	; 0x30
 80031e8:	68fb      	ldr	r3, [r7, #12]
 80031ea:	88fa      	ldrh	r2, [r7, #6]
 80031ec:	869a      	strh	r2, [r3, #52]	; 0x34
 80031ee:	68fb      	ldr	r3, [r7, #12]
 80031f0:	88fa      	ldrh	r2, [r7, #6]
 80031f2:	86da      	strh	r2, [r3, #54]	; 0x36
 80031f4:	68fb      	ldr	r3, [r7, #12]
 80031f6:	2200      	movs	r2, #0
 80031f8:	639a      	str	r2, [r3, #56]	; 0x38
 80031fa:	68fb      	ldr	r3, [r7, #12]
 80031fc:	2200      	movs	r2, #0
 80031fe:	879a      	strh	r2, [r3, #60]	; 0x3c
 8003200:	68fb      	ldr	r3, [r7, #12]
 8003202:	2200      	movs	r2, #0
 8003204:	87da      	strh	r2, [r3, #62]	; 0x3e
 8003206:	68fb      	ldr	r3, [r7, #12]
 8003208:	2200      	movs	r2, #0
 800320a:	645a      	str	r2, [r3, #68]	; 0x44
 800320c:	68fb      	ldr	r3, [r7, #12]
 800320e:	2200      	movs	r2, #0
 8003210:	641a      	str	r2, [r3, #64]	; 0x40
 8003212:	68fb      	ldr	r3, [r7, #12]
 8003214:	689b      	ldr	r3, [r3, #8]
 8003216:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800321a:	d10f      	bne.n	800323c <HAL_SPI_Transmit+0xc0>
 800321c:	68fb      	ldr	r3, [r7, #12]
 800321e:	681b      	ldr	r3, [r3, #0]
 8003220:	681a      	ldr	r2, [r3, #0]
 8003222:	68fb      	ldr	r3, [r7, #12]
 8003224:	681b      	ldr	r3, [r3, #0]
 8003226:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800322a:	601a      	str	r2, [r3, #0]
 800322c:	68fb      	ldr	r3, [r7, #12]
 800322e:	681b      	ldr	r3, [r3, #0]
 8003230:	681a      	ldr	r2, [r3, #0]
 8003232:	68fb      	ldr	r3, [r7, #12]
 8003234:	681b      	ldr	r3, [r3, #0]
 8003236:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800323a:	601a      	str	r2, [r3, #0]
 800323c:	68fb      	ldr	r3, [r7, #12]
 800323e:	681b      	ldr	r3, [r3, #0]
 8003240:	681b      	ldr	r3, [r3, #0]
 8003242:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003246:	2b40      	cmp	r3, #64	; 0x40
 8003248:	d007      	beq.n	800325a <HAL_SPI_Transmit+0xde>
 800324a:	68fb      	ldr	r3, [r7, #12]
 800324c:	681b      	ldr	r3, [r3, #0]
 800324e:	681a      	ldr	r2, [r3, #0]
 8003250:	68fb      	ldr	r3, [r7, #12]
 8003252:	681b      	ldr	r3, [r3, #0]
 8003254:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003258:	601a      	str	r2, [r3, #0]
 800325a:	68fb      	ldr	r3, [r7, #12]
 800325c:	68db      	ldr	r3, [r3, #12]
 800325e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8003262:	d14f      	bne.n	8003304 <HAL_SPI_Transmit+0x188>
 8003264:	68fb      	ldr	r3, [r7, #12]
 8003266:	685b      	ldr	r3, [r3, #4]
 8003268:	2b00      	cmp	r3, #0
 800326a:	d002      	beq.n	8003272 <HAL_SPI_Transmit+0xf6>
 800326c:	8afb      	ldrh	r3, [r7, #22]
 800326e:	2b01      	cmp	r3, #1
 8003270:	d142      	bne.n	80032f8 <HAL_SPI_Transmit+0x17c>
 8003272:	68fb      	ldr	r3, [r7, #12]
 8003274:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003276:	881a      	ldrh	r2, [r3, #0]
 8003278:	68fb      	ldr	r3, [r7, #12]
 800327a:	681b      	ldr	r3, [r3, #0]
 800327c:	60da      	str	r2, [r3, #12]
 800327e:	68fb      	ldr	r3, [r7, #12]
 8003280:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003282:	1c9a      	adds	r2, r3, #2
 8003284:	68fb      	ldr	r3, [r7, #12]
 8003286:	631a      	str	r2, [r3, #48]	; 0x30
 8003288:	68fb      	ldr	r3, [r7, #12]
 800328a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800328c:	b29b      	uxth	r3, r3
 800328e:	3b01      	subs	r3, #1
 8003290:	b29a      	uxth	r2, r3
 8003292:	68fb      	ldr	r3, [r7, #12]
 8003294:	86da      	strh	r2, [r3, #54]	; 0x36
 8003296:	e02f      	b.n	80032f8 <HAL_SPI_Transmit+0x17c>
 8003298:	68fb      	ldr	r3, [r7, #12]
 800329a:	681b      	ldr	r3, [r3, #0]
 800329c:	689b      	ldr	r3, [r3, #8]
 800329e:	f003 0302 	and.w	r3, r3, #2
 80032a2:	2b02      	cmp	r3, #2
 80032a4:	d112      	bne.n	80032cc <HAL_SPI_Transmit+0x150>
 80032a6:	68fb      	ldr	r3, [r7, #12]
 80032a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80032aa:	881a      	ldrh	r2, [r3, #0]
 80032ac:	68fb      	ldr	r3, [r7, #12]
 80032ae:	681b      	ldr	r3, [r3, #0]
 80032b0:	60da      	str	r2, [r3, #12]
 80032b2:	68fb      	ldr	r3, [r7, #12]
 80032b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80032b6:	1c9a      	adds	r2, r3, #2
 80032b8:	68fb      	ldr	r3, [r7, #12]
 80032ba:	631a      	str	r2, [r3, #48]	; 0x30
 80032bc:	68fb      	ldr	r3, [r7, #12]
 80032be:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80032c0:	b29b      	uxth	r3, r3
 80032c2:	3b01      	subs	r3, #1
 80032c4:	b29a      	uxth	r2, r3
 80032c6:	68fb      	ldr	r3, [r7, #12]
 80032c8:	86da      	strh	r2, [r3, #54]	; 0x36
 80032ca:	e015      	b.n	80032f8 <HAL_SPI_Transmit+0x17c>
 80032cc:	f7fe fff0 	bl	80022b0 <HAL_GetTick>
 80032d0:	4602      	mov	r2, r0
 80032d2:	69bb      	ldr	r3, [r7, #24]
 80032d4:	1ad3      	subs	r3, r2, r3
 80032d6:	683a      	ldr	r2, [r7, #0]
 80032d8:	429a      	cmp	r2, r3
 80032da:	d803      	bhi.n	80032e4 <HAL_SPI_Transmit+0x168>
 80032dc:	683b      	ldr	r3, [r7, #0]
 80032de:	f1b3 3fff 	cmp.w	r3, #4294967295
 80032e2:	d102      	bne.n	80032ea <HAL_SPI_Transmit+0x16e>
 80032e4:	683b      	ldr	r3, [r7, #0]
 80032e6:	2b00      	cmp	r3, #0
 80032e8:	d106      	bne.n	80032f8 <HAL_SPI_Transmit+0x17c>
 80032ea:	2303      	movs	r3, #3
 80032ec:	77fb      	strb	r3, [r7, #31]
 80032ee:	68fb      	ldr	r3, [r7, #12]
 80032f0:	2201      	movs	r2, #1
 80032f2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80032f6:	e07b      	b.n	80033f0 <HAL_SPI_Transmit+0x274>
 80032f8:	68fb      	ldr	r3, [r7, #12]
 80032fa:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80032fc:	b29b      	uxth	r3, r3
 80032fe:	2b00      	cmp	r3, #0
 8003300:	d1ca      	bne.n	8003298 <HAL_SPI_Transmit+0x11c>
 8003302:	e050      	b.n	80033a6 <HAL_SPI_Transmit+0x22a>
 8003304:	68fb      	ldr	r3, [r7, #12]
 8003306:	685b      	ldr	r3, [r3, #4]
 8003308:	2b00      	cmp	r3, #0
 800330a:	d002      	beq.n	8003312 <HAL_SPI_Transmit+0x196>
 800330c:	8afb      	ldrh	r3, [r7, #22]
 800330e:	2b01      	cmp	r3, #1
 8003310:	d144      	bne.n	800339c <HAL_SPI_Transmit+0x220>
 8003312:	68fb      	ldr	r3, [r7, #12]
 8003314:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003316:	68fb      	ldr	r3, [r7, #12]
 8003318:	681b      	ldr	r3, [r3, #0]
 800331a:	330c      	adds	r3, #12
 800331c:	7812      	ldrb	r2, [r2, #0]
 800331e:	701a      	strb	r2, [r3, #0]
 8003320:	68fb      	ldr	r3, [r7, #12]
 8003322:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003324:	1c5a      	adds	r2, r3, #1
 8003326:	68fb      	ldr	r3, [r7, #12]
 8003328:	631a      	str	r2, [r3, #48]	; 0x30
 800332a:	68fb      	ldr	r3, [r7, #12]
 800332c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800332e:	b29b      	uxth	r3, r3
 8003330:	3b01      	subs	r3, #1
 8003332:	b29a      	uxth	r2, r3
 8003334:	68fb      	ldr	r3, [r7, #12]
 8003336:	86da      	strh	r2, [r3, #54]	; 0x36
 8003338:	e030      	b.n	800339c <HAL_SPI_Transmit+0x220>
 800333a:	68fb      	ldr	r3, [r7, #12]
 800333c:	681b      	ldr	r3, [r3, #0]
 800333e:	689b      	ldr	r3, [r3, #8]
 8003340:	f003 0302 	and.w	r3, r3, #2
 8003344:	2b02      	cmp	r3, #2
 8003346:	d113      	bne.n	8003370 <HAL_SPI_Transmit+0x1f4>
 8003348:	68fb      	ldr	r3, [r7, #12]
 800334a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800334c:	68fb      	ldr	r3, [r7, #12]
 800334e:	681b      	ldr	r3, [r3, #0]
 8003350:	330c      	adds	r3, #12
 8003352:	7812      	ldrb	r2, [r2, #0]
 8003354:	701a      	strb	r2, [r3, #0]
 8003356:	68fb      	ldr	r3, [r7, #12]
 8003358:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800335a:	1c5a      	adds	r2, r3, #1
 800335c:	68fb      	ldr	r3, [r7, #12]
 800335e:	631a      	str	r2, [r3, #48]	; 0x30
 8003360:	68fb      	ldr	r3, [r7, #12]
 8003362:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003364:	b29b      	uxth	r3, r3
 8003366:	3b01      	subs	r3, #1
 8003368:	b29a      	uxth	r2, r3
 800336a:	68fb      	ldr	r3, [r7, #12]
 800336c:	86da      	strh	r2, [r3, #54]	; 0x36
 800336e:	e015      	b.n	800339c <HAL_SPI_Transmit+0x220>
 8003370:	f7fe ff9e 	bl	80022b0 <HAL_GetTick>
 8003374:	4602      	mov	r2, r0
 8003376:	69bb      	ldr	r3, [r7, #24]
 8003378:	1ad3      	subs	r3, r2, r3
 800337a:	683a      	ldr	r2, [r7, #0]
 800337c:	429a      	cmp	r2, r3
 800337e:	d803      	bhi.n	8003388 <HAL_SPI_Transmit+0x20c>
 8003380:	683b      	ldr	r3, [r7, #0]
 8003382:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003386:	d102      	bne.n	800338e <HAL_SPI_Transmit+0x212>
 8003388:	683b      	ldr	r3, [r7, #0]
 800338a:	2b00      	cmp	r3, #0
 800338c:	d106      	bne.n	800339c <HAL_SPI_Transmit+0x220>
 800338e:	2303      	movs	r3, #3
 8003390:	77fb      	strb	r3, [r7, #31]
 8003392:	68fb      	ldr	r3, [r7, #12]
 8003394:	2201      	movs	r2, #1
 8003396:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800339a:	e029      	b.n	80033f0 <HAL_SPI_Transmit+0x274>
 800339c:	68fb      	ldr	r3, [r7, #12]
 800339e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80033a0:	b29b      	uxth	r3, r3
 80033a2:	2b00      	cmp	r3, #0
 80033a4:	d1c9      	bne.n	800333a <HAL_SPI_Transmit+0x1be>
 80033a6:	69ba      	ldr	r2, [r7, #24]
 80033a8:	6839      	ldr	r1, [r7, #0]
 80033aa:	68f8      	ldr	r0, [r7, #12]
 80033ac:	f000 fbcc 	bl	8003b48 <SPI_EndRxTxTransaction>
 80033b0:	4603      	mov	r3, r0
 80033b2:	2b00      	cmp	r3, #0
 80033b4:	d002      	beq.n	80033bc <HAL_SPI_Transmit+0x240>
 80033b6:	68fb      	ldr	r3, [r7, #12]
 80033b8:	2220      	movs	r2, #32
 80033ba:	655a      	str	r2, [r3, #84]	; 0x54
 80033bc:	68fb      	ldr	r3, [r7, #12]
 80033be:	689b      	ldr	r3, [r3, #8]
 80033c0:	2b00      	cmp	r3, #0
 80033c2:	d10a      	bne.n	80033da <HAL_SPI_Transmit+0x25e>
 80033c4:	2300      	movs	r3, #0
 80033c6:	613b      	str	r3, [r7, #16]
 80033c8:	68fb      	ldr	r3, [r7, #12]
 80033ca:	681b      	ldr	r3, [r3, #0]
 80033cc:	68db      	ldr	r3, [r3, #12]
 80033ce:	613b      	str	r3, [r7, #16]
 80033d0:	68fb      	ldr	r3, [r7, #12]
 80033d2:	681b      	ldr	r3, [r3, #0]
 80033d4:	689b      	ldr	r3, [r3, #8]
 80033d6:	613b      	str	r3, [r7, #16]
 80033d8:	693b      	ldr	r3, [r7, #16]
 80033da:	68fb      	ldr	r3, [r7, #12]
 80033dc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80033de:	2b00      	cmp	r3, #0
 80033e0:	d002      	beq.n	80033e8 <HAL_SPI_Transmit+0x26c>
 80033e2:	2301      	movs	r3, #1
 80033e4:	77fb      	strb	r3, [r7, #31]
 80033e6:	e003      	b.n	80033f0 <HAL_SPI_Transmit+0x274>
 80033e8:	68fb      	ldr	r3, [r7, #12]
 80033ea:	2201      	movs	r2, #1
 80033ec:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80033f0:	68fb      	ldr	r3, [r7, #12]
 80033f2:	2200      	movs	r2, #0
 80033f4:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80033f8:	7ffb      	ldrb	r3, [r7, #31]
 80033fa:	4618      	mov	r0, r3
 80033fc:	3720      	adds	r7, #32
 80033fe:	46bd      	mov	sp, r7
 8003400:	bd80      	pop	{r7, pc}

08003402 <HAL_SPI_Receive>:
 8003402:	b580      	push	{r7, lr}
 8003404:	b088      	sub	sp, #32
 8003406:	af02      	add	r7, sp, #8
 8003408:	60f8      	str	r0, [r7, #12]
 800340a:	60b9      	str	r1, [r7, #8]
 800340c:	603b      	str	r3, [r7, #0]
 800340e:	4613      	mov	r3, r2
 8003410:	80fb      	strh	r3, [r7, #6]
 8003412:	2300      	movs	r3, #0
 8003414:	75fb      	strb	r3, [r7, #23]
 8003416:	68fb      	ldr	r3, [r7, #12]
 8003418:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800341c:	b2db      	uxtb	r3, r3
 800341e:	2b01      	cmp	r3, #1
 8003420:	d002      	beq.n	8003428 <HAL_SPI_Receive+0x26>
 8003422:	2302      	movs	r3, #2
 8003424:	75fb      	strb	r3, [r7, #23]
 8003426:	e0fb      	b.n	8003620 <HAL_SPI_Receive+0x21e>
 8003428:	68fb      	ldr	r3, [r7, #12]
 800342a:	685b      	ldr	r3, [r3, #4]
 800342c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8003430:	d112      	bne.n	8003458 <HAL_SPI_Receive+0x56>
 8003432:	68fb      	ldr	r3, [r7, #12]
 8003434:	689b      	ldr	r3, [r3, #8]
 8003436:	2b00      	cmp	r3, #0
 8003438:	d10e      	bne.n	8003458 <HAL_SPI_Receive+0x56>
 800343a:	68fb      	ldr	r3, [r7, #12]
 800343c:	2204      	movs	r2, #4
 800343e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003442:	88fa      	ldrh	r2, [r7, #6]
 8003444:	683b      	ldr	r3, [r7, #0]
 8003446:	9300      	str	r3, [sp, #0]
 8003448:	4613      	mov	r3, r2
 800344a:	68ba      	ldr	r2, [r7, #8]
 800344c:	68b9      	ldr	r1, [r7, #8]
 800344e:	68f8      	ldr	r0, [r7, #12]
 8003450:	f000 f8ef 	bl	8003632 <HAL_SPI_TransmitReceive>
 8003454:	4603      	mov	r3, r0
 8003456:	e0e8      	b.n	800362a <HAL_SPI_Receive+0x228>
 8003458:	68fb      	ldr	r3, [r7, #12]
 800345a:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 800345e:	2b01      	cmp	r3, #1
 8003460:	d101      	bne.n	8003466 <HAL_SPI_Receive+0x64>
 8003462:	2302      	movs	r3, #2
 8003464:	e0e1      	b.n	800362a <HAL_SPI_Receive+0x228>
 8003466:	68fb      	ldr	r3, [r7, #12]
 8003468:	2201      	movs	r2, #1
 800346a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800346e:	f7fe ff1f 	bl	80022b0 <HAL_GetTick>
 8003472:	6138      	str	r0, [r7, #16]
 8003474:	68bb      	ldr	r3, [r7, #8]
 8003476:	2b00      	cmp	r3, #0
 8003478:	d002      	beq.n	8003480 <HAL_SPI_Receive+0x7e>
 800347a:	88fb      	ldrh	r3, [r7, #6]
 800347c:	2b00      	cmp	r3, #0
 800347e:	d102      	bne.n	8003486 <HAL_SPI_Receive+0x84>
 8003480:	2301      	movs	r3, #1
 8003482:	75fb      	strb	r3, [r7, #23]
 8003484:	e0cc      	b.n	8003620 <HAL_SPI_Receive+0x21e>
 8003486:	68fb      	ldr	r3, [r7, #12]
 8003488:	2204      	movs	r2, #4
 800348a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800348e:	68fb      	ldr	r3, [r7, #12]
 8003490:	2200      	movs	r2, #0
 8003492:	655a      	str	r2, [r3, #84]	; 0x54
 8003494:	68fb      	ldr	r3, [r7, #12]
 8003496:	68ba      	ldr	r2, [r7, #8]
 8003498:	639a      	str	r2, [r3, #56]	; 0x38
 800349a:	68fb      	ldr	r3, [r7, #12]
 800349c:	88fa      	ldrh	r2, [r7, #6]
 800349e:	879a      	strh	r2, [r3, #60]	; 0x3c
 80034a0:	68fb      	ldr	r3, [r7, #12]
 80034a2:	88fa      	ldrh	r2, [r7, #6]
 80034a4:	87da      	strh	r2, [r3, #62]	; 0x3e
 80034a6:	68fb      	ldr	r3, [r7, #12]
 80034a8:	2200      	movs	r2, #0
 80034aa:	631a      	str	r2, [r3, #48]	; 0x30
 80034ac:	68fb      	ldr	r3, [r7, #12]
 80034ae:	2200      	movs	r2, #0
 80034b0:	869a      	strh	r2, [r3, #52]	; 0x34
 80034b2:	68fb      	ldr	r3, [r7, #12]
 80034b4:	2200      	movs	r2, #0
 80034b6:	86da      	strh	r2, [r3, #54]	; 0x36
 80034b8:	68fb      	ldr	r3, [r7, #12]
 80034ba:	2200      	movs	r2, #0
 80034bc:	641a      	str	r2, [r3, #64]	; 0x40
 80034be:	68fb      	ldr	r3, [r7, #12]
 80034c0:	2200      	movs	r2, #0
 80034c2:	645a      	str	r2, [r3, #68]	; 0x44
 80034c4:	68fb      	ldr	r3, [r7, #12]
 80034c6:	689b      	ldr	r3, [r3, #8]
 80034c8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80034cc:	d10f      	bne.n	80034ee <HAL_SPI_Receive+0xec>
 80034ce:	68fb      	ldr	r3, [r7, #12]
 80034d0:	681b      	ldr	r3, [r3, #0]
 80034d2:	681a      	ldr	r2, [r3, #0]
 80034d4:	68fb      	ldr	r3, [r7, #12]
 80034d6:	681b      	ldr	r3, [r3, #0]
 80034d8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80034dc:	601a      	str	r2, [r3, #0]
 80034de:	68fb      	ldr	r3, [r7, #12]
 80034e0:	681b      	ldr	r3, [r3, #0]
 80034e2:	681a      	ldr	r2, [r3, #0]
 80034e4:	68fb      	ldr	r3, [r7, #12]
 80034e6:	681b      	ldr	r3, [r3, #0]
 80034e8:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80034ec:	601a      	str	r2, [r3, #0]
 80034ee:	68fb      	ldr	r3, [r7, #12]
 80034f0:	681b      	ldr	r3, [r3, #0]
 80034f2:	681b      	ldr	r3, [r3, #0]
 80034f4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80034f8:	2b40      	cmp	r3, #64	; 0x40
 80034fa:	d007      	beq.n	800350c <HAL_SPI_Receive+0x10a>
 80034fc:	68fb      	ldr	r3, [r7, #12]
 80034fe:	681b      	ldr	r3, [r3, #0]
 8003500:	681a      	ldr	r2, [r3, #0]
 8003502:	68fb      	ldr	r3, [r7, #12]
 8003504:	681b      	ldr	r3, [r3, #0]
 8003506:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800350a:	601a      	str	r2, [r3, #0]
 800350c:	68fb      	ldr	r3, [r7, #12]
 800350e:	68db      	ldr	r3, [r3, #12]
 8003510:	2b00      	cmp	r3, #0
 8003512:	d16a      	bne.n	80035ea <HAL_SPI_Receive+0x1e8>
 8003514:	e032      	b.n	800357c <HAL_SPI_Receive+0x17a>
 8003516:	68fb      	ldr	r3, [r7, #12]
 8003518:	681b      	ldr	r3, [r3, #0]
 800351a:	689b      	ldr	r3, [r3, #8]
 800351c:	f003 0301 	and.w	r3, r3, #1
 8003520:	2b01      	cmp	r3, #1
 8003522:	d115      	bne.n	8003550 <HAL_SPI_Receive+0x14e>
 8003524:	68fb      	ldr	r3, [r7, #12]
 8003526:	681b      	ldr	r3, [r3, #0]
 8003528:	f103 020c 	add.w	r2, r3, #12
 800352c:	68fb      	ldr	r3, [r7, #12]
 800352e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003530:	7812      	ldrb	r2, [r2, #0]
 8003532:	b2d2      	uxtb	r2, r2
 8003534:	701a      	strb	r2, [r3, #0]
 8003536:	68fb      	ldr	r3, [r7, #12]
 8003538:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800353a:	1c5a      	adds	r2, r3, #1
 800353c:	68fb      	ldr	r3, [r7, #12]
 800353e:	639a      	str	r2, [r3, #56]	; 0x38
 8003540:	68fb      	ldr	r3, [r7, #12]
 8003542:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003544:	b29b      	uxth	r3, r3
 8003546:	3b01      	subs	r3, #1
 8003548:	b29a      	uxth	r2, r3
 800354a:	68fb      	ldr	r3, [r7, #12]
 800354c:	87da      	strh	r2, [r3, #62]	; 0x3e
 800354e:	e015      	b.n	800357c <HAL_SPI_Receive+0x17a>
 8003550:	f7fe feae 	bl	80022b0 <HAL_GetTick>
 8003554:	4602      	mov	r2, r0
 8003556:	693b      	ldr	r3, [r7, #16]
 8003558:	1ad3      	subs	r3, r2, r3
 800355a:	683a      	ldr	r2, [r7, #0]
 800355c:	429a      	cmp	r2, r3
 800355e:	d803      	bhi.n	8003568 <HAL_SPI_Receive+0x166>
 8003560:	683b      	ldr	r3, [r7, #0]
 8003562:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003566:	d102      	bne.n	800356e <HAL_SPI_Receive+0x16c>
 8003568:	683b      	ldr	r3, [r7, #0]
 800356a:	2b00      	cmp	r3, #0
 800356c:	d106      	bne.n	800357c <HAL_SPI_Receive+0x17a>
 800356e:	2303      	movs	r3, #3
 8003570:	75fb      	strb	r3, [r7, #23]
 8003572:	68fb      	ldr	r3, [r7, #12]
 8003574:	2201      	movs	r2, #1
 8003576:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800357a:	e051      	b.n	8003620 <HAL_SPI_Receive+0x21e>
 800357c:	68fb      	ldr	r3, [r7, #12]
 800357e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003580:	b29b      	uxth	r3, r3
 8003582:	2b00      	cmp	r3, #0
 8003584:	d1c7      	bne.n	8003516 <HAL_SPI_Receive+0x114>
 8003586:	e035      	b.n	80035f4 <HAL_SPI_Receive+0x1f2>
 8003588:	68fb      	ldr	r3, [r7, #12]
 800358a:	681b      	ldr	r3, [r3, #0]
 800358c:	689b      	ldr	r3, [r3, #8]
 800358e:	f003 0301 	and.w	r3, r3, #1
 8003592:	2b01      	cmp	r3, #1
 8003594:	d113      	bne.n	80035be <HAL_SPI_Receive+0x1bc>
 8003596:	68fb      	ldr	r3, [r7, #12]
 8003598:	681b      	ldr	r3, [r3, #0]
 800359a:	68da      	ldr	r2, [r3, #12]
 800359c:	68fb      	ldr	r3, [r7, #12]
 800359e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80035a0:	b292      	uxth	r2, r2
 80035a2:	801a      	strh	r2, [r3, #0]
 80035a4:	68fb      	ldr	r3, [r7, #12]
 80035a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80035a8:	1c9a      	adds	r2, r3, #2
 80035aa:	68fb      	ldr	r3, [r7, #12]
 80035ac:	639a      	str	r2, [r3, #56]	; 0x38
 80035ae:	68fb      	ldr	r3, [r7, #12]
 80035b0:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80035b2:	b29b      	uxth	r3, r3
 80035b4:	3b01      	subs	r3, #1
 80035b6:	b29a      	uxth	r2, r3
 80035b8:	68fb      	ldr	r3, [r7, #12]
 80035ba:	87da      	strh	r2, [r3, #62]	; 0x3e
 80035bc:	e015      	b.n	80035ea <HAL_SPI_Receive+0x1e8>
 80035be:	f7fe fe77 	bl	80022b0 <HAL_GetTick>
 80035c2:	4602      	mov	r2, r0
 80035c4:	693b      	ldr	r3, [r7, #16]
 80035c6:	1ad3      	subs	r3, r2, r3
 80035c8:	683a      	ldr	r2, [r7, #0]
 80035ca:	429a      	cmp	r2, r3
 80035cc:	d803      	bhi.n	80035d6 <HAL_SPI_Receive+0x1d4>
 80035ce:	683b      	ldr	r3, [r7, #0]
 80035d0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80035d4:	d102      	bne.n	80035dc <HAL_SPI_Receive+0x1da>
 80035d6:	683b      	ldr	r3, [r7, #0]
 80035d8:	2b00      	cmp	r3, #0
 80035da:	d106      	bne.n	80035ea <HAL_SPI_Receive+0x1e8>
 80035dc:	2303      	movs	r3, #3
 80035de:	75fb      	strb	r3, [r7, #23]
 80035e0:	68fb      	ldr	r3, [r7, #12]
 80035e2:	2201      	movs	r2, #1
 80035e4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80035e8:	e01a      	b.n	8003620 <HAL_SPI_Receive+0x21e>
 80035ea:	68fb      	ldr	r3, [r7, #12]
 80035ec:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80035ee:	b29b      	uxth	r3, r3
 80035f0:	2b00      	cmp	r3, #0
 80035f2:	d1c9      	bne.n	8003588 <HAL_SPI_Receive+0x186>
 80035f4:	693a      	ldr	r2, [r7, #16]
 80035f6:	6839      	ldr	r1, [r7, #0]
 80035f8:	68f8      	ldr	r0, [r7, #12]
 80035fa:	f000 fa53 	bl	8003aa4 <SPI_EndRxTransaction>
 80035fe:	4603      	mov	r3, r0
 8003600:	2b00      	cmp	r3, #0
 8003602:	d002      	beq.n	800360a <HAL_SPI_Receive+0x208>
 8003604:	68fb      	ldr	r3, [r7, #12]
 8003606:	2220      	movs	r2, #32
 8003608:	655a      	str	r2, [r3, #84]	; 0x54
 800360a:	68fb      	ldr	r3, [r7, #12]
 800360c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800360e:	2b00      	cmp	r3, #0
 8003610:	d002      	beq.n	8003618 <HAL_SPI_Receive+0x216>
 8003612:	2301      	movs	r3, #1
 8003614:	75fb      	strb	r3, [r7, #23]
 8003616:	e003      	b.n	8003620 <HAL_SPI_Receive+0x21e>
 8003618:	68fb      	ldr	r3, [r7, #12]
 800361a:	2201      	movs	r2, #1
 800361c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003620:	68fb      	ldr	r3, [r7, #12]
 8003622:	2200      	movs	r2, #0
 8003624:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8003628:	7dfb      	ldrb	r3, [r7, #23]
 800362a:	4618      	mov	r0, r3
 800362c:	3718      	adds	r7, #24
 800362e:	46bd      	mov	sp, r7
 8003630:	bd80      	pop	{r7, pc}

08003632 <HAL_SPI_TransmitReceive>:
 8003632:	b580      	push	{r7, lr}
 8003634:	b08c      	sub	sp, #48	; 0x30
 8003636:	af00      	add	r7, sp, #0
 8003638:	60f8      	str	r0, [r7, #12]
 800363a:	60b9      	str	r1, [r7, #8]
 800363c:	607a      	str	r2, [r7, #4]
 800363e:	807b      	strh	r3, [r7, #2]
 8003640:	2301      	movs	r3, #1
 8003642:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003644:	2300      	movs	r3, #0
 8003646:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800364a:	68fb      	ldr	r3, [r7, #12]
 800364c:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8003650:	2b01      	cmp	r3, #1
 8003652:	d101      	bne.n	8003658 <HAL_SPI_TransmitReceive+0x26>
 8003654:	2302      	movs	r3, #2
 8003656:	e198      	b.n	800398a <HAL_SPI_TransmitReceive+0x358>
 8003658:	68fb      	ldr	r3, [r7, #12]
 800365a:	2201      	movs	r2, #1
 800365c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8003660:	f7fe fe26 	bl	80022b0 <HAL_GetTick>
 8003664:	6278      	str	r0, [r7, #36]	; 0x24
 8003666:	68fb      	ldr	r3, [r7, #12]
 8003668:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800366c:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8003670:	68fb      	ldr	r3, [r7, #12]
 8003672:	685b      	ldr	r3, [r3, #4]
 8003674:	61fb      	str	r3, [r7, #28]
 8003676:	887b      	ldrh	r3, [r7, #2]
 8003678:	837b      	strh	r3, [r7, #26]
 800367a:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800367e:	2b01      	cmp	r3, #1
 8003680:	d00f      	beq.n	80036a2 <HAL_SPI_TransmitReceive+0x70>
 8003682:	69fb      	ldr	r3, [r7, #28]
 8003684:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8003688:	d107      	bne.n	800369a <HAL_SPI_TransmitReceive+0x68>
 800368a:	68fb      	ldr	r3, [r7, #12]
 800368c:	689b      	ldr	r3, [r3, #8]
 800368e:	2b00      	cmp	r3, #0
 8003690:	d103      	bne.n	800369a <HAL_SPI_TransmitReceive+0x68>
 8003692:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8003696:	2b04      	cmp	r3, #4
 8003698:	d003      	beq.n	80036a2 <HAL_SPI_TransmitReceive+0x70>
 800369a:	2302      	movs	r3, #2
 800369c:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80036a0:	e16d      	b.n	800397e <HAL_SPI_TransmitReceive+0x34c>
 80036a2:	68bb      	ldr	r3, [r7, #8]
 80036a4:	2b00      	cmp	r3, #0
 80036a6:	d005      	beq.n	80036b4 <HAL_SPI_TransmitReceive+0x82>
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	2b00      	cmp	r3, #0
 80036ac:	d002      	beq.n	80036b4 <HAL_SPI_TransmitReceive+0x82>
 80036ae:	887b      	ldrh	r3, [r7, #2]
 80036b0:	2b00      	cmp	r3, #0
 80036b2:	d103      	bne.n	80036bc <HAL_SPI_TransmitReceive+0x8a>
 80036b4:	2301      	movs	r3, #1
 80036b6:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80036ba:	e160      	b.n	800397e <HAL_SPI_TransmitReceive+0x34c>
 80036bc:	68fb      	ldr	r3, [r7, #12]
 80036be:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80036c2:	b2db      	uxtb	r3, r3
 80036c4:	2b04      	cmp	r3, #4
 80036c6:	d003      	beq.n	80036d0 <HAL_SPI_TransmitReceive+0x9e>
 80036c8:	68fb      	ldr	r3, [r7, #12]
 80036ca:	2205      	movs	r2, #5
 80036cc:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80036d0:	68fb      	ldr	r3, [r7, #12]
 80036d2:	2200      	movs	r2, #0
 80036d4:	655a      	str	r2, [r3, #84]	; 0x54
 80036d6:	68fb      	ldr	r3, [r7, #12]
 80036d8:	687a      	ldr	r2, [r7, #4]
 80036da:	639a      	str	r2, [r3, #56]	; 0x38
 80036dc:	68fb      	ldr	r3, [r7, #12]
 80036de:	887a      	ldrh	r2, [r7, #2]
 80036e0:	87da      	strh	r2, [r3, #62]	; 0x3e
 80036e2:	68fb      	ldr	r3, [r7, #12]
 80036e4:	887a      	ldrh	r2, [r7, #2]
 80036e6:	879a      	strh	r2, [r3, #60]	; 0x3c
 80036e8:	68fb      	ldr	r3, [r7, #12]
 80036ea:	68ba      	ldr	r2, [r7, #8]
 80036ec:	631a      	str	r2, [r3, #48]	; 0x30
 80036ee:	68fb      	ldr	r3, [r7, #12]
 80036f0:	887a      	ldrh	r2, [r7, #2]
 80036f2:	86da      	strh	r2, [r3, #54]	; 0x36
 80036f4:	68fb      	ldr	r3, [r7, #12]
 80036f6:	887a      	ldrh	r2, [r7, #2]
 80036f8:	869a      	strh	r2, [r3, #52]	; 0x34
 80036fa:	68fb      	ldr	r3, [r7, #12]
 80036fc:	2200      	movs	r2, #0
 80036fe:	641a      	str	r2, [r3, #64]	; 0x40
 8003700:	68fb      	ldr	r3, [r7, #12]
 8003702:	2200      	movs	r2, #0
 8003704:	645a      	str	r2, [r3, #68]	; 0x44
 8003706:	68fb      	ldr	r3, [r7, #12]
 8003708:	681b      	ldr	r3, [r3, #0]
 800370a:	681b      	ldr	r3, [r3, #0]
 800370c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003710:	2b40      	cmp	r3, #64	; 0x40
 8003712:	d007      	beq.n	8003724 <HAL_SPI_TransmitReceive+0xf2>
 8003714:	68fb      	ldr	r3, [r7, #12]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	681a      	ldr	r2, [r3, #0]
 800371a:	68fb      	ldr	r3, [r7, #12]
 800371c:	681b      	ldr	r3, [r3, #0]
 800371e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003722:	601a      	str	r2, [r3, #0]
 8003724:	68fb      	ldr	r3, [r7, #12]
 8003726:	68db      	ldr	r3, [r3, #12]
 8003728:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800372c:	d17c      	bne.n	8003828 <HAL_SPI_TransmitReceive+0x1f6>
 800372e:	68fb      	ldr	r3, [r7, #12]
 8003730:	685b      	ldr	r3, [r3, #4]
 8003732:	2b00      	cmp	r3, #0
 8003734:	d002      	beq.n	800373c <HAL_SPI_TransmitReceive+0x10a>
 8003736:	8b7b      	ldrh	r3, [r7, #26]
 8003738:	2b01      	cmp	r3, #1
 800373a:	d16a      	bne.n	8003812 <HAL_SPI_TransmitReceive+0x1e0>
 800373c:	68fb      	ldr	r3, [r7, #12]
 800373e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003740:	881a      	ldrh	r2, [r3, #0]
 8003742:	68fb      	ldr	r3, [r7, #12]
 8003744:	681b      	ldr	r3, [r3, #0]
 8003746:	60da      	str	r2, [r3, #12]
 8003748:	68fb      	ldr	r3, [r7, #12]
 800374a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800374c:	1c9a      	adds	r2, r3, #2
 800374e:	68fb      	ldr	r3, [r7, #12]
 8003750:	631a      	str	r2, [r3, #48]	; 0x30
 8003752:	68fb      	ldr	r3, [r7, #12]
 8003754:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003756:	b29b      	uxth	r3, r3
 8003758:	3b01      	subs	r3, #1
 800375a:	b29a      	uxth	r2, r3
 800375c:	68fb      	ldr	r3, [r7, #12]
 800375e:	86da      	strh	r2, [r3, #54]	; 0x36
 8003760:	e057      	b.n	8003812 <HAL_SPI_TransmitReceive+0x1e0>
 8003762:	68fb      	ldr	r3, [r7, #12]
 8003764:	681b      	ldr	r3, [r3, #0]
 8003766:	689b      	ldr	r3, [r3, #8]
 8003768:	f003 0302 	and.w	r3, r3, #2
 800376c:	2b02      	cmp	r3, #2
 800376e:	d11b      	bne.n	80037a8 <HAL_SPI_TransmitReceive+0x176>
 8003770:	68fb      	ldr	r3, [r7, #12]
 8003772:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003774:	b29b      	uxth	r3, r3
 8003776:	2b00      	cmp	r3, #0
 8003778:	d016      	beq.n	80037a8 <HAL_SPI_TransmitReceive+0x176>
 800377a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800377c:	2b01      	cmp	r3, #1
 800377e:	d113      	bne.n	80037a8 <HAL_SPI_TransmitReceive+0x176>
 8003780:	68fb      	ldr	r3, [r7, #12]
 8003782:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003784:	881a      	ldrh	r2, [r3, #0]
 8003786:	68fb      	ldr	r3, [r7, #12]
 8003788:	681b      	ldr	r3, [r3, #0]
 800378a:	60da      	str	r2, [r3, #12]
 800378c:	68fb      	ldr	r3, [r7, #12]
 800378e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003790:	1c9a      	adds	r2, r3, #2
 8003792:	68fb      	ldr	r3, [r7, #12]
 8003794:	631a      	str	r2, [r3, #48]	; 0x30
 8003796:	68fb      	ldr	r3, [r7, #12]
 8003798:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800379a:	b29b      	uxth	r3, r3
 800379c:	3b01      	subs	r3, #1
 800379e:	b29a      	uxth	r2, r3
 80037a0:	68fb      	ldr	r3, [r7, #12]
 80037a2:	86da      	strh	r2, [r3, #54]	; 0x36
 80037a4:	2300      	movs	r3, #0
 80037a6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80037a8:	68fb      	ldr	r3, [r7, #12]
 80037aa:	681b      	ldr	r3, [r3, #0]
 80037ac:	689b      	ldr	r3, [r3, #8]
 80037ae:	f003 0301 	and.w	r3, r3, #1
 80037b2:	2b01      	cmp	r3, #1
 80037b4:	d119      	bne.n	80037ea <HAL_SPI_TransmitReceive+0x1b8>
 80037b6:	68fb      	ldr	r3, [r7, #12]
 80037b8:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80037ba:	b29b      	uxth	r3, r3
 80037bc:	2b00      	cmp	r3, #0
 80037be:	d014      	beq.n	80037ea <HAL_SPI_TransmitReceive+0x1b8>
 80037c0:	68fb      	ldr	r3, [r7, #12]
 80037c2:	681b      	ldr	r3, [r3, #0]
 80037c4:	68da      	ldr	r2, [r3, #12]
 80037c6:	68fb      	ldr	r3, [r7, #12]
 80037c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80037ca:	b292      	uxth	r2, r2
 80037cc:	801a      	strh	r2, [r3, #0]
 80037ce:	68fb      	ldr	r3, [r7, #12]
 80037d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80037d2:	1c9a      	adds	r2, r3, #2
 80037d4:	68fb      	ldr	r3, [r7, #12]
 80037d6:	639a      	str	r2, [r3, #56]	; 0x38
 80037d8:	68fb      	ldr	r3, [r7, #12]
 80037da:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80037dc:	b29b      	uxth	r3, r3
 80037de:	3b01      	subs	r3, #1
 80037e0:	b29a      	uxth	r2, r3
 80037e2:	68fb      	ldr	r3, [r7, #12]
 80037e4:	87da      	strh	r2, [r3, #62]	; 0x3e
 80037e6:	2301      	movs	r3, #1
 80037e8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80037ea:	f7fe fd61 	bl	80022b0 <HAL_GetTick>
 80037ee:	4602      	mov	r2, r0
 80037f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80037f2:	1ad3      	subs	r3, r2, r3
 80037f4:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80037f6:	429a      	cmp	r2, r3
 80037f8:	d80b      	bhi.n	8003812 <HAL_SPI_TransmitReceive+0x1e0>
 80037fa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80037fc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003800:	d007      	beq.n	8003812 <HAL_SPI_TransmitReceive+0x1e0>
 8003802:	2303      	movs	r3, #3
 8003804:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8003808:	68fb      	ldr	r3, [r7, #12]
 800380a:	2201      	movs	r2, #1
 800380c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003810:	e0b5      	b.n	800397e <HAL_SPI_TransmitReceive+0x34c>
 8003812:	68fb      	ldr	r3, [r7, #12]
 8003814:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003816:	b29b      	uxth	r3, r3
 8003818:	2b00      	cmp	r3, #0
 800381a:	d1a2      	bne.n	8003762 <HAL_SPI_TransmitReceive+0x130>
 800381c:	68fb      	ldr	r3, [r7, #12]
 800381e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003820:	b29b      	uxth	r3, r3
 8003822:	2b00      	cmp	r3, #0
 8003824:	d19d      	bne.n	8003762 <HAL_SPI_TransmitReceive+0x130>
 8003826:	e080      	b.n	800392a <HAL_SPI_TransmitReceive+0x2f8>
 8003828:	68fb      	ldr	r3, [r7, #12]
 800382a:	685b      	ldr	r3, [r3, #4]
 800382c:	2b00      	cmp	r3, #0
 800382e:	d002      	beq.n	8003836 <HAL_SPI_TransmitReceive+0x204>
 8003830:	8b7b      	ldrh	r3, [r7, #26]
 8003832:	2b01      	cmp	r3, #1
 8003834:	d16f      	bne.n	8003916 <HAL_SPI_TransmitReceive+0x2e4>
 8003836:	68fb      	ldr	r3, [r7, #12]
 8003838:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800383a:	68fb      	ldr	r3, [r7, #12]
 800383c:	681b      	ldr	r3, [r3, #0]
 800383e:	330c      	adds	r3, #12
 8003840:	7812      	ldrb	r2, [r2, #0]
 8003842:	701a      	strb	r2, [r3, #0]
 8003844:	68fb      	ldr	r3, [r7, #12]
 8003846:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003848:	1c5a      	adds	r2, r3, #1
 800384a:	68fb      	ldr	r3, [r7, #12]
 800384c:	631a      	str	r2, [r3, #48]	; 0x30
 800384e:	68fb      	ldr	r3, [r7, #12]
 8003850:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003852:	b29b      	uxth	r3, r3
 8003854:	3b01      	subs	r3, #1
 8003856:	b29a      	uxth	r2, r3
 8003858:	68fb      	ldr	r3, [r7, #12]
 800385a:	86da      	strh	r2, [r3, #54]	; 0x36
 800385c:	e05b      	b.n	8003916 <HAL_SPI_TransmitReceive+0x2e4>
 800385e:	68fb      	ldr	r3, [r7, #12]
 8003860:	681b      	ldr	r3, [r3, #0]
 8003862:	689b      	ldr	r3, [r3, #8]
 8003864:	f003 0302 	and.w	r3, r3, #2
 8003868:	2b02      	cmp	r3, #2
 800386a:	d11c      	bne.n	80038a6 <HAL_SPI_TransmitReceive+0x274>
 800386c:	68fb      	ldr	r3, [r7, #12]
 800386e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003870:	b29b      	uxth	r3, r3
 8003872:	2b00      	cmp	r3, #0
 8003874:	d017      	beq.n	80038a6 <HAL_SPI_TransmitReceive+0x274>
 8003876:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003878:	2b01      	cmp	r3, #1
 800387a:	d114      	bne.n	80038a6 <HAL_SPI_TransmitReceive+0x274>
 800387c:	68fb      	ldr	r3, [r7, #12]
 800387e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003880:	68fb      	ldr	r3, [r7, #12]
 8003882:	681b      	ldr	r3, [r3, #0]
 8003884:	330c      	adds	r3, #12
 8003886:	7812      	ldrb	r2, [r2, #0]
 8003888:	701a      	strb	r2, [r3, #0]
 800388a:	68fb      	ldr	r3, [r7, #12]
 800388c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800388e:	1c5a      	adds	r2, r3, #1
 8003890:	68fb      	ldr	r3, [r7, #12]
 8003892:	631a      	str	r2, [r3, #48]	; 0x30
 8003894:	68fb      	ldr	r3, [r7, #12]
 8003896:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8003898:	b29b      	uxth	r3, r3
 800389a:	3b01      	subs	r3, #1
 800389c:	b29a      	uxth	r2, r3
 800389e:	68fb      	ldr	r3, [r7, #12]
 80038a0:	86da      	strh	r2, [r3, #54]	; 0x36
 80038a2:	2300      	movs	r3, #0
 80038a4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80038a6:	68fb      	ldr	r3, [r7, #12]
 80038a8:	681b      	ldr	r3, [r3, #0]
 80038aa:	689b      	ldr	r3, [r3, #8]
 80038ac:	f003 0301 	and.w	r3, r3, #1
 80038b0:	2b01      	cmp	r3, #1
 80038b2:	d119      	bne.n	80038e8 <HAL_SPI_TransmitReceive+0x2b6>
 80038b4:	68fb      	ldr	r3, [r7, #12]
 80038b6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80038b8:	b29b      	uxth	r3, r3
 80038ba:	2b00      	cmp	r3, #0
 80038bc:	d014      	beq.n	80038e8 <HAL_SPI_TransmitReceive+0x2b6>
 80038be:	68fb      	ldr	r3, [r7, #12]
 80038c0:	681b      	ldr	r3, [r3, #0]
 80038c2:	68da      	ldr	r2, [r3, #12]
 80038c4:	68fb      	ldr	r3, [r7, #12]
 80038c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80038c8:	b2d2      	uxtb	r2, r2
 80038ca:	701a      	strb	r2, [r3, #0]
 80038cc:	68fb      	ldr	r3, [r7, #12]
 80038ce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80038d0:	1c5a      	adds	r2, r3, #1
 80038d2:	68fb      	ldr	r3, [r7, #12]
 80038d4:	639a      	str	r2, [r3, #56]	; 0x38
 80038d6:	68fb      	ldr	r3, [r7, #12]
 80038d8:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80038da:	b29b      	uxth	r3, r3
 80038dc:	3b01      	subs	r3, #1
 80038de:	b29a      	uxth	r2, r3
 80038e0:	68fb      	ldr	r3, [r7, #12]
 80038e2:	87da      	strh	r2, [r3, #62]	; 0x3e
 80038e4:	2301      	movs	r3, #1
 80038e6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80038e8:	f7fe fce2 	bl	80022b0 <HAL_GetTick>
 80038ec:	4602      	mov	r2, r0
 80038ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80038f0:	1ad3      	subs	r3, r2, r3
 80038f2:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80038f4:	429a      	cmp	r2, r3
 80038f6:	d803      	bhi.n	8003900 <HAL_SPI_TransmitReceive+0x2ce>
 80038f8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80038fa:	f1b3 3fff 	cmp.w	r3, #4294967295
 80038fe:	d102      	bne.n	8003906 <HAL_SPI_TransmitReceive+0x2d4>
 8003900:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003902:	2b00      	cmp	r3, #0
 8003904:	d107      	bne.n	8003916 <HAL_SPI_TransmitReceive+0x2e4>
 8003906:	2303      	movs	r3, #3
 8003908:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800390c:	68fb      	ldr	r3, [r7, #12]
 800390e:	2201      	movs	r2, #1
 8003910:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003914:	e033      	b.n	800397e <HAL_SPI_TransmitReceive+0x34c>
 8003916:	68fb      	ldr	r3, [r7, #12]
 8003918:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800391a:	b29b      	uxth	r3, r3
 800391c:	2b00      	cmp	r3, #0
 800391e:	d19e      	bne.n	800385e <HAL_SPI_TransmitReceive+0x22c>
 8003920:	68fb      	ldr	r3, [r7, #12]
 8003922:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003924:	b29b      	uxth	r3, r3
 8003926:	2b00      	cmp	r3, #0
 8003928:	d199      	bne.n	800385e <HAL_SPI_TransmitReceive+0x22c>
 800392a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800392c:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 800392e:	68f8      	ldr	r0, [r7, #12]
 8003930:	f000 f90a 	bl	8003b48 <SPI_EndRxTxTransaction>
 8003934:	4603      	mov	r3, r0
 8003936:	2b00      	cmp	r3, #0
 8003938:	d006      	beq.n	8003948 <HAL_SPI_TransmitReceive+0x316>
 800393a:	2301      	movs	r3, #1
 800393c:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8003940:	68fb      	ldr	r3, [r7, #12]
 8003942:	2220      	movs	r2, #32
 8003944:	655a      	str	r2, [r3, #84]	; 0x54
 8003946:	e01a      	b.n	800397e <HAL_SPI_TransmitReceive+0x34c>
 8003948:	68fb      	ldr	r3, [r7, #12]
 800394a:	689b      	ldr	r3, [r3, #8]
 800394c:	2b00      	cmp	r3, #0
 800394e:	d10a      	bne.n	8003966 <HAL_SPI_TransmitReceive+0x334>
 8003950:	2300      	movs	r3, #0
 8003952:	617b      	str	r3, [r7, #20]
 8003954:	68fb      	ldr	r3, [r7, #12]
 8003956:	681b      	ldr	r3, [r3, #0]
 8003958:	68db      	ldr	r3, [r3, #12]
 800395a:	617b      	str	r3, [r7, #20]
 800395c:	68fb      	ldr	r3, [r7, #12]
 800395e:	681b      	ldr	r3, [r3, #0]
 8003960:	689b      	ldr	r3, [r3, #8]
 8003962:	617b      	str	r3, [r7, #20]
 8003964:	697b      	ldr	r3, [r7, #20]
 8003966:	68fb      	ldr	r3, [r7, #12]
 8003968:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800396a:	2b00      	cmp	r3, #0
 800396c:	d003      	beq.n	8003976 <HAL_SPI_TransmitReceive+0x344>
 800396e:	2301      	movs	r3, #1
 8003970:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8003974:	e003      	b.n	800397e <HAL_SPI_TransmitReceive+0x34c>
 8003976:	68fb      	ldr	r3, [r7, #12]
 8003978:	2201      	movs	r2, #1
 800397a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800397e:	68fb      	ldr	r3, [r7, #12]
 8003980:	2200      	movs	r2, #0
 8003982:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8003986:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 800398a:	4618      	mov	r0, r3
 800398c:	3730      	adds	r7, #48	; 0x30
 800398e:	46bd      	mov	sp, r7
 8003990:	bd80      	pop	{r7, pc}
	...

08003994 <SPI_WaitFlagStateUntilTimeout>:
 8003994:	b580      	push	{r7, lr}
 8003996:	b088      	sub	sp, #32
 8003998:	af00      	add	r7, sp, #0
 800399a:	60f8      	str	r0, [r7, #12]
 800399c:	60b9      	str	r1, [r7, #8]
 800399e:	603b      	str	r3, [r7, #0]
 80039a0:	4613      	mov	r3, r2
 80039a2:	71fb      	strb	r3, [r7, #7]
 80039a4:	f7fe fc84 	bl	80022b0 <HAL_GetTick>
 80039a8:	4602      	mov	r2, r0
 80039aa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80039ac:	1a9b      	subs	r3, r3, r2
 80039ae:	683a      	ldr	r2, [r7, #0]
 80039b0:	4413      	add	r3, r2
 80039b2:	61fb      	str	r3, [r7, #28]
 80039b4:	f7fe fc7c 	bl	80022b0 <HAL_GetTick>
 80039b8:	61b8      	str	r0, [r7, #24]
 80039ba:	4b39      	ldr	r3, [pc, #228]	; (8003aa0 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 80039bc:	681b      	ldr	r3, [r3, #0]
 80039be:	015b      	lsls	r3, r3, #5
 80039c0:	0d1b      	lsrs	r3, r3, #20
 80039c2:	69fa      	ldr	r2, [r7, #28]
 80039c4:	fb02 f303 	mul.w	r3, r2, r3
 80039c8:	617b      	str	r3, [r7, #20]
 80039ca:	e054      	b.n	8003a76 <SPI_WaitFlagStateUntilTimeout+0xe2>
 80039cc:	683b      	ldr	r3, [r7, #0]
 80039ce:	f1b3 3fff 	cmp.w	r3, #4294967295
 80039d2:	d050      	beq.n	8003a76 <SPI_WaitFlagStateUntilTimeout+0xe2>
 80039d4:	f7fe fc6c 	bl	80022b0 <HAL_GetTick>
 80039d8:	4602      	mov	r2, r0
 80039da:	69bb      	ldr	r3, [r7, #24]
 80039dc:	1ad3      	subs	r3, r2, r3
 80039de:	69fa      	ldr	r2, [r7, #28]
 80039e0:	429a      	cmp	r2, r3
 80039e2:	d902      	bls.n	80039ea <SPI_WaitFlagStateUntilTimeout+0x56>
 80039e4:	69fb      	ldr	r3, [r7, #28]
 80039e6:	2b00      	cmp	r3, #0
 80039e8:	d13d      	bne.n	8003a66 <SPI_WaitFlagStateUntilTimeout+0xd2>
 80039ea:	68fb      	ldr	r3, [r7, #12]
 80039ec:	681b      	ldr	r3, [r3, #0]
 80039ee:	685a      	ldr	r2, [r3, #4]
 80039f0:	68fb      	ldr	r3, [r7, #12]
 80039f2:	681b      	ldr	r3, [r3, #0]
 80039f4:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80039f8:	605a      	str	r2, [r3, #4]
 80039fa:	68fb      	ldr	r3, [r7, #12]
 80039fc:	685b      	ldr	r3, [r3, #4]
 80039fe:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8003a02:	d111      	bne.n	8003a28 <SPI_WaitFlagStateUntilTimeout+0x94>
 8003a04:	68fb      	ldr	r3, [r7, #12]
 8003a06:	689b      	ldr	r3, [r3, #8]
 8003a08:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8003a0c:	d004      	beq.n	8003a18 <SPI_WaitFlagStateUntilTimeout+0x84>
 8003a0e:	68fb      	ldr	r3, [r7, #12]
 8003a10:	689b      	ldr	r3, [r3, #8]
 8003a12:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003a16:	d107      	bne.n	8003a28 <SPI_WaitFlagStateUntilTimeout+0x94>
 8003a18:	68fb      	ldr	r3, [r7, #12]
 8003a1a:	681b      	ldr	r3, [r3, #0]
 8003a1c:	681a      	ldr	r2, [r3, #0]
 8003a1e:	68fb      	ldr	r3, [r7, #12]
 8003a20:	681b      	ldr	r3, [r3, #0]
 8003a22:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003a26:	601a      	str	r2, [r3, #0]
 8003a28:	68fb      	ldr	r3, [r7, #12]
 8003a2a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003a2c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003a30:	d10f      	bne.n	8003a52 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8003a32:	68fb      	ldr	r3, [r7, #12]
 8003a34:	681b      	ldr	r3, [r3, #0]
 8003a36:	681a      	ldr	r2, [r3, #0]
 8003a38:	68fb      	ldr	r3, [r7, #12]
 8003a3a:	681b      	ldr	r3, [r3, #0]
 8003a3c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003a40:	601a      	str	r2, [r3, #0]
 8003a42:	68fb      	ldr	r3, [r7, #12]
 8003a44:	681b      	ldr	r3, [r3, #0]
 8003a46:	681a      	ldr	r2, [r3, #0]
 8003a48:	68fb      	ldr	r3, [r7, #12]
 8003a4a:	681b      	ldr	r3, [r3, #0]
 8003a4c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8003a50:	601a      	str	r2, [r3, #0]
 8003a52:	68fb      	ldr	r3, [r7, #12]
 8003a54:	2201      	movs	r2, #1
 8003a56:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003a5a:	68fb      	ldr	r3, [r7, #12]
 8003a5c:	2200      	movs	r2, #0
 8003a5e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8003a62:	2303      	movs	r3, #3
 8003a64:	e017      	b.n	8003a96 <SPI_WaitFlagStateUntilTimeout+0x102>
 8003a66:	697b      	ldr	r3, [r7, #20]
 8003a68:	2b00      	cmp	r3, #0
 8003a6a:	d101      	bne.n	8003a70 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8003a6c:	2300      	movs	r3, #0
 8003a6e:	61fb      	str	r3, [r7, #28]
 8003a70:	697b      	ldr	r3, [r7, #20]
 8003a72:	3b01      	subs	r3, #1
 8003a74:	617b      	str	r3, [r7, #20]
 8003a76:	68fb      	ldr	r3, [r7, #12]
 8003a78:	681b      	ldr	r3, [r3, #0]
 8003a7a:	689a      	ldr	r2, [r3, #8]
 8003a7c:	68bb      	ldr	r3, [r7, #8]
 8003a7e:	4013      	ands	r3, r2
 8003a80:	68ba      	ldr	r2, [r7, #8]
 8003a82:	429a      	cmp	r2, r3
 8003a84:	bf0c      	ite	eq
 8003a86:	2301      	moveq	r3, #1
 8003a88:	2300      	movne	r3, #0
 8003a8a:	b2db      	uxtb	r3, r3
 8003a8c:	461a      	mov	r2, r3
 8003a8e:	79fb      	ldrb	r3, [r7, #7]
 8003a90:	429a      	cmp	r2, r3
 8003a92:	d19b      	bne.n	80039cc <SPI_WaitFlagStateUntilTimeout+0x38>
 8003a94:	2300      	movs	r3, #0
 8003a96:	4618      	mov	r0, r3
 8003a98:	3720      	adds	r7, #32
 8003a9a:	46bd      	mov	sp, r7
 8003a9c:	bd80      	pop	{r7, pc}
 8003a9e:	bf00      	nop
 8003aa0:	20000018 	.word	0x20000018

08003aa4 <SPI_EndRxTransaction>:
 8003aa4:	b580      	push	{r7, lr}
 8003aa6:	b086      	sub	sp, #24
 8003aa8:	af02      	add	r7, sp, #8
 8003aaa:	60f8      	str	r0, [r7, #12]
 8003aac:	60b9      	str	r1, [r7, #8]
 8003aae:	607a      	str	r2, [r7, #4]
 8003ab0:	68fb      	ldr	r3, [r7, #12]
 8003ab2:	685b      	ldr	r3, [r3, #4]
 8003ab4:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8003ab8:	d111      	bne.n	8003ade <SPI_EndRxTransaction+0x3a>
 8003aba:	68fb      	ldr	r3, [r7, #12]
 8003abc:	689b      	ldr	r3, [r3, #8]
 8003abe:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8003ac2:	d004      	beq.n	8003ace <SPI_EndRxTransaction+0x2a>
 8003ac4:	68fb      	ldr	r3, [r7, #12]
 8003ac6:	689b      	ldr	r3, [r3, #8]
 8003ac8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003acc:	d107      	bne.n	8003ade <SPI_EndRxTransaction+0x3a>
 8003ace:	68fb      	ldr	r3, [r7, #12]
 8003ad0:	681b      	ldr	r3, [r3, #0]
 8003ad2:	681a      	ldr	r2, [r3, #0]
 8003ad4:	68fb      	ldr	r3, [r7, #12]
 8003ad6:	681b      	ldr	r3, [r3, #0]
 8003ad8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003adc:	601a      	str	r2, [r3, #0]
 8003ade:	68fb      	ldr	r3, [r7, #12]
 8003ae0:	685b      	ldr	r3, [r3, #4]
 8003ae2:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8003ae6:	d117      	bne.n	8003b18 <SPI_EndRxTransaction+0x74>
 8003ae8:	68fb      	ldr	r3, [r7, #12]
 8003aea:	689b      	ldr	r3, [r3, #8]
 8003aec:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003af0:	d112      	bne.n	8003b18 <SPI_EndRxTransaction+0x74>
 8003af2:	687b      	ldr	r3, [r7, #4]
 8003af4:	9300      	str	r3, [sp, #0]
 8003af6:	68bb      	ldr	r3, [r7, #8]
 8003af8:	2200      	movs	r2, #0
 8003afa:	2101      	movs	r1, #1
 8003afc:	68f8      	ldr	r0, [r7, #12]
 8003afe:	f7ff ff49 	bl	8003994 <SPI_WaitFlagStateUntilTimeout>
 8003b02:	4603      	mov	r3, r0
 8003b04:	2b00      	cmp	r3, #0
 8003b06:	d01a      	beq.n	8003b3e <SPI_EndRxTransaction+0x9a>
 8003b08:	68fb      	ldr	r3, [r7, #12]
 8003b0a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003b0c:	f043 0220 	orr.w	r2, r3, #32
 8003b10:	68fb      	ldr	r3, [r7, #12]
 8003b12:	655a      	str	r2, [r3, #84]	; 0x54
 8003b14:	2303      	movs	r3, #3
 8003b16:	e013      	b.n	8003b40 <SPI_EndRxTransaction+0x9c>
 8003b18:	687b      	ldr	r3, [r7, #4]
 8003b1a:	9300      	str	r3, [sp, #0]
 8003b1c:	68bb      	ldr	r3, [r7, #8]
 8003b1e:	2200      	movs	r2, #0
 8003b20:	2180      	movs	r1, #128	; 0x80
 8003b22:	68f8      	ldr	r0, [r7, #12]
 8003b24:	f7ff ff36 	bl	8003994 <SPI_WaitFlagStateUntilTimeout>
 8003b28:	4603      	mov	r3, r0
 8003b2a:	2b00      	cmp	r3, #0
 8003b2c:	d007      	beq.n	8003b3e <SPI_EndRxTransaction+0x9a>
 8003b2e:	68fb      	ldr	r3, [r7, #12]
 8003b30:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003b32:	f043 0220 	orr.w	r2, r3, #32
 8003b36:	68fb      	ldr	r3, [r7, #12]
 8003b38:	655a      	str	r2, [r3, #84]	; 0x54
 8003b3a:	2303      	movs	r3, #3
 8003b3c:	e000      	b.n	8003b40 <SPI_EndRxTransaction+0x9c>
 8003b3e:	2300      	movs	r3, #0
 8003b40:	4618      	mov	r0, r3
 8003b42:	3710      	adds	r7, #16
 8003b44:	46bd      	mov	sp, r7
 8003b46:	bd80      	pop	{r7, pc}

08003b48 <SPI_EndRxTxTransaction>:
 8003b48:	b580      	push	{r7, lr}
 8003b4a:	b086      	sub	sp, #24
 8003b4c:	af02      	add	r7, sp, #8
 8003b4e:	60f8      	str	r0, [r7, #12]
 8003b50:	60b9      	str	r1, [r7, #8]
 8003b52:	607a      	str	r2, [r7, #4]
 8003b54:	687b      	ldr	r3, [r7, #4]
 8003b56:	9300      	str	r3, [sp, #0]
 8003b58:	68bb      	ldr	r3, [r7, #8]
 8003b5a:	2200      	movs	r2, #0
 8003b5c:	2180      	movs	r1, #128	; 0x80
 8003b5e:	68f8      	ldr	r0, [r7, #12]
 8003b60:	f7ff ff18 	bl	8003994 <SPI_WaitFlagStateUntilTimeout>
 8003b64:	4603      	mov	r3, r0
 8003b66:	2b00      	cmp	r3, #0
 8003b68:	d007      	beq.n	8003b7a <SPI_EndRxTxTransaction+0x32>
 8003b6a:	68fb      	ldr	r3, [r7, #12]
 8003b6c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003b6e:	f043 0220 	orr.w	r2, r3, #32
 8003b72:	68fb      	ldr	r3, [r7, #12]
 8003b74:	655a      	str	r2, [r3, #84]	; 0x54
 8003b76:	2303      	movs	r3, #3
 8003b78:	e000      	b.n	8003b7c <SPI_EndRxTxTransaction+0x34>
 8003b7a:	2300      	movs	r3, #0
 8003b7c:	4618      	mov	r0, r3
 8003b7e:	3710      	adds	r7, #16
 8003b80:	46bd      	mov	sp, r7
 8003b82:	bd80      	pop	{r7, pc}

08003b84 <vListInitialise>:
 8003b84:	b480      	push	{r7}
 8003b86:	b083      	sub	sp, #12
 8003b88:	af00      	add	r7, sp, #0
 8003b8a:	6078      	str	r0, [r7, #4]
 8003b8c:	687b      	ldr	r3, [r7, #4]
 8003b8e:	f103 0208 	add.w	r2, r3, #8
 8003b92:	687b      	ldr	r3, [r7, #4]
 8003b94:	605a      	str	r2, [r3, #4]
 8003b96:	687b      	ldr	r3, [r7, #4]
 8003b98:	f04f 32ff 	mov.w	r2, #4294967295
 8003b9c:	609a      	str	r2, [r3, #8]
 8003b9e:	687b      	ldr	r3, [r7, #4]
 8003ba0:	f103 0208 	add.w	r2, r3, #8
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	60da      	str	r2, [r3, #12]
 8003ba8:	687b      	ldr	r3, [r7, #4]
 8003baa:	f103 0208 	add.w	r2, r3, #8
 8003bae:	687b      	ldr	r3, [r7, #4]
 8003bb0:	611a      	str	r2, [r3, #16]
 8003bb2:	687b      	ldr	r3, [r7, #4]
 8003bb4:	2200      	movs	r2, #0
 8003bb6:	601a      	str	r2, [r3, #0]
 8003bb8:	bf00      	nop
 8003bba:	370c      	adds	r7, #12
 8003bbc:	46bd      	mov	sp, r7
 8003bbe:	bc80      	pop	{r7}
 8003bc0:	4770      	bx	lr

08003bc2 <vListInitialiseItem>:
 8003bc2:	b480      	push	{r7}
 8003bc4:	b083      	sub	sp, #12
 8003bc6:	af00      	add	r7, sp, #0
 8003bc8:	6078      	str	r0, [r7, #4]
 8003bca:	687b      	ldr	r3, [r7, #4]
 8003bcc:	2200      	movs	r2, #0
 8003bce:	611a      	str	r2, [r3, #16]
 8003bd0:	bf00      	nop
 8003bd2:	370c      	adds	r7, #12
 8003bd4:	46bd      	mov	sp, r7
 8003bd6:	bc80      	pop	{r7}
 8003bd8:	4770      	bx	lr

08003bda <vListInsertEnd>:
 8003bda:	b480      	push	{r7}
 8003bdc:	b085      	sub	sp, #20
 8003bde:	af00      	add	r7, sp, #0
 8003be0:	6078      	str	r0, [r7, #4]
 8003be2:	6039      	str	r1, [r7, #0]
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	685b      	ldr	r3, [r3, #4]
 8003be8:	60fb      	str	r3, [r7, #12]
 8003bea:	683b      	ldr	r3, [r7, #0]
 8003bec:	68fa      	ldr	r2, [r7, #12]
 8003bee:	605a      	str	r2, [r3, #4]
 8003bf0:	68fb      	ldr	r3, [r7, #12]
 8003bf2:	689a      	ldr	r2, [r3, #8]
 8003bf4:	683b      	ldr	r3, [r7, #0]
 8003bf6:	609a      	str	r2, [r3, #8]
 8003bf8:	68fb      	ldr	r3, [r7, #12]
 8003bfa:	689b      	ldr	r3, [r3, #8]
 8003bfc:	683a      	ldr	r2, [r7, #0]
 8003bfe:	605a      	str	r2, [r3, #4]
 8003c00:	68fb      	ldr	r3, [r7, #12]
 8003c02:	683a      	ldr	r2, [r7, #0]
 8003c04:	609a      	str	r2, [r3, #8]
 8003c06:	683b      	ldr	r3, [r7, #0]
 8003c08:	687a      	ldr	r2, [r7, #4]
 8003c0a:	611a      	str	r2, [r3, #16]
 8003c0c:	687b      	ldr	r3, [r7, #4]
 8003c0e:	681b      	ldr	r3, [r3, #0]
 8003c10:	1c5a      	adds	r2, r3, #1
 8003c12:	687b      	ldr	r3, [r7, #4]
 8003c14:	601a      	str	r2, [r3, #0]
 8003c16:	bf00      	nop
 8003c18:	3714      	adds	r7, #20
 8003c1a:	46bd      	mov	sp, r7
 8003c1c:	bc80      	pop	{r7}
 8003c1e:	4770      	bx	lr

08003c20 <vListInsert>:
 8003c20:	b480      	push	{r7}
 8003c22:	b085      	sub	sp, #20
 8003c24:	af00      	add	r7, sp, #0
 8003c26:	6078      	str	r0, [r7, #4]
 8003c28:	6039      	str	r1, [r7, #0]
 8003c2a:	683b      	ldr	r3, [r7, #0]
 8003c2c:	681b      	ldr	r3, [r3, #0]
 8003c2e:	60bb      	str	r3, [r7, #8]
 8003c30:	68bb      	ldr	r3, [r7, #8]
 8003c32:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003c36:	d103      	bne.n	8003c40 <vListInsert+0x20>
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	691b      	ldr	r3, [r3, #16]
 8003c3c:	60fb      	str	r3, [r7, #12]
 8003c3e:	e00c      	b.n	8003c5a <vListInsert+0x3a>
 8003c40:	687b      	ldr	r3, [r7, #4]
 8003c42:	3308      	adds	r3, #8
 8003c44:	60fb      	str	r3, [r7, #12]
 8003c46:	e002      	b.n	8003c4e <vListInsert+0x2e>
 8003c48:	68fb      	ldr	r3, [r7, #12]
 8003c4a:	685b      	ldr	r3, [r3, #4]
 8003c4c:	60fb      	str	r3, [r7, #12]
 8003c4e:	68fb      	ldr	r3, [r7, #12]
 8003c50:	685b      	ldr	r3, [r3, #4]
 8003c52:	681b      	ldr	r3, [r3, #0]
 8003c54:	68ba      	ldr	r2, [r7, #8]
 8003c56:	429a      	cmp	r2, r3
 8003c58:	d2f6      	bcs.n	8003c48 <vListInsert+0x28>
 8003c5a:	68fb      	ldr	r3, [r7, #12]
 8003c5c:	685a      	ldr	r2, [r3, #4]
 8003c5e:	683b      	ldr	r3, [r7, #0]
 8003c60:	605a      	str	r2, [r3, #4]
 8003c62:	683b      	ldr	r3, [r7, #0]
 8003c64:	685b      	ldr	r3, [r3, #4]
 8003c66:	683a      	ldr	r2, [r7, #0]
 8003c68:	609a      	str	r2, [r3, #8]
 8003c6a:	683b      	ldr	r3, [r7, #0]
 8003c6c:	68fa      	ldr	r2, [r7, #12]
 8003c6e:	609a      	str	r2, [r3, #8]
 8003c70:	68fb      	ldr	r3, [r7, #12]
 8003c72:	683a      	ldr	r2, [r7, #0]
 8003c74:	605a      	str	r2, [r3, #4]
 8003c76:	683b      	ldr	r3, [r7, #0]
 8003c78:	687a      	ldr	r2, [r7, #4]
 8003c7a:	611a      	str	r2, [r3, #16]
 8003c7c:	687b      	ldr	r3, [r7, #4]
 8003c7e:	681b      	ldr	r3, [r3, #0]
 8003c80:	1c5a      	adds	r2, r3, #1
 8003c82:	687b      	ldr	r3, [r7, #4]
 8003c84:	601a      	str	r2, [r3, #0]
 8003c86:	bf00      	nop
 8003c88:	3714      	adds	r7, #20
 8003c8a:	46bd      	mov	sp, r7
 8003c8c:	bc80      	pop	{r7}
 8003c8e:	4770      	bx	lr

08003c90 <uxListRemove>:
 8003c90:	b480      	push	{r7}
 8003c92:	b085      	sub	sp, #20
 8003c94:	af00      	add	r7, sp, #0
 8003c96:	6078      	str	r0, [r7, #4]
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	691b      	ldr	r3, [r3, #16]
 8003c9c:	60fb      	str	r3, [r7, #12]
 8003c9e:	687b      	ldr	r3, [r7, #4]
 8003ca0:	685b      	ldr	r3, [r3, #4]
 8003ca2:	687a      	ldr	r2, [r7, #4]
 8003ca4:	6892      	ldr	r2, [r2, #8]
 8003ca6:	609a      	str	r2, [r3, #8]
 8003ca8:	687b      	ldr	r3, [r7, #4]
 8003caa:	689b      	ldr	r3, [r3, #8]
 8003cac:	687a      	ldr	r2, [r7, #4]
 8003cae:	6852      	ldr	r2, [r2, #4]
 8003cb0:	605a      	str	r2, [r3, #4]
 8003cb2:	68fb      	ldr	r3, [r7, #12]
 8003cb4:	685b      	ldr	r3, [r3, #4]
 8003cb6:	687a      	ldr	r2, [r7, #4]
 8003cb8:	429a      	cmp	r2, r3
 8003cba:	d103      	bne.n	8003cc4 <uxListRemove+0x34>
 8003cbc:	687b      	ldr	r3, [r7, #4]
 8003cbe:	689a      	ldr	r2, [r3, #8]
 8003cc0:	68fb      	ldr	r3, [r7, #12]
 8003cc2:	605a      	str	r2, [r3, #4]
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	2200      	movs	r2, #0
 8003cc8:	611a      	str	r2, [r3, #16]
 8003cca:	68fb      	ldr	r3, [r7, #12]
 8003ccc:	681b      	ldr	r3, [r3, #0]
 8003cce:	1e5a      	subs	r2, r3, #1
 8003cd0:	68fb      	ldr	r3, [r7, #12]
 8003cd2:	601a      	str	r2, [r3, #0]
 8003cd4:	68fb      	ldr	r3, [r7, #12]
 8003cd6:	681b      	ldr	r3, [r3, #0]
 8003cd8:	4618      	mov	r0, r3
 8003cda:	3714      	adds	r7, #20
 8003cdc:	46bd      	mov	sp, r7
 8003cde:	bc80      	pop	{r7}
 8003ce0:	4770      	bx	lr

08003ce2 <xTaskCreateStatic>:
 8003ce2:	b580      	push	{r7, lr}
 8003ce4:	b08e      	sub	sp, #56	; 0x38
 8003ce6:	af04      	add	r7, sp, #16
 8003ce8:	60f8      	str	r0, [r7, #12]
 8003cea:	60b9      	str	r1, [r7, #8]
 8003cec:	607a      	str	r2, [r7, #4]
 8003cee:	603b      	str	r3, [r7, #0]
 8003cf0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003cf2:	2b00      	cmp	r3, #0
 8003cf4:	d10a      	bne.n	8003d0c <xTaskCreateStatic+0x2a>
 8003cf6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003cfa:	f383 8811 	msr	BASEPRI, r3
 8003cfe:	f3bf 8f6f 	isb	sy
 8003d02:	f3bf 8f4f 	dsb	sy
 8003d06:	623b      	str	r3, [r7, #32]
 8003d08:	bf00      	nop
 8003d0a:	e7fe      	b.n	8003d0a <xTaskCreateStatic+0x28>
 8003d0c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003d0e:	2b00      	cmp	r3, #0
 8003d10:	d10a      	bne.n	8003d28 <xTaskCreateStatic+0x46>
 8003d12:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003d16:	f383 8811 	msr	BASEPRI, r3
 8003d1a:	f3bf 8f6f 	isb	sy
 8003d1e:	f3bf 8f4f 	dsb	sy
 8003d22:	61fb      	str	r3, [r7, #28]
 8003d24:	bf00      	nop
 8003d26:	e7fe      	b.n	8003d26 <xTaskCreateStatic+0x44>
 8003d28:	23a0      	movs	r3, #160	; 0xa0
 8003d2a:	613b      	str	r3, [r7, #16]
 8003d2c:	693b      	ldr	r3, [r7, #16]
 8003d2e:	2ba0      	cmp	r3, #160	; 0xa0
 8003d30:	d00a      	beq.n	8003d48 <xTaskCreateStatic+0x66>
 8003d32:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003d36:	f383 8811 	msr	BASEPRI, r3
 8003d3a:	f3bf 8f6f 	isb	sy
 8003d3e:	f3bf 8f4f 	dsb	sy
 8003d42:	61bb      	str	r3, [r7, #24]
 8003d44:	bf00      	nop
 8003d46:	e7fe      	b.n	8003d46 <xTaskCreateStatic+0x64>
 8003d48:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003d4a:	2b00      	cmp	r3, #0
 8003d4c:	d01e      	beq.n	8003d8c <xTaskCreateStatic+0xaa>
 8003d4e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003d50:	2b00      	cmp	r3, #0
 8003d52:	d01b      	beq.n	8003d8c <xTaskCreateStatic+0xaa>
 8003d54:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003d56:	627b      	str	r3, [r7, #36]	; 0x24
 8003d58:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003d5a:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8003d5c:	631a      	str	r2, [r3, #48]	; 0x30
 8003d5e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003d60:	2202      	movs	r2, #2
 8003d62:	f883 209d 	strb.w	r2, [r3, #157]	; 0x9d
 8003d66:	2300      	movs	r3, #0
 8003d68:	9303      	str	r3, [sp, #12]
 8003d6a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003d6c:	9302      	str	r3, [sp, #8]
 8003d6e:	f107 0314 	add.w	r3, r7, #20
 8003d72:	9301      	str	r3, [sp, #4]
 8003d74:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003d76:	9300      	str	r3, [sp, #0]
 8003d78:	683b      	ldr	r3, [r7, #0]
 8003d7a:	687a      	ldr	r2, [r7, #4]
 8003d7c:	68b9      	ldr	r1, [r7, #8]
 8003d7e:	68f8      	ldr	r0, [r7, #12]
 8003d80:	f000 f850 	bl	8003e24 <prvInitialiseNewTask>
 8003d84:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8003d86:	f000 f8e3 	bl	8003f50 <prvAddNewTaskToReadyList>
 8003d8a:	e001      	b.n	8003d90 <xTaskCreateStatic+0xae>
 8003d8c:	2300      	movs	r3, #0
 8003d8e:	617b      	str	r3, [r7, #20]
 8003d90:	697b      	ldr	r3, [r7, #20]
 8003d92:	4618      	mov	r0, r3
 8003d94:	3728      	adds	r7, #40	; 0x28
 8003d96:	46bd      	mov	sp, r7
 8003d98:	bd80      	pop	{r7, pc}

08003d9a <xTaskCreate>:
 8003d9a:	b580      	push	{r7, lr}
 8003d9c:	b08c      	sub	sp, #48	; 0x30
 8003d9e:	af04      	add	r7, sp, #16
 8003da0:	60f8      	str	r0, [r7, #12]
 8003da2:	60b9      	str	r1, [r7, #8]
 8003da4:	603b      	str	r3, [r7, #0]
 8003da6:	4613      	mov	r3, r2
 8003da8:	80fb      	strh	r3, [r7, #6]
 8003daa:	88fb      	ldrh	r3, [r7, #6]
 8003dac:	009b      	lsls	r3, r3, #2
 8003dae:	4618      	mov	r0, r3
 8003db0:	f000 feb6 	bl	8004b20 <pvPortMalloc>
 8003db4:	6178      	str	r0, [r7, #20]
 8003db6:	697b      	ldr	r3, [r7, #20]
 8003db8:	2b00      	cmp	r3, #0
 8003dba:	d00e      	beq.n	8003dda <xTaskCreate+0x40>
 8003dbc:	20a0      	movs	r0, #160	; 0xa0
 8003dbe:	f000 feaf 	bl	8004b20 <pvPortMalloc>
 8003dc2:	61f8      	str	r0, [r7, #28]
 8003dc4:	69fb      	ldr	r3, [r7, #28]
 8003dc6:	2b00      	cmp	r3, #0
 8003dc8:	d003      	beq.n	8003dd2 <xTaskCreate+0x38>
 8003dca:	69fb      	ldr	r3, [r7, #28]
 8003dcc:	697a      	ldr	r2, [r7, #20]
 8003dce:	631a      	str	r2, [r3, #48]	; 0x30
 8003dd0:	e005      	b.n	8003dde <xTaskCreate+0x44>
 8003dd2:	6978      	ldr	r0, [r7, #20]
 8003dd4:	f000 ff68 	bl	8004ca8 <vPortFree>
 8003dd8:	e001      	b.n	8003dde <xTaskCreate+0x44>
 8003dda:	2300      	movs	r3, #0
 8003ddc:	61fb      	str	r3, [r7, #28]
 8003dde:	69fb      	ldr	r3, [r7, #28]
 8003de0:	2b00      	cmp	r3, #0
 8003de2:	d017      	beq.n	8003e14 <xTaskCreate+0x7a>
 8003de4:	69fb      	ldr	r3, [r7, #28]
 8003de6:	2200      	movs	r2, #0
 8003de8:	f883 209d 	strb.w	r2, [r3, #157]	; 0x9d
 8003dec:	88fa      	ldrh	r2, [r7, #6]
 8003dee:	2300      	movs	r3, #0
 8003df0:	9303      	str	r3, [sp, #12]
 8003df2:	69fb      	ldr	r3, [r7, #28]
 8003df4:	9302      	str	r3, [sp, #8]
 8003df6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003df8:	9301      	str	r3, [sp, #4]
 8003dfa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003dfc:	9300      	str	r3, [sp, #0]
 8003dfe:	683b      	ldr	r3, [r7, #0]
 8003e00:	68b9      	ldr	r1, [r7, #8]
 8003e02:	68f8      	ldr	r0, [r7, #12]
 8003e04:	f000 f80e 	bl	8003e24 <prvInitialiseNewTask>
 8003e08:	69f8      	ldr	r0, [r7, #28]
 8003e0a:	f000 f8a1 	bl	8003f50 <prvAddNewTaskToReadyList>
 8003e0e:	2301      	movs	r3, #1
 8003e10:	61bb      	str	r3, [r7, #24]
 8003e12:	e002      	b.n	8003e1a <xTaskCreate+0x80>
 8003e14:	f04f 33ff 	mov.w	r3, #4294967295
 8003e18:	61bb      	str	r3, [r7, #24]
 8003e1a:	69bb      	ldr	r3, [r7, #24]
 8003e1c:	4618      	mov	r0, r3
 8003e1e:	3720      	adds	r7, #32
 8003e20:	46bd      	mov	sp, r7
 8003e22:	bd80      	pop	{r7, pc}

08003e24 <prvInitialiseNewTask>:
 8003e24:	b580      	push	{r7, lr}
 8003e26:	b088      	sub	sp, #32
 8003e28:	af00      	add	r7, sp, #0
 8003e2a:	60f8      	str	r0, [r7, #12]
 8003e2c:	60b9      	str	r1, [r7, #8]
 8003e2e:	607a      	str	r2, [r7, #4]
 8003e30:	603b      	str	r3, [r7, #0]
 8003e32:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003e34:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003e36:	687b      	ldr	r3, [r7, #4]
 8003e38:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8003e3c:	3b01      	subs	r3, #1
 8003e3e:	009b      	lsls	r3, r3, #2
 8003e40:	4413      	add	r3, r2
 8003e42:	61bb      	str	r3, [r7, #24]
 8003e44:	69bb      	ldr	r3, [r7, #24]
 8003e46:	f023 0307 	bic.w	r3, r3, #7
 8003e4a:	61bb      	str	r3, [r7, #24]
 8003e4c:	69bb      	ldr	r3, [r7, #24]
 8003e4e:	f003 0307 	and.w	r3, r3, #7
 8003e52:	2b00      	cmp	r3, #0
 8003e54:	d00a      	beq.n	8003e6c <prvInitialiseNewTask+0x48>
 8003e56:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003e5a:	f383 8811 	msr	BASEPRI, r3
 8003e5e:	f3bf 8f6f 	isb	sy
 8003e62:	f3bf 8f4f 	dsb	sy
 8003e66:	617b      	str	r3, [r7, #20]
 8003e68:	bf00      	nop
 8003e6a:	e7fe      	b.n	8003e6a <prvInitialiseNewTask+0x46>
 8003e6c:	2300      	movs	r3, #0
 8003e6e:	61fb      	str	r3, [r7, #28]
 8003e70:	e012      	b.n	8003e98 <prvInitialiseNewTask+0x74>
 8003e72:	68ba      	ldr	r2, [r7, #8]
 8003e74:	69fb      	ldr	r3, [r7, #28]
 8003e76:	4413      	add	r3, r2
 8003e78:	7819      	ldrb	r1, [r3, #0]
 8003e7a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003e7c:	69fb      	ldr	r3, [r7, #28]
 8003e7e:	4413      	add	r3, r2
 8003e80:	3334      	adds	r3, #52	; 0x34
 8003e82:	460a      	mov	r2, r1
 8003e84:	701a      	strb	r2, [r3, #0]
 8003e86:	68ba      	ldr	r2, [r7, #8]
 8003e88:	69fb      	ldr	r3, [r7, #28]
 8003e8a:	4413      	add	r3, r2
 8003e8c:	781b      	ldrb	r3, [r3, #0]
 8003e8e:	2b00      	cmp	r3, #0
 8003e90:	d006      	beq.n	8003ea0 <prvInitialiseNewTask+0x7c>
 8003e92:	69fb      	ldr	r3, [r7, #28]
 8003e94:	3301      	adds	r3, #1
 8003e96:	61fb      	str	r3, [r7, #28]
 8003e98:	69fb      	ldr	r3, [r7, #28]
 8003e9a:	2b0f      	cmp	r3, #15
 8003e9c:	d9e9      	bls.n	8003e72 <prvInitialiseNewTask+0x4e>
 8003e9e:	e000      	b.n	8003ea2 <prvInitialiseNewTask+0x7e>
 8003ea0:	bf00      	nop
 8003ea2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003ea4:	2200      	movs	r2, #0
 8003ea6:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8003eaa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003eac:	2b06      	cmp	r3, #6
 8003eae:	d901      	bls.n	8003eb4 <prvInitialiseNewTask+0x90>
 8003eb0:	2306      	movs	r3, #6
 8003eb2:	62bb      	str	r3, [r7, #40]	; 0x28
 8003eb4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003eb6:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003eb8:	62da      	str	r2, [r3, #44]	; 0x2c
 8003eba:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003ebc:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003ebe:	645a      	str	r2, [r3, #68]	; 0x44
 8003ec0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003ec2:	2200      	movs	r2, #0
 8003ec4:	649a      	str	r2, [r3, #72]	; 0x48
 8003ec6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003ec8:	3304      	adds	r3, #4
 8003eca:	4618      	mov	r0, r3
 8003ecc:	f7ff fe79 	bl	8003bc2 <vListInitialiseItem>
 8003ed0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003ed2:	3318      	adds	r3, #24
 8003ed4:	4618      	mov	r0, r3
 8003ed6:	f7ff fe74 	bl	8003bc2 <vListInitialiseItem>
 8003eda:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003edc:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003ede:	611a      	str	r2, [r3, #16]
 8003ee0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003ee2:	f1c3 0207 	rsb	r2, r3, #7
 8003ee6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003ee8:	619a      	str	r2, [r3, #24]
 8003eea:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003eec:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003eee:	625a      	str	r2, [r3, #36]	; 0x24
 8003ef0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003ef2:	2200      	movs	r2, #0
 8003ef4:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 8003ef8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003efa:	2200      	movs	r2, #0
 8003efc:	f883 209c 	strb.w	r2, [r3, #156]	; 0x9c
 8003f00:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003f02:	334c      	adds	r3, #76	; 0x4c
 8003f04:	224c      	movs	r2, #76	; 0x4c
 8003f06:	2100      	movs	r1, #0
 8003f08:	4618      	mov	r0, r3
 8003f0a:	f000 ffe1 	bl	8004ed0 <memset>
 8003f0e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003f10:	4a0c      	ldr	r2, [pc, #48]	; (8003f44 <prvInitialiseNewTask+0x120>)
 8003f12:	651a      	str	r2, [r3, #80]	; 0x50
 8003f14:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003f16:	4a0c      	ldr	r2, [pc, #48]	; (8003f48 <prvInitialiseNewTask+0x124>)
 8003f18:	655a      	str	r2, [r3, #84]	; 0x54
 8003f1a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003f1c:	4a0b      	ldr	r2, [pc, #44]	; (8003f4c <prvInitialiseNewTask+0x128>)
 8003f1e:	659a      	str	r2, [r3, #88]	; 0x58
 8003f20:	683a      	ldr	r2, [r7, #0]
 8003f22:	68f9      	ldr	r1, [r7, #12]
 8003f24:	69b8      	ldr	r0, [r7, #24]
 8003f26:	f000 fc47 	bl	80047b8 <pxPortInitialiseStack>
 8003f2a:	4602      	mov	r2, r0
 8003f2c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003f2e:	601a      	str	r2, [r3, #0]
 8003f30:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003f32:	2b00      	cmp	r3, #0
 8003f34:	d002      	beq.n	8003f3c <prvInitialiseNewTask+0x118>
 8003f36:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003f38:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003f3a:	601a      	str	r2, [r3, #0]
 8003f3c:	bf00      	nop
 8003f3e:	3720      	adds	r7, #32
 8003f40:	46bd      	mov	sp, r7
 8003f42:	bd80      	pop	{r7, pc}
 8003f44:	20001534 	.word	0x20001534
 8003f48:	2000159c 	.word	0x2000159c
 8003f4c:	20001604 	.word	0x20001604

08003f50 <prvAddNewTaskToReadyList>:
 8003f50:	b580      	push	{r7, lr}
 8003f52:	b082      	sub	sp, #8
 8003f54:	af00      	add	r7, sp, #0
 8003f56:	6078      	str	r0, [r7, #4]
 8003f58:	f000 fd20 	bl	800499c <vPortEnterCritical>
 8003f5c:	4b2a      	ldr	r3, [pc, #168]	; (8004008 <prvAddNewTaskToReadyList+0xb8>)
 8003f5e:	681b      	ldr	r3, [r3, #0]
 8003f60:	3301      	adds	r3, #1
 8003f62:	4a29      	ldr	r2, [pc, #164]	; (8004008 <prvAddNewTaskToReadyList+0xb8>)
 8003f64:	6013      	str	r3, [r2, #0]
 8003f66:	4b29      	ldr	r3, [pc, #164]	; (800400c <prvAddNewTaskToReadyList+0xbc>)
 8003f68:	681b      	ldr	r3, [r3, #0]
 8003f6a:	2b00      	cmp	r3, #0
 8003f6c:	d109      	bne.n	8003f82 <prvAddNewTaskToReadyList+0x32>
 8003f6e:	4a27      	ldr	r2, [pc, #156]	; (800400c <prvAddNewTaskToReadyList+0xbc>)
 8003f70:	687b      	ldr	r3, [r7, #4]
 8003f72:	6013      	str	r3, [r2, #0]
 8003f74:	4b24      	ldr	r3, [pc, #144]	; (8004008 <prvAddNewTaskToReadyList+0xb8>)
 8003f76:	681b      	ldr	r3, [r3, #0]
 8003f78:	2b01      	cmp	r3, #1
 8003f7a:	d110      	bne.n	8003f9e <prvAddNewTaskToReadyList+0x4e>
 8003f7c:	f000 fad2 	bl	8004524 <prvInitialiseTaskLists>
 8003f80:	e00d      	b.n	8003f9e <prvAddNewTaskToReadyList+0x4e>
 8003f82:	4b23      	ldr	r3, [pc, #140]	; (8004010 <prvAddNewTaskToReadyList+0xc0>)
 8003f84:	681b      	ldr	r3, [r3, #0]
 8003f86:	2b00      	cmp	r3, #0
 8003f88:	d109      	bne.n	8003f9e <prvAddNewTaskToReadyList+0x4e>
 8003f8a:	4b20      	ldr	r3, [pc, #128]	; (800400c <prvAddNewTaskToReadyList+0xbc>)
 8003f8c:	681b      	ldr	r3, [r3, #0]
 8003f8e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003f90:	687b      	ldr	r3, [r7, #4]
 8003f92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003f94:	429a      	cmp	r2, r3
 8003f96:	d802      	bhi.n	8003f9e <prvAddNewTaskToReadyList+0x4e>
 8003f98:	4a1c      	ldr	r2, [pc, #112]	; (800400c <prvAddNewTaskToReadyList+0xbc>)
 8003f9a:	687b      	ldr	r3, [r7, #4]
 8003f9c:	6013      	str	r3, [r2, #0]
 8003f9e:	4b1d      	ldr	r3, [pc, #116]	; (8004014 <prvAddNewTaskToReadyList+0xc4>)
 8003fa0:	681b      	ldr	r3, [r3, #0]
 8003fa2:	3301      	adds	r3, #1
 8003fa4:	4a1b      	ldr	r2, [pc, #108]	; (8004014 <prvAddNewTaskToReadyList+0xc4>)
 8003fa6:	6013      	str	r3, [r2, #0]
 8003fa8:	687b      	ldr	r3, [r7, #4]
 8003faa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003fac:	2201      	movs	r2, #1
 8003fae:	409a      	lsls	r2, r3
 8003fb0:	4b19      	ldr	r3, [pc, #100]	; (8004018 <prvAddNewTaskToReadyList+0xc8>)
 8003fb2:	681b      	ldr	r3, [r3, #0]
 8003fb4:	4313      	orrs	r3, r2
 8003fb6:	4a18      	ldr	r2, [pc, #96]	; (8004018 <prvAddNewTaskToReadyList+0xc8>)
 8003fb8:	6013      	str	r3, [r2, #0]
 8003fba:	687b      	ldr	r3, [r7, #4]
 8003fbc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003fbe:	4613      	mov	r3, r2
 8003fc0:	009b      	lsls	r3, r3, #2
 8003fc2:	4413      	add	r3, r2
 8003fc4:	009b      	lsls	r3, r3, #2
 8003fc6:	4a15      	ldr	r2, [pc, #84]	; (800401c <prvAddNewTaskToReadyList+0xcc>)
 8003fc8:	441a      	add	r2, r3
 8003fca:	687b      	ldr	r3, [r7, #4]
 8003fcc:	3304      	adds	r3, #4
 8003fce:	4619      	mov	r1, r3
 8003fd0:	4610      	mov	r0, r2
 8003fd2:	f7ff fe02 	bl	8003bda <vListInsertEnd>
 8003fd6:	f000 fd11 	bl	80049fc <vPortExitCritical>
 8003fda:	4b0d      	ldr	r3, [pc, #52]	; (8004010 <prvAddNewTaskToReadyList+0xc0>)
 8003fdc:	681b      	ldr	r3, [r3, #0]
 8003fde:	2b00      	cmp	r3, #0
 8003fe0:	d00e      	beq.n	8004000 <prvAddNewTaskToReadyList+0xb0>
 8003fe2:	4b0a      	ldr	r3, [pc, #40]	; (800400c <prvAddNewTaskToReadyList+0xbc>)
 8003fe4:	681b      	ldr	r3, [r3, #0]
 8003fe6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003fe8:	687b      	ldr	r3, [r7, #4]
 8003fea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003fec:	429a      	cmp	r2, r3
 8003fee:	d207      	bcs.n	8004000 <prvAddNewTaskToReadyList+0xb0>
 8003ff0:	4b0b      	ldr	r3, [pc, #44]	; (8004020 <prvAddNewTaskToReadyList+0xd0>)
 8003ff2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003ff6:	601a      	str	r2, [r3, #0]
 8003ff8:	f3bf 8f4f 	dsb	sy
 8003ffc:	f3bf 8f6f 	isb	sy
 8004000:	bf00      	nop
 8004002:	3708      	adds	r7, #8
 8004004:	46bd      	mov	sp, r7
 8004006:	bd80      	pop	{r7, pc}
 8004008:	200008e8 	.word	0x200008e8
 800400c:	200007e8 	.word	0x200007e8
 8004010:	200008f4 	.word	0x200008f4
 8004014:	20000904 	.word	0x20000904
 8004018:	200008f0 	.word	0x200008f0
 800401c:	200007ec 	.word	0x200007ec
 8004020:	e000ed04 	.word	0xe000ed04

08004024 <vTaskDelay>:
 8004024:	b580      	push	{r7, lr}
 8004026:	b084      	sub	sp, #16
 8004028:	af00      	add	r7, sp, #0
 800402a:	6078      	str	r0, [r7, #4]
 800402c:	2300      	movs	r3, #0
 800402e:	60fb      	str	r3, [r7, #12]
 8004030:	687b      	ldr	r3, [r7, #4]
 8004032:	2b00      	cmp	r3, #0
 8004034:	d017      	beq.n	8004066 <vTaskDelay+0x42>
 8004036:	4b13      	ldr	r3, [pc, #76]	; (8004084 <vTaskDelay+0x60>)
 8004038:	681b      	ldr	r3, [r3, #0]
 800403a:	2b00      	cmp	r3, #0
 800403c:	d00a      	beq.n	8004054 <vTaskDelay+0x30>
 800403e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004042:	f383 8811 	msr	BASEPRI, r3
 8004046:	f3bf 8f6f 	isb	sy
 800404a:	f3bf 8f4f 	dsb	sy
 800404e:	60bb      	str	r3, [r7, #8]
 8004050:	bf00      	nop
 8004052:	e7fe      	b.n	8004052 <vTaskDelay+0x2e>
 8004054:	f000 f884 	bl	8004160 <vTaskSuspendAll>
 8004058:	2100      	movs	r1, #0
 800405a:	6878      	ldr	r0, [r7, #4]
 800405c:	f000 fb46 	bl	80046ec <prvAddCurrentTaskToDelayedList>
 8004060:	f000 f88c 	bl	800417c <xTaskResumeAll>
 8004064:	60f8      	str	r0, [r7, #12]
 8004066:	68fb      	ldr	r3, [r7, #12]
 8004068:	2b00      	cmp	r3, #0
 800406a:	d107      	bne.n	800407c <vTaskDelay+0x58>
 800406c:	4b06      	ldr	r3, [pc, #24]	; (8004088 <vTaskDelay+0x64>)
 800406e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004072:	601a      	str	r2, [r3, #0]
 8004074:	f3bf 8f4f 	dsb	sy
 8004078:	f3bf 8f6f 	isb	sy
 800407c:	bf00      	nop
 800407e:	3710      	adds	r7, #16
 8004080:	46bd      	mov	sp, r7
 8004082:	bd80      	pop	{r7, pc}
 8004084:	20000910 	.word	0x20000910
 8004088:	e000ed04 	.word	0xe000ed04

0800408c <vTaskStartScheduler>:
 800408c:	b580      	push	{r7, lr}
 800408e:	b08a      	sub	sp, #40	; 0x28
 8004090:	af04      	add	r7, sp, #16
 8004092:	2300      	movs	r3, #0
 8004094:	60bb      	str	r3, [r7, #8]
 8004096:	2300      	movs	r3, #0
 8004098:	607b      	str	r3, [r7, #4]
 800409a:	463a      	mov	r2, r7
 800409c:	1d39      	adds	r1, r7, #4
 800409e:	f107 0308 	add.w	r3, r7, #8
 80040a2:	4618      	mov	r0, r3
 80040a4:	f7fc f85c 	bl	8000160 <vApplicationGetIdleTaskMemory>
 80040a8:	6839      	ldr	r1, [r7, #0]
 80040aa:	687b      	ldr	r3, [r7, #4]
 80040ac:	68ba      	ldr	r2, [r7, #8]
 80040ae:	9202      	str	r2, [sp, #8]
 80040b0:	9301      	str	r3, [sp, #4]
 80040b2:	2300      	movs	r3, #0
 80040b4:	9300      	str	r3, [sp, #0]
 80040b6:	2300      	movs	r3, #0
 80040b8:	460a      	mov	r2, r1
 80040ba:	4921      	ldr	r1, [pc, #132]	; (8004140 <vTaskStartScheduler+0xb4>)
 80040bc:	4821      	ldr	r0, [pc, #132]	; (8004144 <vTaskStartScheduler+0xb8>)
 80040be:	f7ff fe10 	bl	8003ce2 <xTaskCreateStatic>
 80040c2:	4603      	mov	r3, r0
 80040c4:	4a20      	ldr	r2, [pc, #128]	; (8004148 <vTaskStartScheduler+0xbc>)
 80040c6:	6013      	str	r3, [r2, #0]
 80040c8:	4b1f      	ldr	r3, [pc, #124]	; (8004148 <vTaskStartScheduler+0xbc>)
 80040ca:	681b      	ldr	r3, [r3, #0]
 80040cc:	2b00      	cmp	r3, #0
 80040ce:	d002      	beq.n	80040d6 <vTaskStartScheduler+0x4a>
 80040d0:	2301      	movs	r3, #1
 80040d2:	617b      	str	r3, [r7, #20]
 80040d4:	e001      	b.n	80040da <vTaskStartScheduler+0x4e>
 80040d6:	2300      	movs	r3, #0
 80040d8:	617b      	str	r3, [r7, #20]
 80040da:	697b      	ldr	r3, [r7, #20]
 80040dc:	2b01      	cmp	r3, #1
 80040de:	d11b      	bne.n	8004118 <vTaskStartScheduler+0x8c>
 80040e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80040e4:	f383 8811 	msr	BASEPRI, r3
 80040e8:	f3bf 8f6f 	isb	sy
 80040ec:	f3bf 8f4f 	dsb	sy
 80040f0:	613b      	str	r3, [r7, #16]
 80040f2:	bf00      	nop
 80040f4:	4b15      	ldr	r3, [pc, #84]	; (800414c <vTaskStartScheduler+0xc0>)
 80040f6:	681b      	ldr	r3, [r3, #0]
 80040f8:	334c      	adds	r3, #76	; 0x4c
 80040fa:	4a15      	ldr	r2, [pc, #84]	; (8004150 <vTaskStartScheduler+0xc4>)
 80040fc:	6013      	str	r3, [r2, #0]
 80040fe:	4b15      	ldr	r3, [pc, #84]	; (8004154 <vTaskStartScheduler+0xc8>)
 8004100:	f04f 32ff 	mov.w	r2, #4294967295
 8004104:	601a      	str	r2, [r3, #0]
 8004106:	4b14      	ldr	r3, [pc, #80]	; (8004158 <vTaskStartScheduler+0xcc>)
 8004108:	2201      	movs	r2, #1
 800410a:	601a      	str	r2, [r3, #0]
 800410c:	4b13      	ldr	r3, [pc, #76]	; (800415c <vTaskStartScheduler+0xd0>)
 800410e:	2200      	movs	r2, #0
 8004110:	601a      	str	r2, [r3, #0]
 8004112:	f000 fbd1 	bl	80048b8 <xPortStartScheduler>
 8004116:	e00e      	b.n	8004136 <vTaskStartScheduler+0xaa>
 8004118:	697b      	ldr	r3, [r7, #20]
 800411a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800411e:	d10a      	bne.n	8004136 <vTaskStartScheduler+0xaa>
 8004120:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004124:	f383 8811 	msr	BASEPRI, r3
 8004128:	f3bf 8f6f 	isb	sy
 800412c:	f3bf 8f4f 	dsb	sy
 8004130:	60fb      	str	r3, [r7, #12]
 8004132:	bf00      	nop
 8004134:	e7fe      	b.n	8004134 <vTaskStartScheduler+0xa8>
 8004136:	bf00      	nop
 8004138:	3718      	adds	r7, #24
 800413a:	46bd      	mov	sp, r7
 800413c:	bd80      	pop	{r7, pc}
 800413e:	bf00      	nop
 8004140:	0800533c 	.word	0x0800533c
 8004144:	080044f5 	.word	0x080044f5
 8004148:	2000090c 	.word	0x2000090c
 800414c:	200007e8 	.word	0x200007e8
 8004150:	200000a4 	.word	0x200000a4
 8004154:	20000908 	.word	0x20000908
 8004158:	200008f4 	.word	0x200008f4
 800415c:	200008ec 	.word	0x200008ec

08004160 <vTaskSuspendAll>:
 8004160:	b480      	push	{r7}
 8004162:	af00      	add	r7, sp, #0
 8004164:	4b04      	ldr	r3, [pc, #16]	; (8004178 <vTaskSuspendAll+0x18>)
 8004166:	681b      	ldr	r3, [r3, #0]
 8004168:	3301      	adds	r3, #1
 800416a:	4a03      	ldr	r2, [pc, #12]	; (8004178 <vTaskSuspendAll+0x18>)
 800416c:	6013      	str	r3, [r2, #0]
 800416e:	bf00      	nop
 8004170:	46bd      	mov	sp, r7
 8004172:	bc80      	pop	{r7}
 8004174:	4770      	bx	lr
 8004176:	bf00      	nop
 8004178:	20000910 	.word	0x20000910

0800417c <xTaskResumeAll>:
 800417c:	b580      	push	{r7, lr}
 800417e:	b084      	sub	sp, #16
 8004180:	af00      	add	r7, sp, #0
 8004182:	2300      	movs	r3, #0
 8004184:	60fb      	str	r3, [r7, #12]
 8004186:	2300      	movs	r3, #0
 8004188:	60bb      	str	r3, [r7, #8]
 800418a:	4b41      	ldr	r3, [pc, #260]	; (8004290 <xTaskResumeAll+0x114>)
 800418c:	681b      	ldr	r3, [r3, #0]
 800418e:	2b00      	cmp	r3, #0
 8004190:	d10a      	bne.n	80041a8 <xTaskResumeAll+0x2c>
 8004192:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004196:	f383 8811 	msr	BASEPRI, r3
 800419a:	f3bf 8f6f 	isb	sy
 800419e:	f3bf 8f4f 	dsb	sy
 80041a2:	603b      	str	r3, [r7, #0]
 80041a4:	bf00      	nop
 80041a6:	e7fe      	b.n	80041a6 <xTaskResumeAll+0x2a>
 80041a8:	f000 fbf8 	bl	800499c <vPortEnterCritical>
 80041ac:	4b38      	ldr	r3, [pc, #224]	; (8004290 <xTaskResumeAll+0x114>)
 80041ae:	681b      	ldr	r3, [r3, #0]
 80041b0:	3b01      	subs	r3, #1
 80041b2:	4a37      	ldr	r2, [pc, #220]	; (8004290 <xTaskResumeAll+0x114>)
 80041b4:	6013      	str	r3, [r2, #0]
 80041b6:	4b36      	ldr	r3, [pc, #216]	; (8004290 <xTaskResumeAll+0x114>)
 80041b8:	681b      	ldr	r3, [r3, #0]
 80041ba:	2b00      	cmp	r3, #0
 80041bc:	d161      	bne.n	8004282 <xTaskResumeAll+0x106>
 80041be:	4b35      	ldr	r3, [pc, #212]	; (8004294 <xTaskResumeAll+0x118>)
 80041c0:	681b      	ldr	r3, [r3, #0]
 80041c2:	2b00      	cmp	r3, #0
 80041c4:	d05d      	beq.n	8004282 <xTaskResumeAll+0x106>
 80041c6:	e02e      	b.n	8004226 <xTaskResumeAll+0xaa>
 80041c8:	4b33      	ldr	r3, [pc, #204]	; (8004298 <xTaskResumeAll+0x11c>)
 80041ca:	68db      	ldr	r3, [r3, #12]
 80041cc:	68db      	ldr	r3, [r3, #12]
 80041ce:	60fb      	str	r3, [r7, #12]
 80041d0:	68fb      	ldr	r3, [r7, #12]
 80041d2:	3318      	adds	r3, #24
 80041d4:	4618      	mov	r0, r3
 80041d6:	f7ff fd5b 	bl	8003c90 <uxListRemove>
 80041da:	68fb      	ldr	r3, [r7, #12]
 80041dc:	3304      	adds	r3, #4
 80041de:	4618      	mov	r0, r3
 80041e0:	f7ff fd56 	bl	8003c90 <uxListRemove>
 80041e4:	68fb      	ldr	r3, [r7, #12]
 80041e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80041e8:	2201      	movs	r2, #1
 80041ea:	409a      	lsls	r2, r3
 80041ec:	4b2b      	ldr	r3, [pc, #172]	; (800429c <xTaskResumeAll+0x120>)
 80041ee:	681b      	ldr	r3, [r3, #0]
 80041f0:	4313      	orrs	r3, r2
 80041f2:	4a2a      	ldr	r2, [pc, #168]	; (800429c <xTaskResumeAll+0x120>)
 80041f4:	6013      	str	r3, [r2, #0]
 80041f6:	68fb      	ldr	r3, [r7, #12]
 80041f8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80041fa:	4613      	mov	r3, r2
 80041fc:	009b      	lsls	r3, r3, #2
 80041fe:	4413      	add	r3, r2
 8004200:	009b      	lsls	r3, r3, #2
 8004202:	4a27      	ldr	r2, [pc, #156]	; (80042a0 <xTaskResumeAll+0x124>)
 8004204:	441a      	add	r2, r3
 8004206:	68fb      	ldr	r3, [r7, #12]
 8004208:	3304      	adds	r3, #4
 800420a:	4619      	mov	r1, r3
 800420c:	4610      	mov	r0, r2
 800420e:	f7ff fce4 	bl	8003bda <vListInsertEnd>
 8004212:	68fb      	ldr	r3, [r7, #12]
 8004214:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004216:	4b23      	ldr	r3, [pc, #140]	; (80042a4 <xTaskResumeAll+0x128>)
 8004218:	681b      	ldr	r3, [r3, #0]
 800421a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800421c:	429a      	cmp	r2, r3
 800421e:	d302      	bcc.n	8004226 <xTaskResumeAll+0xaa>
 8004220:	4b21      	ldr	r3, [pc, #132]	; (80042a8 <xTaskResumeAll+0x12c>)
 8004222:	2201      	movs	r2, #1
 8004224:	601a      	str	r2, [r3, #0]
 8004226:	4b1c      	ldr	r3, [pc, #112]	; (8004298 <xTaskResumeAll+0x11c>)
 8004228:	681b      	ldr	r3, [r3, #0]
 800422a:	2b00      	cmp	r3, #0
 800422c:	d1cc      	bne.n	80041c8 <xTaskResumeAll+0x4c>
 800422e:	68fb      	ldr	r3, [r7, #12]
 8004230:	2b00      	cmp	r3, #0
 8004232:	d001      	beq.n	8004238 <xTaskResumeAll+0xbc>
 8004234:	f000 fa18 	bl	8004668 <prvResetNextTaskUnblockTime>
 8004238:	4b1c      	ldr	r3, [pc, #112]	; (80042ac <xTaskResumeAll+0x130>)
 800423a:	681b      	ldr	r3, [r3, #0]
 800423c:	607b      	str	r3, [r7, #4]
 800423e:	687b      	ldr	r3, [r7, #4]
 8004240:	2b00      	cmp	r3, #0
 8004242:	d010      	beq.n	8004266 <xTaskResumeAll+0xea>
 8004244:	f000 f836 	bl	80042b4 <xTaskIncrementTick>
 8004248:	4603      	mov	r3, r0
 800424a:	2b00      	cmp	r3, #0
 800424c:	d002      	beq.n	8004254 <xTaskResumeAll+0xd8>
 800424e:	4b16      	ldr	r3, [pc, #88]	; (80042a8 <xTaskResumeAll+0x12c>)
 8004250:	2201      	movs	r2, #1
 8004252:	601a      	str	r2, [r3, #0]
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	3b01      	subs	r3, #1
 8004258:	607b      	str	r3, [r7, #4]
 800425a:	687b      	ldr	r3, [r7, #4]
 800425c:	2b00      	cmp	r3, #0
 800425e:	d1f1      	bne.n	8004244 <xTaskResumeAll+0xc8>
 8004260:	4b12      	ldr	r3, [pc, #72]	; (80042ac <xTaskResumeAll+0x130>)
 8004262:	2200      	movs	r2, #0
 8004264:	601a      	str	r2, [r3, #0]
 8004266:	4b10      	ldr	r3, [pc, #64]	; (80042a8 <xTaskResumeAll+0x12c>)
 8004268:	681b      	ldr	r3, [r3, #0]
 800426a:	2b00      	cmp	r3, #0
 800426c:	d009      	beq.n	8004282 <xTaskResumeAll+0x106>
 800426e:	2301      	movs	r3, #1
 8004270:	60bb      	str	r3, [r7, #8]
 8004272:	4b0f      	ldr	r3, [pc, #60]	; (80042b0 <xTaskResumeAll+0x134>)
 8004274:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004278:	601a      	str	r2, [r3, #0]
 800427a:	f3bf 8f4f 	dsb	sy
 800427e:	f3bf 8f6f 	isb	sy
 8004282:	f000 fbbb 	bl	80049fc <vPortExitCritical>
 8004286:	68bb      	ldr	r3, [r7, #8]
 8004288:	4618      	mov	r0, r3
 800428a:	3710      	adds	r7, #16
 800428c:	46bd      	mov	sp, r7
 800428e:	bd80      	pop	{r7, pc}
 8004290:	20000910 	.word	0x20000910
 8004294:	200008e8 	.word	0x200008e8
 8004298:	200008a8 	.word	0x200008a8
 800429c:	200008f0 	.word	0x200008f0
 80042a0:	200007ec 	.word	0x200007ec
 80042a4:	200007e8 	.word	0x200007e8
 80042a8:	200008fc 	.word	0x200008fc
 80042ac:	200008f8 	.word	0x200008f8
 80042b0:	e000ed04 	.word	0xe000ed04

080042b4 <xTaskIncrementTick>:
 80042b4:	b580      	push	{r7, lr}
 80042b6:	b086      	sub	sp, #24
 80042b8:	af00      	add	r7, sp, #0
 80042ba:	2300      	movs	r3, #0
 80042bc:	617b      	str	r3, [r7, #20]
 80042be:	4b51      	ldr	r3, [pc, #324]	; (8004404 <xTaskIncrementTick+0x150>)
 80042c0:	681b      	ldr	r3, [r3, #0]
 80042c2:	2b00      	cmp	r3, #0
 80042c4:	f040 808d 	bne.w	80043e2 <xTaskIncrementTick+0x12e>
 80042c8:	4b4f      	ldr	r3, [pc, #316]	; (8004408 <xTaskIncrementTick+0x154>)
 80042ca:	681b      	ldr	r3, [r3, #0]
 80042cc:	3301      	adds	r3, #1
 80042ce:	613b      	str	r3, [r7, #16]
 80042d0:	4a4d      	ldr	r2, [pc, #308]	; (8004408 <xTaskIncrementTick+0x154>)
 80042d2:	693b      	ldr	r3, [r7, #16]
 80042d4:	6013      	str	r3, [r2, #0]
 80042d6:	693b      	ldr	r3, [r7, #16]
 80042d8:	2b00      	cmp	r3, #0
 80042da:	d120      	bne.n	800431e <xTaskIncrementTick+0x6a>
 80042dc:	4b4b      	ldr	r3, [pc, #300]	; (800440c <xTaskIncrementTick+0x158>)
 80042de:	681b      	ldr	r3, [r3, #0]
 80042e0:	681b      	ldr	r3, [r3, #0]
 80042e2:	2b00      	cmp	r3, #0
 80042e4:	d00a      	beq.n	80042fc <xTaskIncrementTick+0x48>
 80042e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80042ea:	f383 8811 	msr	BASEPRI, r3
 80042ee:	f3bf 8f6f 	isb	sy
 80042f2:	f3bf 8f4f 	dsb	sy
 80042f6:	603b      	str	r3, [r7, #0]
 80042f8:	bf00      	nop
 80042fa:	e7fe      	b.n	80042fa <xTaskIncrementTick+0x46>
 80042fc:	4b43      	ldr	r3, [pc, #268]	; (800440c <xTaskIncrementTick+0x158>)
 80042fe:	681b      	ldr	r3, [r3, #0]
 8004300:	60fb      	str	r3, [r7, #12]
 8004302:	4b43      	ldr	r3, [pc, #268]	; (8004410 <xTaskIncrementTick+0x15c>)
 8004304:	681b      	ldr	r3, [r3, #0]
 8004306:	4a41      	ldr	r2, [pc, #260]	; (800440c <xTaskIncrementTick+0x158>)
 8004308:	6013      	str	r3, [r2, #0]
 800430a:	4a41      	ldr	r2, [pc, #260]	; (8004410 <xTaskIncrementTick+0x15c>)
 800430c:	68fb      	ldr	r3, [r7, #12]
 800430e:	6013      	str	r3, [r2, #0]
 8004310:	4b40      	ldr	r3, [pc, #256]	; (8004414 <xTaskIncrementTick+0x160>)
 8004312:	681b      	ldr	r3, [r3, #0]
 8004314:	3301      	adds	r3, #1
 8004316:	4a3f      	ldr	r2, [pc, #252]	; (8004414 <xTaskIncrementTick+0x160>)
 8004318:	6013      	str	r3, [r2, #0]
 800431a:	f000 f9a5 	bl	8004668 <prvResetNextTaskUnblockTime>
 800431e:	4b3e      	ldr	r3, [pc, #248]	; (8004418 <xTaskIncrementTick+0x164>)
 8004320:	681b      	ldr	r3, [r3, #0]
 8004322:	693a      	ldr	r2, [r7, #16]
 8004324:	429a      	cmp	r2, r3
 8004326:	d34d      	bcc.n	80043c4 <xTaskIncrementTick+0x110>
 8004328:	4b38      	ldr	r3, [pc, #224]	; (800440c <xTaskIncrementTick+0x158>)
 800432a:	681b      	ldr	r3, [r3, #0]
 800432c:	681b      	ldr	r3, [r3, #0]
 800432e:	2b00      	cmp	r3, #0
 8004330:	d101      	bne.n	8004336 <xTaskIncrementTick+0x82>
 8004332:	2301      	movs	r3, #1
 8004334:	e000      	b.n	8004338 <xTaskIncrementTick+0x84>
 8004336:	2300      	movs	r3, #0
 8004338:	2b00      	cmp	r3, #0
 800433a:	d004      	beq.n	8004346 <xTaskIncrementTick+0x92>
 800433c:	4b36      	ldr	r3, [pc, #216]	; (8004418 <xTaskIncrementTick+0x164>)
 800433e:	f04f 32ff 	mov.w	r2, #4294967295
 8004342:	601a      	str	r2, [r3, #0]
 8004344:	e03e      	b.n	80043c4 <xTaskIncrementTick+0x110>
 8004346:	4b31      	ldr	r3, [pc, #196]	; (800440c <xTaskIncrementTick+0x158>)
 8004348:	681b      	ldr	r3, [r3, #0]
 800434a:	68db      	ldr	r3, [r3, #12]
 800434c:	68db      	ldr	r3, [r3, #12]
 800434e:	60bb      	str	r3, [r7, #8]
 8004350:	68bb      	ldr	r3, [r7, #8]
 8004352:	685b      	ldr	r3, [r3, #4]
 8004354:	607b      	str	r3, [r7, #4]
 8004356:	693a      	ldr	r2, [r7, #16]
 8004358:	687b      	ldr	r3, [r7, #4]
 800435a:	429a      	cmp	r2, r3
 800435c:	d203      	bcs.n	8004366 <xTaskIncrementTick+0xb2>
 800435e:	4a2e      	ldr	r2, [pc, #184]	; (8004418 <xTaskIncrementTick+0x164>)
 8004360:	687b      	ldr	r3, [r7, #4]
 8004362:	6013      	str	r3, [r2, #0]
 8004364:	e02e      	b.n	80043c4 <xTaskIncrementTick+0x110>
 8004366:	68bb      	ldr	r3, [r7, #8]
 8004368:	3304      	adds	r3, #4
 800436a:	4618      	mov	r0, r3
 800436c:	f7ff fc90 	bl	8003c90 <uxListRemove>
 8004370:	68bb      	ldr	r3, [r7, #8]
 8004372:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004374:	2b00      	cmp	r3, #0
 8004376:	d004      	beq.n	8004382 <xTaskIncrementTick+0xce>
 8004378:	68bb      	ldr	r3, [r7, #8]
 800437a:	3318      	adds	r3, #24
 800437c:	4618      	mov	r0, r3
 800437e:	f7ff fc87 	bl	8003c90 <uxListRemove>
 8004382:	68bb      	ldr	r3, [r7, #8]
 8004384:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004386:	2201      	movs	r2, #1
 8004388:	409a      	lsls	r2, r3
 800438a:	4b24      	ldr	r3, [pc, #144]	; (800441c <xTaskIncrementTick+0x168>)
 800438c:	681b      	ldr	r3, [r3, #0]
 800438e:	4313      	orrs	r3, r2
 8004390:	4a22      	ldr	r2, [pc, #136]	; (800441c <xTaskIncrementTick+0x168>)
 8004392:	6013      	str	r3, [r2, #0]
 8004394:	68bb      	ldr	r3, [r7, #8]
 8004396:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004398:	4613      	mov	r3, r2
 800439a:	009b      	lsls	r3, r3, #2
 800439c:	4413      	add	r3, r2
 800439e:	009b      	lsls	r3, r3, #2
 80043a0:	4a1f      	ldr	r2, [pc, #124]	; (8004420 <xTaskIncrementTick+0x16c>)
 80043a2:	441a      	add	r2, r3
 80043a4:	68bb      	ldr	r3, [r7, #8]
 80043a6:	3304      	adds	r3, #4
 80043a8:	4619      	mov	r1, r3
 80043aa:	4610      	mov	r0, r2
 80043ac:	f7ff fc15 	bl	8003bda <vListInsertEnd>
 80043b0:	68bb      	ldr	r3, [r7, #8]
 80043b2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80043b4:	4b1b      	ldr	r3, [pc, #108]	; (8004424 <xTaskIncrementTick+0x170>)
 80043b6:	681b      	ldr	r3, [r3, #0]
 80043b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80043ba:	429a      	cmp	r2, r3
 80043bc:	d3b4      	bcc.n	8004328 <xTaskIncrementTick+0x74>
 80043be:	2301      	movs	r3, #1
 80043c0:	617b      	str	r3, [r7, #20]
 80043c2:	e7b1      	b.n	8004328 <xTaskIncrementTick+0x74>
 80043c4:	4b17      	ldr	r3, [pc, #92]	; (8004424 <xTaskIncrementTick+0x170>)
 80043c6:	681b      	ldr	r3, [r3, #0]
 80043c8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80043ca:	4915      	ldr	r1, [pc, #84]	; (8004420 <xTaskIncrementTick+0x16c>)
 80043cc:	4613      	mov	r3, r2
 80043ce:	009b      	lsls	r3, r3, #2
 80043d0:	4413      	add	r3, r2
 80043d2:	009b      	lsls	r3, r3, #2
 80043d4:	440b      	add	r3, r1
 80043d6:	681b      	ldr	r3, [r3, #0]
 80043d8:	2b01      	cmp	r3, #1
 80043da:	d907      	bls.n	80043ec <xTaskIncrementTick+0x138>
 80043dc:	2301      	movs	r3, #1
 80043de:	617b      	str	r3, [r7, #20]
 80043e0:	e004      	b.n	80043ec <xTaskIncrementTick+0x138>
 80043e2:	4b11      	ldr	r3, [pc, #68]	; (8004428 <xTaskIncrementTick+0x174>)
 80043e4:	681b      	ldr	r3, [r3, #0]
 80043e6:	3301      	adds	r3, #1
 80043e8:	4a0f      	ldr	r2, [pc, #60]	; (8004428 <xTaskIncrementTick+0x174>)
 80043ea:	6013      	str	r3, [r2, #0]
 80043ec:	4b0f      	ldr	r3, [pc, #60]	; (800442c <xTaskIncrementTick+0x178>)
 80043ee:	681b      	ldr	r3, [r3, #0]
 80043f0:	2b00      	cmp	r3, #0
 80043f2:	d001      	beq.n	80043f8 <xTaskIncrementTick+0x144>
 80043f4:	2301      	movs	r3, #1
 80043f6:	617b      	str	r3, [r7, #20]
 80043f8:	697b      	ldr	r3, [r7, #20]
 80043fa:	4618      	mov	r0, r3
 80043fc:	3718      	adds	r7, #24
 80043fe:	46bd      	mov	sp, r7
 8004400:	bd80      	pop	{r7, pc}
 8004402:	bf00      	nop
 8004404:	20000910 	.word	0x20000910
 8004408:	200008ec 	.word	0x200008ec
 800440c:	200008a0 	.word	0x200008a0
 8004410:	200008a4 	.word	0x200008a4
 8004414:	20000900 	.word	0x20000900
 8004418:	20000908 	.word	0x20000908
 800441c:	200008f0 	.word	0x200008f0
 8004420:	200007ec 	.word	0x200007ec
 8004424:	200007e8 	.word	0x200007e8
 8004428:	200008f8 	.word	0x200008f8
 800442c:	200008fc 	.word	0x200008fc

08004430 <vTaskSwitchContext>:
 8004430:	b480      	push	{r7}
 8004432:	b087      	sub	sp, #28
 8004434:	af00      	add	r7, sp, #0
 8004436:	4b29      	ldr	r3, [pc, #164]	; (80044dc <vTaskSwitchContext+0xac>)
 8004438:	681b      	ldr	r3, [r3, #0]
 800443a:	2b00      	cmp	r3, #0
 800443c:	d003      	beq.n	8004446 <vTaskSwitchContext+0x16>
 800443e:	4b28      	ldr	r3, [pc, #160]	; (80044e0 <vTaskSwitchContext+0xb0>)
 8004440:	2201      	movs	r2, #1
 8004442:	601a      	str	r2, [r3, #0]
 8004444:	e044      	b.n	80044d0 <vTaskSwitchContext+0xa0>
 8004446:	4b26      	ldr	r3, [pc, #152]	; (80044e0 <vTaskSwitchContext+0xb0>)
 8004448:	2200      	movs	r2, #0
 800444a:	601a      	str	r2, [r3, #0]
 800444c:	4b25      	ldr	r3, [pc, #148]	; (80044e4 <vTaskSwitchContext+0xb4>)
 800444e:	681b      	ldr	r3, [r3, #0]
 8004450:	60fb      	str	r3, [r7, #12]
 8004452:	68fb      	ldr	r3, [r7, #12]
 8004454:	fab3 f383 	clz	r3, r3
 8004458:	72fb      	strb	r3, [r7, #11]
 800445a:	7afb      	ldrb	r3, [r7, #11]
 800445c:	f1c3 031f 	rsb	r3, r3, #31
 8004460:	617b      	str	r3, [r7, #20]
 8004462:	4921      	ldr	r1, [pc, #132]	; (80044e8 <vTaskSwitchContext+0xb8>)
 8004464:	697a      	ldr	r2, [r7, #20]
 8004466:	4613      	mov	r3, r2
 8004468:	009b      	lsls	r3, r3, #2
 800446a:	4413      	add	r3, r2
 800446c:	009b      	lsls	r3, r3, #2
 800446e:	440b      	add	r3, r1
 8004470:	681b      	ldr	r3, [r3, #0]
 8004472:	2b00      	cmp	r3, #0
 8004474:	d10a      	bne.n	800448c <vTaskSwitchContext+0x5c>
 8004476:	f04f 0350 	mov.w	r3, #80	; 0x50
 800447a:	f383 8811 	msr	BASEPRI, r3
 800447e:	f3bf 8f6f 	isb	sy
 8004482:	f3bf 8f4f 	dsb	sy
 8004486:	607b      	str	r3, [r7, #4]
 8004488:	bf00      	nop
 800448a:	e7fe      	b.n	800448a <vTaskSwitchContext+0x5a>
 800448c:	697a      	ldr	r2, [r7, #20]
 800448e:	4613      	mov	r3, r2
 8004490:	009b      	lsls	r3, r3, #2
 8004492:	4413      	add	r3, r2
 8004494:	009b      	lsls	r3, r3, #2
 8004496:	4a14      	ldr	r2, [pc, #80]	; (80044e8 <vTaskSwitchContext+0xb8>)
 8004498:	4413      	add	r3, r2
 800449a:	613b      	str	r3, [r7, #16]
 800449c:	693b      	ldr	r3, [r7, #16]
 800449e:	685b      	ldr	r3, [r3, #4]
 80044a0:	685a      	ldr	r2, [r3, #4]
 80044a2:	693b      	ldr	r3, [r7, #16]
 80044a4:	605a      	str	r2, [r3, #4]
 80044a6:	693b      	ldr	r3, [r7, #16]
 80044a8:	685a      	ldr	r2, [r3, #4]
 80044aa:	693b      	ldr	r3, [r7, #16]
 80044ac:	3308      	adds	r3, #8
 80044ae:	429a      	cmp	r2, r3
 80044b0:	d104      	bne.n	80044bc <vTaskSwitchContext+0x8c>
 80044b2:	693b      	ldr	r3, [r7, #16]
 80044b4:	685b      	ldr	r3, [r3, #4]
 80044b6:	685a      	ldr	r2, [r3, #4]
 80044b8:	693b      	ldr	r3, [r7, #16]
 80044ba:	605a      	str	r2, [r3, #4]
 80044bc:	693b      	ldr	r3, [r7, #16]
 80044be:	685b      	ldr	r3, [r3, #4]
 80044c0:	68db      	ldr	r3, [r3, #12]
 80044c2:	4a0a      	ldr	r2, [pc, #40]	; (80044ec <vTaskSwitchContext+0xbc>)
 80044c4:	6013      	str	r3, [r2, #0]
 80044c6:	4b09      	ldr	r3, [pc, #36]	; (80044ec <vTaskSwitchContext+0xbc>)
 80044c8:	681b      	ldr	r3, [r3, #0]
 80044ca:	334c      	adds	r3, #76	; 0x4c
 80044cc:	4a08      	ldr	r2, [pc, #32]	; (80044f0 <vTaskSwitchContext+0xc0>)
 80044ce:	6013      	str	r3, [r2, #0]
 80044d0:	bf00      	nop
 80044d2:	371c      	adds	r7, #28
 80044d4:	46bd      	mov	sp, r7
 80044d6:	bc80      	pop	{r7}
 80044d8:	4770      	bx	lr
 80044da:	bf00      	nop
 80044dc:	20000910 	.word	0x20000910
 80044e0:	200008fc 	.word	0x200008fc
 80044e4:	200008f0 	.word	0x200008f0
 80044e8:	200007ec 	.word	0x200007ec
 80044ec:	200007e8 	.word	0x200007e8
 80044f0:	200000a4 	.word	0x200000a4

080044f4 <prvIdleTask>:
 80044f4:	b580      	push	{r7, lr}
 80044f6:	b082      	sub	sp, #8
 80044f8:	af00      	add	r7, sp, #0
 80044fa:	6078      	str	r0, [r7, #4]
 80044fc:	f000 f852 	bl	80045a4 <prvCheckTasksWaitingTermination>
 8004500:	4b06      	ldr	r3, [pc, #24]	; (800451c <prvIdleTask+0x28>)
 8004502:	681b      	ldr	r3, [r3, #0]
 8004504:	2b01      	cmp	r3, #1
 8004506:	d9f9      	bls.n	80044fc <prvIdleTask+0x8>
 8004508:	4b05      	ldr	r3, [pc, #20]	; (8004520 <prvIdleTask+0x2c>)
 800450a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800450e:	601a      	str	r2, [r3, #0]
 8004510:	f3bf 8f4f 	dsb	sy
 8004514:	f3bf 8f6f 	isb	sy
 8004518:	e7f0      	b.n	80044fc <prvIdleTask+0x8>
 800451a:	bf00      	nop
 800451c:	200007ec 	.word	0x200007ec
 8004520:	e000ed04 	.word	0xe000ed04

08004524 <prvInitialiseTaskLists>:
 8004524:	b580      	push	{r7, lr}
 8004526:	b082      	sub	sp, #8
 8004528:	af00      	add	r7, sp, #0
 800452a:	2300      	movs	r3, #0
 800452c:	607b      	str	r3, [r7, #4]
 800452e:	e00c      	b.n	800454a <prvInitialiseTaskLists+0x26>
 8004530:	687a      	ldr	r2, [r7, #4]
 8004532:	4613      	mov	r3, r2
 8004534:	009b      	lsls	r3, r3, #2
 8004536:	4413      	add	r3, r2
 8004538:	009b      	lsls	r3, r3, #2
 800453a:	4a12      	ldr	r2, [pc, #72]	; (8004584 <prvInitialiseTaskLists+0x60>)
 800453c:	4413      	add	r3, r2
 800453e:	4618      	mov	r0, r3
 8004540:	f7ff fb20 	bl	8003b84 <vListInitialise>
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	3301      	adds	r3, #1
 8004548:	607b      	str	r3, [r7, #4]
 800454a:	687b      	ldr	r3, [r7, #4]
 800454c:	2b06      	cmp	r3, #6
 800454e:	d9ef      	bls.n	8004530 <prvInitialiseTaskLists+0xc>
 8004550:	480d      	ldr	r0, [pc, #52]	; (8004588 <prvInitialiseTaskLists+0x64>)
 8004552:	f7ff fb17 	bl	8003b84 <vListInitialise>
 8004556:	480d      	ldr	r0, [pc, #52]	; (800458c <prvInitialiseTaskLists+0x68>)
 8004558:	f7ff fb14 	bl	8003b84 <vListInitialise>
 800455c:	480c      	ldr	r0, [pc, #48]	; (8004590 <prvInitialiseTaskLists+0x6c>)
 800455e:	f7ff fb11 	bl	8003b84 <vListInitialise>
 8004562:	480c      	ldr	r0, [pc, #48]	; (8004594 <prvInitialiseTaskLists+0x70>)
 8004564:	f7ff fb0e 	bl	8003b84 <vListInitialise>
 8004568:	480b      	ldr	r0, [pc, #44]	; (8004598 <prvInitialiseTaskLists+0x74>)
 800456a:	f7ff fb0b 	bl	8003b84 <vListInitialise>
 800456e:	4b0b      	ldr	r3, [pc, #44]	; (800459c <prvInitialiseTaskLists+0x78>)
 8004570:	4a05      	ldr	r2, [pc, #20]	; (8004588 <prvInitialiseTaskLists+0x64>)
 8004572:	601a      	str	r2, [r3, #0]
 8004574:	4b0a      	ldr	r3, [pc, #40]	; (80045a0 <prvInitialiseTaskLists+0x7c>)
 8004576:	4a05      	ldr	r2, [pc, #20]	; (800458c <prvInitialiseTaskLists+0x68>)
 8004578:	601a      	str	r2, [r3, #0]
 800457a:	bf00      	nop
 800457c:	3708      	adds	r7, #8
 800457e:	46bd      	mov	sp, r7
 8004580:	bd80      	pop	{r7, pc}
 8004582:	bf00      	nop
 8004584:	200007ec 	.word	0x200007ec
 8004588:	20000878 	.word	0x20000878
 800458c:	2000088c 	.word	0x2000088c
 8004590:	200008a8 	.word	0x200008a8
 8004594:	200008bc 	.word	0x200008bc
 8004598:	200008d4 	.word	0x200008d4
 800459c:	200008a0 	.word	0x200008a0
 80045a0:	200008a4 	.word	0x200008a4

080045a4 <prvCheckTasksWaitingTermination>:
 80045a4:	b580      	push	{r7, lr}
 80045a6:	b082      	sub	sp, #8
 80045a8:	af00      	add	r7, sp, #0
 80045aa:	e019      	b.n	80045e0 <prvCheckTasksWaitingTermination+0x3c>
 80045ac:	f000 f9f6 	bl	800499c <vPortEnterCritical>
 80045b0:	4b10      	ldr	r3, [pc, #64]	; (80045f4 <prvCheckTasksWaitingTermination+0x50>)
 80045b2:	68db      	ldr	r3, [r3, #12]
 80045b4:	68db      	ldr	r3, [r3, #12]
 80045b6:	607b      	str	r3, [r7, #4]
 80045b8:	687b      	ldr	r3, [r7, #4]
 80045ba:	3304      	adds	r3, #4
 80045bc:	4618      	mov	r0, r3
 80045be:	f7ff fb67 	bl	8003c90 <uxListRemove>
 80045c2:	4b0d      	ldr	r3, [pc, #52]	; (80045f8 <prvCheckTasksWaitingTermination+0x54>)
 80045c4:	681b      	ldr	r3, [r3, #0]
 80045c6:	3b01      	subs	r3, #1
 80045c8:	4a0b      	ldr	r2, [pc, #44]	; (80045f8 <prvCheckTasksWaitingTermination+0x54>)
 80045ca:	6013      	str	r3, [r2, #0]
 80045cc:	4b0b      	ldr	r3, [pc, #44]	; (80045fc <prvCheckTasksWaitingTermination+0x58>)
 80045ce:	681b      	ldr	r3, [r3, #0]
 80045d0:	3b01      	subs	r3, #1
 80045d2:	4a0a      	ldr	r2, [pc, #40]	; (80045fc <prvCheckTasksWaitingTermination+0x58>)
 80045d4:	6013      	str	r3, [r2, #0]
 80045d6:	f000 fa11 	bl	80049fc <vPortExitCritical>
 80045da:	6878      	ldr	r0, [r7, #4]
 80045dc:	f000 f810 	bl	8004600 <prvDeleteTCB>
 80045e0:	4b06      	ldr	r3, [pc, #24]	; (80045fc <prvCheckTasksWaitingTermination+0x58>)
 80045e2:	681b      	ldr	r3, [r3, #0]
 80045e4:	2b00      	cmp	r3, #0
 80045e6:	d1e1      	bne.n	80045ac <prvCheckTasksWaitingTermination+0x8>
 80045e8:	bf00      	nop
 80045ea:	bf00      	nop
 80045ec:	3708      	adds	r7, #8
 80045ee:	46bd      	mov	sp, r7
 80045f0:	bd80      	pop	{r7, pc}
 80045f2:	bf00      	nop
 80045f4:	200008bc 	.word	0x200008bc
 80045f8:	200008e8 	.word	0x200008e8
 80045fc:	200008d0 	.word	0x200008d0

08004600 <prvDeleteTCB>:
 8004600:	b580      	push	{r7, lr}
 8004602:	b084      	sub	sp, #16
 8004604:	af00      	add	r7, sp, #0
 8004606:	6078      	str	r0, [r7, #4]
 8004608:	687b      	ldr	r3, [r7, #4]
 800460a:	334c      	adds	r3, #76	; 0x4c
 800460c:	4618      	mov	r0, r3
 800460e:	f000 fc67 	bl	8004ee0 <_reclaim_reent>
 8004612:	687b      	ldr	r3, [r7, #4]
 8004614:	f893 309d 	ldrb.w	r3, [r3, #157]	; 0x9d
 8004618:	2b00      	cmp	r3, #0
 800461a:	d108      	bne.n	800462e <prvDeleteTCB+0x2e>
 800461c:	687b      	ldr	r3, [r7, #4]
 800461e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004620:	4618      	mov	r0, r3
 8004622:	f000 fb41 	bl	8004ca8 <vPortFree>
 8004626:	6878      	ldr	r0, [r7, #4]
 8004628:	f000 fb3e 	bl	8004ca8 <vPortFree>
 800462c:	e018      	b.n	8004660 <prvDeleteTCB+0x60>
 800462e:	687b      	ldr	r3, [r7, #4]
 8004630:	f893 309d 	ldrb.w	r3, [r3, #157]	; 0x9d
 8004634:	2b01      	cmp	r3, #1
 8004636:	d103      	bne.n	8004640 <prvDeleteTCB+0x40>
 8004638:	6878      	ldr	r0, [r7, #4]
 800463a:	f000 fb35 	bl	8004ca8 <vPortFree>
 800463e:	e00f      	b.n	8004660 <prvDeleteTCB+0x60>
 8004640:	687b      	ldr	r3, [r7, #4]
 8004642:	f893 309d 	ldrb.w	r3, [r3, #157]	; 0x9d
 8004646:	2b02      	cmp	r3, #2
 8004648:	d00a      	beq.n	8004660 <prvDeleteTCB+0x60>
 800464a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800464e:	f383 8811 	msr	BASEPRI, r3
 8004652:	f3bf 8f6f 	isb	sy
 8004656:	f3bf 8f4f 	dsb	sy
 800465a:	60fb      	str	r3, [r7, #12]
 800465c:	bf00      	nop
 800465e:	e7fe      	b.n	800465e <prvDeleteTCB+0x5e>
 8004660:	bf00      	nop
 8004662:	3710      	adds	r7, #16
 8004664:	46bd      	mov	sp, r7
 8004666:	bd80      	pop	{r7, pc}

08004668 <prvResetNextTaskUnblockTime>:
 8004668:	b480      	push	{r7}
 800466a:	b083      	sub	sp, #12
 800466c:	af00      	add	r7, sp, #0
 800466e:	4b0e      	ldr	r3, [pc, #56]	; (80046a8 <prvResetNextTaskUnblockTime+0x40>)
 8004670:	681b      	ldr	r3, [r3, #0]
 8004672:	681b      	ldr	r3, [r3, #0]
 8004674:	2b00      	cmp	r3, #0
 8004676:	d101      	bne.n	800467c <prvResetNextTaskUnblockTime+0x14>
 8004678:	2301      	movs	r3, #1
 800467a:	e000      	b.n	800467e <prvResetNextTaskUnblockTime+0x16>
 800467c:	2300      	movs	r3, #0
 800467e:	2b00      	cmp	r3, #0
 8004680:	d004      	beq.n	800468c <prvResetNextTaskUnblockTime+0x24>
 8004682:	4b0a      	ldr	r3, [pc, #40]	; (80046ac <prvResetNextTaskUnblockTime+0x44>)
 8004684:	f04f 32ff 	mov.w	r2, #4294967295
 8004688:	601a      	str	r2, [r3, #0]
 800468a:	e008      	b.n	800469e <prvResetNextTaskUnblockTime+0x36>
 800468c:	4b06      	ldr	r3, [pc, #24]	; (80046a8 <prvResetNextTaskUnblockTime+0x40>)
 800468e:	681b      	ldr	r3, [r3, #0]
 8004690:	68db      	ldr	r3, [r3, #12]
 8004692:	68db      	ldr	r3, [r3, #12]
 8004694:	607b      	str	r3, [r7, #4]
 8004696:	687b      	ldr	r3, [r7, #4]
 8004698:	685b      	ldr	r3, [r3, #4]
 800469a:	4a04      	ldr	r2, [pc, #16]	; (80046ac <prvResetNextTaskUnblockTime+0x44>)
 800469c:	6013      	str	r3, [r2, #0]
 800469e:	bf00      	nop
 80046a0:	370c      	adds	r7, #12
 80046a2:	46bd      	mov	sp, r7
 80046a4:	bc80      	pop	{r7}
 80046a6:	4770      	bx	lr
 80046a8:	200008a0 	.word	0x200008a0
 80046ac:	20000908 	.word	0x20000908

080046b0 <xTaskGetSchedulerState>:
 80046b0:	b480      	push	{r7}
 80046b2:	b083      	sub	sp, #12
 80046b4:	af00      	add	r7, sp, #0
 80046b6:	4b0b      	ldr	r3, [pc, #44]	; (80046e4 <xTaskGetSchedulerState+0x34>)
 80046b8:	681b      	ldr	r3, [r3, #0]
 80046ba:	2b00      	cmp	r3, #0
 80046bc:	d102      	bne.n	80046c4 <xTaskGetSchedulerState+0x14>
 80046be:	2301      	movs	r3, #1
 80046c0:	607b      	str	r3, [r7, #4]
 80046c2:	e008      	b.n	80046d6 <xTaskGetSchedulerState+0x26>
 80046c4:	4b08      	ldr	r3, [pc, #32]	; (80046e8 <xTaskGetSchedulerState+0x38>)
 80046c6:	681b      	ldr	r3, [r3, #0]
 80046c8:	2b00      	cmp	r3, #0
 80046ca:	d102      	bne.n	80046d2 <xTaskGetSchedulerState+0x22>
 80046cc:	2302      	movs	r3, #2
 80046ce:	607b      	str	r3, [r7, #4]
 80046d0:	e001      	b.n	80046d6 <xTaskGetSchedulerState+0x26>
 80046d2:	2300      	movs	r3, #0
 80046d4:	607b      	str	r3, [r7, #4]
 80046d6:	687b      	ldr	r3, [r7, #4]
 80046d8:	4618      	mov	r0, r3
 80046da:	370c      	adds	r7, #12
 80046dc:	46bd      	mov	sp, r7
 80046de:	bc80      	pop	{r7}
 80046e0:	4770      	bx	lr
 80046e2:	bf00      	nop
 80046e4:	200008f4 	.word	0x200008f4
 80046e8:	20000910 	.word	0x20000910

080046ec <prvAddCurrentTaskToDelayedList>:
 80046ec:	b580      	push	{r7, lr}
 80046ee:	b084      	sub	sp, #16
 80046f0:	af00      	add	r7, sp, #0
 80046f2:	6078      	str	r0, [r7, #4]
 80046f4:	6039      	str	r1, [r7, #0]
 80046f6:	4b29      	ldr	r3, [pc, #164]	; (800479c <prvAddCurrentTaskToDelayedList+0xb0>)
 80046f8:	681b      	ldr	r3, [r3, #0]
 80046fa:	60fb      	str	r3, [r7, #12]
 80046fc:	4b28      	ldr	r3, [pc, #160]	; (80047a0 <prvAddCurrentTaskToDelayedList+0xb4>)
 80046fe:	681b      	ldr	r3, [r3, #0]
 8004700:	3304      	adds	r3, #4
 8004702:	4618      	mov	r0, r3
 8004704:	f7ff fac4 	bl	8003c90 <uxListRemove>
 8004708:	4603      	mov	r3, r0
 800470a:	2b00      	cmp	r3, #0
 800470c:	d10b      	bne.n	8004726 <prvAddCurrentTaskToDelayedList+0x3a>
 800470e:	4b24      	ldr	r3, [pc, #144]	; (80047a0 <prvAddCurrentTaskToDelayedList+0xb4>)
 8004710:	681b      	ldr	r3, [r3, #0]
 8004712:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004714:	2201      	movs	r2, #1
 8004716:	fa02 f303 	lsl.w	r3, r2, r3
 800471a:	43da      	mvns	r2, r3
 800471c:	4b21      	ldr	r3, [pc, #132]	; (80047a4 <prvAddCurrentTaskToDelayedList+0xb8>)
 800471e:	681b      	ldr	r3, [r3, #0]
 8004720:	4013      	ands	r3, r2
 8004722:	4a20      	ldr	r2, [pc, #128]	; (80047a4 <prvAddCurrentTaskToDelayedList+0xb8>)
 8004724:	6013      	str	r3, [r2, #0]
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	f1b3 3fff 	cmp.w	r3, #4294967295
 800472c:	d10a      	bne.n	8004744 <prvAddCurrentTaskToDelayedList+0x58>
 800472e:	683b      	ldr	r3, [r7, #0]
 8004730:	2b00      	cmp	r3, #0
 8004732:	d007      	beq.n	8004744 <prvAddCurrentTaskToDelayedList+0x58>
 8004734:	4b1a      	ldr	r3, [pc, #104]	; (80047a0 <prvAddCurrentTaskToDelayedList+0xb4>)
 8004736:	681b      	ldr	r3, [r3, #0]
 8004738:	3304      	adds	r3, #4
 800473a:	4619      	mov	r1, r3
 800473c:	481a      	ldr	r0, [pc, #104]	; (80047a8 <prvAddCurrentTaskToDelayedList+0xbc>)
 800473e:	f7ff fa4c 	bl	8003bda <vListInsertEnd>
 8004742:	e026      	b.n	8004792 <prvAddCurrentTaskToDelayedList+0xa6>
 8004744:	68fa      	ldr	r2, [r7, #12]
 8004746:	687b      	ldr	r3, [r7, #4]
 8004748:	4413      	add	r3, r2
 800474a:	60bb      	str	r3, [r7, #8]
 800474c:	4b14      	ldr	r3, [pc, #80]	; (80047a0 <prvAddCurrentTaskToDelayedList+0xb4>)
 800474e:	681b      	ldr	r3, [r3, #0]
 8004750:	68ba      	ldr	r2, [r7, #8]
 8004752:	605a      	str	r2, [r3, #4]
 8004754:	68ba      	ldr	r2, [r7, #8]
 8004756:	68fb      	ldr	r3, [r7, #12]
 8004758:	429a      	cmp	r2, r3
 800475a:	d209      	bcs.n	8004770 <prvAddCurrentTaskToDelayedList+0x84>
 800475c:	4b13      	ldr	r3, [pc, #76]	; (80047ac <prvAddCurrentTaskToDelayedList+0xc0>)
 800475e:	681a      	ldr	r2, [r3, #0]
 8004760:	4b0f      	ldr	r3, [pc, #60]	; (80047a0 <prvAddCurrentTaskToDelayedList+0xb4>)
 8004762:	681b      	ldr	r3, [r3, #0]
 8004764:	3304      	adds	r3, #4
 8004766:	4619      	mov	r1, r3
 8004768:	4610      	mov	r0, r2
 800476a:	f7ff fa59 	bl	8003c20 <vListInsert>
 800476e:	e010      	b.n	8004792 <prvAddCurrentTaskToDelayedList+0xa6>
 8004770:	4b0f      	ldr	r3, [pc, #60]	; (80047b0 <prvAddCurrentTaskToDelayedList+0xc4>)
 8004772:	681a      	ldr	r2, [r3, #0]
 8004774:	4b0a      	ldr	r3, [pc, #40]	; (80047a0 <prvAddCurrentTaskToDelayedList+0xb4>)
 8004776:	681b      	ldr	r3, [r3, #0]
 8004778:	3304      	adds	r3, #4
 800477a:	4619      	mov	r1, r3
 800477c:	4610      	mov	r0, r2
 800477e:	f7ff fa4f 	bl	8003c20 <vListInsert>
 8004782:	4b0c      	ldr	r3, [pc, #48]	; (80047b4 <prvAddCurrentTaskToDelayedList+0xc8>)
 8004784:	681b      	ldr	r3, [r3, #0]
 8004786:	68ba      	ldr	r2, [r7, #8]
 8004788:	429a      	cmp	r2, r3
 800478a:	d202      	bcs.n	8004792 <prvAddCurrentTaskToDelayedList+0xa6>
 800478c:	4a09      	ldr	r2, [pc, #36]	; (80047b4 <prvAddCurrentTaskToDelayedList+0xc8>)
 800478e:	68bb      	ldr	r3, [r7, #8]
 8004790:	6013      	str	r3, [r2, #0]
 8004792:	bf00      	nop
 8004794:	3710      	adds	r7, #16
 8004796:	46bd      	mov	sp, r7
 8004798:	bd80      	pop	{r7, pc}
 800479a:	bf00      	nop
 800479c:	200008ec 	.word	0x200008ec
 80047a0:	200007e8 	.word	0x200007e8
 80047a4:	200008f0 	.word	0x200008f0
 80047a8:	200008d4 	.word	0x200008d4
 80047ac:	200008a4 	.word	0x200008a4
 80047b0:	200008a0 	.word	0x200008a0
 80047b4:	20000908 	.word	0x20000908

080047b8 <pxPortInitialiseStack>:
 80047b8:	b480      	push	{r7}
 80047ba:	b085      	sub	sp, #20
 80047bc:	af00      	add	r7, sp, #0
 80047be:	60f8      	str	r0, [r7, #12]
 80047c0:	60b9      	str	r1, [r7, #8]
 80047c2:	607a      	str	r2, [r7, #4]
 80047c4:	68fb      	ldr	r3, [r7, #12]
 80047c6:	3b04      	subs	r3, #4
 80047c8:	60fb      	str	r3, [r7, #12]
 80047ca:	68fb      	ldr	r3, [r7, #12]
 80047cc:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80047d0:	601a      	str	r2, [r3, #0]
 80047d2:	68fb      	ldr	r3, [r7, #12]
 80047d4:	3b04      	subs	r3, #4
 80047d6:	60fb      	str	r3, [r7, #12]
 80047d8:	68bb      	ldr	r3, [r7, #8]
 80047da:	f023 0201 	bic.w	r2, r3, #1
 80047de:	68fb      	ldr	r3, [r7, #12]
 80047e0:	601a      	str	r2, [r3, #0]
 80047e2:	68fb      	ldr	r3, [r7, #12]
 80047e4:	3b04      	subs	r3, #4
 80047e6:	60fb      	str	r3, [r7, #12]
 80047e8:	4a08      	ldr	r2, [pc, #32]	; (800480c <pxPortInitialiseStack+0x54>)
 80047ea:	68fb      	ldr	r3, [r7, #12]
 80047ec:	601a      	str	r2, [r3, #0]
 80047ee:	68fb      	ldr	r3, [r7, #12]
 80047f0:	3b14      	subs	r3, #20
 80047f2:	60fb      	str	r3, [r7, #12]
 80047f4:	687a      	ldr	r2, [r7, #4]
 80047f6:	68fb      	ldr	r3, [r7, #12]
 80047f8:	601a      	str	r2, [r3, #0]
 80047fa:	68fb      	ldr	r3, [r7, #12]
 80047fc:	3b20      	subs	r3, #32
 80047fe:	60fb      	str	r3, [r7, #12]
 8004800:	68fb      	ldr	r3, [r7, #12]
 8004802:	4618      	mov	r0, r3
 8004804:	3714      	adds	r7, #20
 8004806:	46bd      	mov	sp, r7
 8004808:	bc80      	pop	{r7}
 800480a:	4770      	bx	lr
 800480c:	08004811 	.word	0x08004811

08004810 <prvTaskExitError>:
 8004810:	b480      	push	{r7}
 8004812:	b085      	sub	sp, #20
 8004814:	af00      	add	r7, sp, #0
 8004816:	2300      	movs	r3, #0
 8004818:	607b      	str	r3, [r7, #4]
 800481a:	4b12      	ldr	r3, [pc, #72]	; (8004864 <prvTaskExitError+0x54>)
 800481c:	681b      	ldr	r3, [r3, #0]
 800481e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004822:	d00a      	beq.n	800483a <prvTaskExitError+0x2a>
 8004824:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004828:	f383 8811 	msr	BASEPRI, r3
 800482c:	f3bf 8f6f 	isb	sy
 8004830:	f3bf 8f4f 	dsb	sy
 8004834:	60fb      	str	r3, [r7, #12]
 8004836:	bf00      	nop
 8004838:	e7fe      	b.n	8004838 <prvTaskExitError+0x28>
 800483a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800483e:	f383 8811 	msr	BASEPRI, r3
 8004842:	f3bf 8f6f 	isb	sy
 8004846:	f3bf 8f4f 	dsb	sy
 800484a:	60bb      	str	r3, [r7, #8]
 800484c:	bf00      	nop
 800484e:	bf00      	nop
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	2b00      	cmp	r3, #0
 8004854:	d0fc      	beq.n	8004850 <prvTaskExitError+0x40>
 8004856:	bf00      	nop
 8004858:	bf00      	nop
 800485a:	3714      	adds	r7, #20
 800485c:	46bd      	mov	sp, r7
 800485e:	bc80      	pop	{r7}
 8004860:	4770      	bx	lr
 8004862:	bf00      	nop
 8004864:	20000054 	.word	0x20000054
	...

08004870 <SVC_Handler>:
 8004870:	4b07      	ldr	r3, [pc, #28]	; (8004890 <pxCurrentTCBConst2>)
 8004872:	6819      	ldr	r1, [r3, #0]
 8004874:	6808      	ldr	r0, [r1, #0]
 8004876:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 800487a:	f380 8809 	msr	PSP, r0
 800487e:	f3bf 8f6f 	isb	sy
 8004882:	f04f 0000 	mov.w	r0, #0
 8004886:	f380 8811 	msr	BASEPRI, r0
 800488a:	f04e 0e0d 	orr.w	lr, lr, #13
 800488e:	4770      	bx	lr

08004890 <pxCurrentTCBConst2>:
 8004890:	200007e8 	.word	0x200007e8
 8004894:	bf00      	nop
 8004896:	bf00      	nop

08004898 <prvPortStartFirstTask>:
 8004898:	4806      	ldr	r0, [pc, #24]	; (80048b4 <prvPortStartFirstTask+0x1c>)
 800489a:	6800      	ldr	r0, [r0, #0]
 800489c:	6800      	ldr	r0, [r0, #0]
 800489e:	f380 8808 	msr	MSP, r0
 80048a2:	b662      	cpsie	i
 80048a4:	b661      	cpsie	f
 80048a6:	f3bf 8f4f 	dsb	sy
 80048aa:	f3bf 8f6f 	isb	sy
 80048ae:	df00      	svc	0
 80048b0:	bf00      	nop
 80048b2:	bf00      	nop
 80048b4:	e000ed08 	.word	0xe000ed08

080048b8 <xPortStartScheduler>:
 80048b8:	b580      	push	{r7, lr}
 80048ba:	b084      	sub	sp, #16
 80048bc:	af00      	add	r7, sp, #0
 80048be:	4b32      	ldr	r3, [pc, #200]	; (8004988 <xPortStartScheduler+0xd0>)
 80048c0:	60fb      	str	r3, [r7, #12]
 80048c2:	68fb      	ldr	r3, [r7, #12]
 80048c4:	781b      	ldrb	r3, [r3, #0]
 80048c6:	b2db      	uxtb	r3, r3
 80048c8:	607b      	str	r3, [r7, #4]
 80048ca:	68fb      	ldr	r3, [r7, #12]
 80048cc:	22ff      	movs	r2, #255	; 0xff
 80048ce:	701a      	strb	r2, [r3, #0]
 80048d0:	68fb      	ldr	r3, [r7, #12]
 80048d2:	781b      	ldrb	r3, [r3, #0]
 80048d4:	b2db      	uxtb	r3, r3
 80048d6:	70fb      	strb	r3, [r7, #3]
 80048d8:	78fb      	ldrb	r3, [r7, #3]
 80048da:	b2db      	uxtb	r3, r3
 80048dc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80048e0:	b2da      	uxtb	r2, r3
 80048e2:	4b2a      	ldr	r3, [pc, #168]	; (800498c <xPortStartScheduler+0xd4>)
 80048e4:	701a      	strb	r2, [r3, #0]
 80048e6:	4b2a      	ldr	r3, [pc, #168]	; (8004990 <xPortStartScheduler+0xd8>)
 80048e8:	2207      	movs	r2, #7
 80048ea:	601a      	str	r2, [r3, #0]
 80048ec:	e009      	b.n	8004902 <xPortStartScheduler+0x4a>
 80048ee:	4b28      	ldr	r3, [pc, #160]	; (8004990 <xPortStartScheduler+0xd8>)
 80048f0:	681b      	ldr	r3, [r3, #0]
 80048f2:	3b01      	subs	r3, #1
 80048f4:	4a26      	ldr	r2, [pc, #152]	; (8004990 <xPortStartScheduler+0xd8>)
 80048f6:	6013      	str	r3, [r2, #0]
 80048f8:	78fb      	ldrb	r3, [r7, #3]
 80048fa:	b2db      	uxtb	r3, r3
 80048fc:	005b      	lsls	r3, r3, #1
 80048fe:	b2db      	uxtb	r3, r3
 8004900:	70fb      	strb	r3, [r7, #3]
 8004902:	78fb      	ldrb	r3, [r7, #3]
 8004904:	b2db      	uxtb	r3, r3
 8004906:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800490a:	2b80      	cmp	r3, #128	; 0x80
 800490c:	d0ef      	beq.n	80048ee <xPortStartScheduler+0x36>
 800490e:	4b20      	ldr	r3, [pc, #128]	; (8004990 <xPortStartScheduler+0xd8>)
 8004910:	681b      	ldr	r3, [r3, #0]
 8004912:	f1c3 0307 	rsb	r3, r3, #7
 8004916:	2b04      	cmp	r3, #4
 8004918:	d00a      	beq.n	8004930 <xPortStartScheduler+0x78>
 800491a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800491e:	f383 8811 	msr	BASEPRI, r3
 8004922:	f3bf 8f6f 	isb	sy
 8004926:	f3bf 8f4f 	dsb	sy
 800492a:	60bb      	str	r3, [r7, #8]
 800492c:	bf00      	nop
 800492e:	e7fe      	b.n	800492e <xPortStartScheduler+0x76>
 8004930:	4b17      	ldr	r3, [pc, #92]	; (8004990 <xPortStartScheduler+0xd8>)
 8004932:	681b      	ldr	r3, [r3, #0]
 8004934:	021b      	lsls	r3, r3, #8
 8004936:	4a16      	ldr	r2, [pc, #88]	; (8004990 <xPortStartScheduler+0xd8>)
 8004938:	6013      	str	r3, [r2, #0]
 800493a:	4b15      	ldr	r3, [pc, #84]	; (8004990 <xPortStartScheduler+0xd8>)
 800493c:	681b      	ldr	r3, [r3, #0]
 800493e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8004942:	4a13      	ldr	r2, [pc, #76]	; (8004990 <xPortStartScheduler+0xd8>)
 8004944:	6013      	str	r3, [r2, #0]
 8004946:	687b      	ldr	r3, [r7, #4]
 8004948:	b2da      	uxtb	r2, r3
 800494a:	68fb      	ldr	r3, [r7, #12]
 800494c:	701a      	strb	r2, [r3, #0]
 800494e:	4b11      	ldr	r3, [pc, #68]	; (8004994 <xPortStartScheduler+0xdc>)
 8004950:	681b      	ldr	r3, [r3, #0]
 8004952:	4a10      	ldr	r2, [pc, #64]	; (8004994 <xPortStartScheduler+0xdc>)
 8004954:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8004958:	6013      	str	r3, [r2, #0]
 800495a:	4b0e      	ldr	r3, [pc, #56]	; (8004994 <xPortStartScheduler+0xdc>)
 800495c:	681b      	ldr	r3, [r3, #0]
 800495e:	4a0d      	ldr	r2, [pc, #52]	; (8004994 <xPortStartScheduler+0xdc>)
 8004960:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8004964:	6013      	str	r3, [r2, #0]
 8004966:	f000 f8b9 	bl	8004adc <vPortSetupTimerInterrupt>
 800496a:	4b0b      	ldr	r3, [pc, #44]	; (8004998 <xPortStartScheduler+0xe0>)
 800496c:	2200      	movs	r2, #0
 800496e:	601a      	str	r2, [r3, #0]
 8004970:	f7ff ff92 	bl	8004898 <prvPortStartFirstTask>
 8004974:	f7ff fd5c 	bl	8004430 <vTaskSwitchContext>
 8004978:	f7ff ff4a 	bl	8004810 <prvTaskExitError>
 800497c:	2300      	movs	r3, #0
 800497e:	4618      	mov	r0, r3
 8004980:	3710      	adds	r7, #16
 8004982:	46bd      	mov	sp, r7
 8004984:	bd80      	pop	{r7, pc}
 8004986:	bf00      	nop
 8004988:	e000e400 	.word	0xe000e400
 800498c:	20000914 	.word	0x20000914
 8004990:	20000918 	.word	0x20000918
 8004994:	e000ed20 	.word	0xe000ed20
 8004998:	20000054 	.word	0x20000054

0800499c <vPortEnterCritical>:
 800499c:	b480      	push	{r7}
 800499e:	b083      	sub	sp, #12
 80049a0:	af00      	add	r7, sp, #0
 80049a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80049a6:	f383 8811 	msr	BASEPRI, r3
 80049aa:	f3bf 8f6f 	isb	sy
 80049ae:	f3bf 8f4f 	dsb	sy
 80049b2:	607b      	str	r3, [r7, #4]
 80049b4:	bf00      	nop
 80049b6:	4b0f      	ldr	r3, [pc, #60]	; (80049f4 <vPortEnterCritical+0x58>)
 80049b8:	681b      	ldr	r3, [r3, #0]
 80049ba:	3301      	adds	r3, #1
 80049bc:	4a0d      	ldr	r2, [pc, #52]	; (80049f4 <vPortEnterCritical+0x58>)
 80049be:	6013      	str	r3, [r2, #0]
 80049c0:	4b0c      	ldr	r3, [pc, #48]	; (80049f4 <vPortEnterCritical+0x58>)
 80049c2:	681b      	ldr	r3, [r3, #0]
 80049c4:	2b01      	cmp	r3, #1
 80049c6:	d10f      	bne.n	80049e8 <vPortEnterCritical+0x4c>
 80049c8:	4b0b      	ldr	r3, [pc, #44]	; (80049f8 <vPortEnterCritical+0x5c>)
 80049ca:	681b      	ldr	r3, [r3, #0]
 80049cc:	b2db      	uxtb	r3, r3
 80049ce:	2b00      	cmp	r3, #0
 80049d0:	d00a      	beq.n	80049e8 <vPortEnterCritical+0x4c>
 80049d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80049d6:	f383 8811 	msr	BASEPRI, r3
 80049da:	f3bf 8f6f 	isb	sy
 80049de:	f3bf 8f4f 	dsb	sy
 80049e2:	603b      	str	r3, [r7, #0]
 80049e4:	bf00      	nop
 80049e6:	e7fe      	b.n	80049e6 <vPortEnterCritical+0x4a>
 80049e8:	bf00      	nop
 80049ea:	370c      	adds	r7, #12
 80049ec:	46bd      	mov	sp, r7
 80049ee:	bc80      	pop	{r7}
 80049f0:	4770      	bx	lr
 80049f2:	bf00      	nop
 80049f4:	20000054 	.word	0x20000054
 80049f8:	e000ed04 	.word	0xe000ed04

080049fc <vPortExitCritical>:
 80049fc:	b480      	push	{r7}
 80049fe:	b083      	sub	sp, #12
 8004a00:	af00      	add	r7, sp, #0
 8004a02:	4b11      	ldr	r3, [pc, #68]	; (8004a48 <vPortExitCritical+0x4c>)
 8004a04:	681b      	ldr	r3, [r3, #0]
 8004a06:	2b00      	cmp	r3, #0
 8004a08:	d10a      	bne.n	8004a20 <vPortExitCritical+0x24>
 8004a0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004a0e:	f383 8811 	msr	BASEPRI, r3
 8004a12:	f3bf 8f6f 	isb	sy
 8004a16:	f3bf 8f4f 	dsb	sy
 8004a1a:	607b      	str	r3, [r7, #4]
 8004a1c:	bf00      	nop
 8004a1e:	e7fe      	b.n	8004a1e <vPortExitCritical+0x22>
 8004a20:	4b09      	ldr	r3, [pc, #36]	; (8004a48 <vPortExitCritical+0x4c>)
 8004a22:	681b      	ldr	r3, [r3, #0]
 8004a24:	3b01      	subs	r3, #1
 8004a26:	4a08      	ldr	r2, [pc, #32]	; (8004a48 <vPortExitCritical+0x4c>)
 8004a28:	6013      	str	r3, [r2, #0]
 8004a2a:	4b07      	ldr	r3, [pc, #28]	; (8004a48 <vPortExitCritical+0x4c>)
 8004a2c:	681b      	ldr	r3, [r3, #0]
 8004a2e:	2b00      	cmp	r3, #0
 8004a30:	d105      	bne.n	8004a3e <vPortExitCritical+0x42>
 8004a32:	2300      	movs	r3, #0
 8004a34:	603b      	str	r3, [r7, #0]
 8004a36:	683b      	ldr	r3, [r7, #0]
 8004a38:	f383 8811 	msr	BASEPRI, r3
 8004a3c:	bf00      	nop
 8004a3e:	bf00      	nop
 8004a40:	370c      	adds	r7, #12
 8004a42:	46bd      	mov	sp, r7
 8004a44:	bc80      	pop	{r7}
 8004a46:	4770      	bx	lr
 8004a48:	20000054 	.word	0x20000054
 8004a4c:	00000000 	.word	0x00000000

08004a50 <PendSV_Handler>:
 8004a50:	f3ef 8009 	mrs	r0, PSP
 8004a54:	f3bf 8f6f 	isb	sy
 8004a58:	4b0d      	ldr	r3, [pc, #52]	; (8004a90 <pxCurrentTCBConst>)
 8004a5a:	681a      	ldr	r2, [r3, #0]
 8004a5c:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8004a60:	6010      	str	r0, [r2, #0]
 8004a62:	e92d 4008 	stmdb	sp!, {r3, lr}
 8004a66:	f04f 0050 	mov.w	r0, #80	; 0x50
 8004a6a:	f380 8811 	msr	BASEPRI, r0
 8004a6e:	f7ff fcdf 	bl	8004430 <vTaskSwitchContext>
 8004a72:	f04f 0000 	mov.w	r0, #0
 8004a76:	f380 8811 	msr	BASEPRI, r0
 8004a7a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004a7e:	6819      	ldr	r1, [r3, #0]
 8004a80:	6808      	ldr	r0, [r1, #0]
 8004a82:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8004a86:	f380 8809 	msr	PSP, r0
 8004a8a:	f3bf 8f6f 	isb	sy
 8004a8e:	4770      	bx	lr

08004a90 <pxCurrentTCBConst>:
 8004a90:	200007e8 	.word	0x200007e8
 8004a94:	bf00      	nop
 8004a96:	bf00      	nop

08004a98 <xPortSysTickHandler>:
 8004a98:	b580      	push	{r7, lr}
 8004a9a:	b082      	sub	sp, #8
 8004a9c:	af00      	add	r7, sp, #0
 8004a9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004aa2:	f383 8811 	msr	BASEPRI, r3
 8004aa6:	f3bf 8f6f 	isb	sy
 8004aaa:	f3bf 8f4f 	dsb	sy
 8004aae:	607b      	str	r3, [r7, #4]
 8004ab0:	bf00      	nop
 8004ab2:	f7ff fbff 	bl	80042b4 <xTaskIncrementTick>
 8004ab6:	4603      	mov	r3, r0
 8004ab8:	2b00      	cmp	r3, #0
 8004aba:	d003      	beq.n	8004ac4 <xPortSysTickHandler+0x2c>
 8004abc:	4b06      	ldr	r3, [pc, #24]	; (8004ad8 <xPortSysTickHandler+0x40>)
 8004abe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004ac2:	601a      	str	r2, [r3, #0]
 8004ac4:	2300      	movs	r3, #0
 8004ac6:	603b      	str	r3, [r7, #0]
 8004ac8:	683b      	ldr	r3, [r7, #0]
 8004aca:	f383 8811 	msr	BASEPRI, r3
 8004ace:	bf00      	nop
 8004ad0:	bf00      	nop
 8004ad2:	3708      	adds	r7, #8
 8004ad4:	46bd      	mov	sp, r7
 8004ad6:	bd80      	pop	{r7, pc}
 8004ad8:	e000ed04 	.word	0xe000ed04

08004adc <vPortSetupTimerInterrupt>:
 8004adc:	b480      	push	{r7}
 8004ade:	af00      	add	r7, sp, #0
 8004ae0:	4b0a      	ldr	r3, [pc, #40]	; (8004b0c <vPortSetupTimerInterrupt+0x30>)
 8004ae2:	2200      	movs	r2, #0
 8004ae4:	601a      	str	r2, [r3, #0]
 8004ae6:	4b0a      	ldr	r3, [pc, #40]	; (8004b10 <vPortSetupTimerInterrupt+0x34>)
 8004ae8:	2200      	movs	r2, #0
 8004aea:	601a      	str	r2, [r3, #0]
 8004aec:	4b09      	ldr	r3, [pc, #36]	; (8004b14 <vPortSetupTimerInterrupt+0x38>)
 8004aee:	681b      	ldr	r3, [r3, #0]
 8004af0:	4a09      	ldr	r2, [pc, #36]	; (8004b18 <vPortSetupTimerInterrupt+0x3c>)
 8004af2:	fba2 2303 	umull	r2, r3, r2, r3
 8004af6:	099b      	lsrs	r3, r3, #6
 8004af8:	4a08      	ldr	r2, [pc, #32]	; (8004b1c <vPortSetupTimerInterrupt+0x40>)
 8004afa:	3b01      	subs	r3, #1
 8004afc:	6013      	str	r3, [r2, #0]
 8004afe:	4b03      	ldr	r3, [pc, #12]	; (8004b0c <vPortSetupTimerInterrupt+0x30>)
 8004b00:	2207      	movs	r2, #7
 8004b02:	601a      	str	r2, [r3, #0]
 8004b04:	bf00      	nop
 8004b06:	46bd      	mov	sp, r7
 8004b08:	bc80      	pop	{r7}
 8004b0a:	4770      	bx	lr
 8004b0c:	e000e010 	.word	0xe000e010
 8004b10:	e000e018 	.word	0xe000e018
 8004b14:	20000018 	.word	0x20000018
 8004b18:	10624dd3 	.word	0x10624dd3
 8004b1c:	e000e014 	.word	0xe000e014

08004b20 <pvPortMalloc>:
 8004b20:	b580      	push	{r7, lr}
 8004b22:	b08a      	sub	sp, #40	; 0x28
 8004b24:	af00      	add	r7, sp, #0
 8004b26:	6078      	str	r0, [r7, #4]
 8004b28:	2300      	movs	r3, #0
 8004b2a:	61fb      	str	r3, [r7, #28]
 8004b2c:	f7ff fb18 	bl	8004160 <vTaskSuspendAll>
 8004b30:	4b58      	ldr	r3, [pc, #352]	; (8004c94 <pvPortMalloc+0x174>)
 8004b32:	681b      	ldr	r3, [r3, #0]
 8004b34:	2b00      	cmp	r3, #0
 8004b36:	d101      	bne.n	8004b3c <pvPortMalloc+0x1c>
 8004b38:	f000 f910 	bl	8004d5c <prvHeapInit>
 8004b3c:	4b56      	ldr	r3, [pc, #344]	; (8004c98 <pvPortMalloc+0x178>)
 8004b3e:	681a      	ldr	r2, [r3, #0]
 8004b40:	687b      	ldr	r3, [r7, #4]
 8004b42:	4013      	ands	r3, r2
 8004b44:	2b00      	cmp	r3, #0
 8004b46:	f040 808e 	bne.w	8004c66 <pvPortMalloc+0x146>
 8004b4a:	687b      	ldr	r3, [r7, #4]
 8004b4c:	2b00      	cmp	r3, #0
 8004b4e:	d01d      	beq.n	8004b8c <pvPortMalloc+0x6c>
 8004b50:	2208      	movs	r2, #8
 8004b52:	687b      	ldr	r3, [r7, #4]
 8004b54:	4413      	add	r3, r2
 8004b56:	607b      	str	r3, [r7, #4]
 8004b58:	687b      	ldr	r3, [r7, #4]
 8004b5a:	f003 0307 	and.w	r3, r3, #7
 8004b5e:	2b00      	cmp	r3, #0
 8004b60:	d014      	beq.n	8004b8c <pvPortMalloc+0x6c>
 8004b62:	687b      	ldr	r3, [r7, #4]
 8004b64:	f023 0307 	bic.w	r3, r3, #7
 8004b68:	3308      	adds	r3, #8
 8004b6a:	607b      	str	r3, [r7, #4]
 8004b6c:	687b      	ldr	r3, [r7, #4]
 8004b6e:	f003 0307 	and.w	r3, r3, #7
 8004b72:	2b00      	cmp	r3, #0
 8004b74:	d00a      	beq.n	8004b8c <pvPortMalloc+0x6c>
 8004b76:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004b7a:	f383 8811 	msr	BASEPRI, r3
 8004b7e:	f3bf 8f6f 	isb	sy
 8004b82:	f3bf 8f4f 	dsb	sy
 8004b86:	617b      	str	r3, [r7, #20]
 8004b88:	bf00      	nop
 8004b8a:	e7fe      	b.n	8004b8a <pvPortMalloc+0x6a>
 8004b8c:	687b      	ldr	r3, [r7, #4]
 8004b8e:	2b00      	cmp	r3, #0
 8004b90:	d069      	beq.n	8004c66 <pvPortMalloc+0x146>
 8004b92:	4b42      	ldr	r3, [pc, #264]	; (8004c9c <pvPortMalloc+0x17c>)
 8004b94:	681b      	ldr	r3, [r3, #0]
 8004b96:	687a      	ldr	r2, [r7, #4]
 8004b98:	429a      	cmp	r2, r3
 8004b9a:	d864      	bhi.n	8004c66 <pvPortMalloc+0x146>
 8004b9c:	4b40      	ldr	r3, [pc, #256]	; (8004ca0 <pvPortMalloc+0x180>)
 8004b9e:	623b      	str	r3, [r7, #32]
 8004ba0:	4b3f      	ldr	r3, [pc, #252]	; (8004ca0 <pvPortMalloc+0x180>)
 8004ba2:	681b      	ldr	r3, [r3, #0]
 8004ba4:	627b      	str	r3, [r7, #36]	; 0x24
 8004ba6:	e004      	b.n	8004bb2 <pvPortMalloc+0x92>
 8004ba8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004baa:	623b      	str	r3, [r7, #32]
 8004bac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004bae:	681b      	ldr	r3, [r3, #0]
 8004bb0:	627b      	str	r3, [r7, #36]	; 0x24
 8004bb2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004bb4:	685b      	ldr	r3, [r3, #4]
 8004bb6:	687a      	ldr	r2, [r7, #4]
 8004bb8:	429a      	cmp	r2, r3
 8004bba:	d903      	bls.n	8004bc4 <pvPortMalloc+0xa4>
 8004bbc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004bbe:	681b      	ldr	r3, [r3, #0]
 8004bc0:	2b00      	cmp	r3, #0
 8004bc2:	d1f1      	bne.n	8004ba8 <pvPortMalloc+0x88>
 8004bc4:	4b33      	ldr	r3, [pc, #204]	; (8004c94 <pvPortMalloc+0x174>)
 8004bc6:	681b      	ldr	r3, [r3, #0]
 8004bc8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004bca:	429a      	cmp	r2, r3
 8004bcc:	d04b      	beq.n	8004c66 <pvPortMalloc+0x146>
 8004bce:	6a3b      	ldr	r3, [r7, #32]
 8004bd0:	681b      	ldr	r3, [r3, #0]
 8004bd2:	2208      	movs	r2, #8
 8004bd4:	4413      	add	r3, r2
 8004bd6:	61fb      	str	r3, [r7, #28]
 8004bd8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004bda:	681a      	ldr	r2, [r3, #0]
 8004bdc:	6a3b      	ldr	r3, [r7, #32]
 8004bde:	601a      	str	r2, [r3, #0]
 8004be0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004be2:	685a      	ldr	r2, [r3, #4]
 8004be4:	687b      	ldr	r3, [r7, #4]
 8004be6:	1ad2      	subs	r2, r2, r3
 8004be8:	2308      	movs	r3, #8
 8004bea:	005b      	lsls	r3, r3, #1
 8004bec:	429a      	cmp	r2, r3
 8004bee:	d91f      	bls.n	8004c30 <pvPortMalloc+0x110>
 8004bf0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004bf2:	687b      	ldr	r3, [r7, #4]
 8004bf4:	4413      	add	r3, r2
 8004bf6:	61bb      	str	r3, [r7, #24]
 8004bf8:	69bb      	ldr	r3, [r7, #24]
 8004bfa:	f003 0307 	and.w	r3, r3, #7
 8004bfe:	2b00      	cmp	r3, #0
 8004c00:	d00a      	beq.n	8004c18 <pvPortMalloc+0xf8>
 8004c02:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004c06:	f383 8811 	msr	BASEPRI, r3
 8004c0a:	f3bf 8f6f 	isb	sy
 8004c0e:	f3bf 8f4f 	dsb	sy
 8004c12:	613b      	str	r3, [r7, #16]
 8004c14:	bf00      	nop
 8004c16:	e7fe      	b.n	8004c16 <pvPortMalloc+0xf6>
 8004c18:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004c1a:	685a      	ldr	r2, [r3, #4]
 8004c1c:	687b      	ldr	r3, [r7, #4]
 8004c1e:	1ad2      	subs	r2, r2, r3
 8004c20:	69bb      	ldr	r3, [r7, #24]
 8004c22:	605a      	str	r2, [r3, #4]
 8004c24:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004c26:	687a      	ldr	r2, [r7, #4]
 8004c28:	605a      	str	r2, [r3, #4]
 8004c2a:	69b8      	ldr	r0, [r7, #24]
 8004c2c:	f000 f8f8 	bl	8004e20 <prvInsertBlockIntoFreeList>
 8004c30:	4b1a      	ldr	r3, [pc, #104]	; (8004c9c <pvPortMalloc+0x17c>)
 8004c32:	681a      	ldr	r2, [r3, #0]
 8004c34:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004c36:	685b      	ldr	r3, [r3, #4]
 8004c38:	1ad3      	subs	r3, r2, r3
 8004c3a:	4a18      	ldr	r2, [pc, #96]	; (8004c9c <pvPortMalloc+0x17c>)
 8004c3c:	6013      	str	r3, [r2, #0]
 8004c3e:	4b17      	ldr	r3, [pc, #92]	; (8004c9c <pvPortMalloc+0x17c>)
 8004c40:	681a      	ldr	r2, [r3, #0]
 8004c42:	4b18      	ldr	r3, [pc, #96]	; (8004ca4 <pvPortMalloc+0x184>)
 8004c44:	681b      	ldr	r3, [r3, #0]
 8004c46:	429a      	cmp	r2, r3
 8004c48:	d203      	bcs.n	8004c52 <pvPortMalloc+0x132>
 8004c4a:	4b14      	ldr	r3, [pc, #80]	; (8004c9c <pvPortMalloc+0x17c>)
 8004c4c:	681b      	ldr	r3, [r3, #0]
 8004c4e:	4a15      	ldr	r2, [pc, #84]	; (8004ca4 <pvPortMalloc+0x184>)
 8004c50:	6013      	str	r3, [r2, #0]
 8004c52:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004c54:	685a      	ldr	r2, [r3, #4]
 8004c56:	4b10      	ldr	r3, [pc, #64]	; (8004c98 <pvPortMalloc+0x178>)
 8004c58:	681b      	ldr	r3, [r3, #0]
 8004c5a:	431a      	orrs	r2, r3
 8004c5c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004c5e:	605a      	str	r2, [r3, #4]
 8004c60:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004c62:	2200      	movs	r2, #0
 8004c64:	601a      	str	r2, [r3, #0]
 8004c66:	f7ff fa89 	bl	800417c <xTaskResumeAll>
 8004c6a:	69fb      	ldr	r3, [r7, #28]
 8004c6c:	f003 0307 	and.w	r3, r3, #7
 8004c70:	2b00      	cmp	r3, #0
 8004c72:	d00a      	beq.n	8004c8a <pvPortMalloc+0x16a>
 8004c74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004c78:	f383 8811 	msr	BASEPRI, r3
 8004c7c:	f3bf 8f6f 	isb	sy
 8004c80:	f3bf 8f4f 	dsb	sy
 8004c84:	60fb      	str	r3, [r7, #12]
 8004c86:	bf00      	nop
 8004c88:	e7fe      	b.n	8004c88 <pvPortMalloc+0x168>
 8004c8a:	69fb      	ldr	r3, [r7, #28]
 8004c8c:	4618      	mov	r0, r3
 8004c8e:	3728      	adds	r7, #40	; 0x28
 8004c90:	46bd      	mov	sp, r7
 8004c92:	bd80      	pop	{r7, pc}
 8004c94:	20001524 	.word	0x20001524
 8004c98:	20001530 	.word	0x20001530
 8004c9c:	20001528 	.word	0x20001528
 8004ca0:	2000151c 	.word	0x2000151c
 8004ca4:	2000152c 	.word	0x2000152c

08004ca8 <vPortFree>:
 8004ca8:	b580      	push	{r7, lr}
 8004caa:	b086      	sub	sp, #24
 8004cac:	af00      	add	r7, sp, #0
 8004cae:	6078      	str	r0, [r7, #4]
 8004cb0:	687b      	ldr	r3, [r7, #4]
 8004cb2:	617b      	str	r3, [r7, #20]
 8004cb4:	687b      	ldr	r3, [r7, #4]
 8004cb6:	2b00      	cmp	r3, #0
 8004cb8:	d048      	beq.n	8004d4c <vPortFree+0xa4>
 8004cba:	2308      	movs	r3, #8
 8004cbc:	425b      	negs	r3, r3
 8004cbe:	697a      	ldr	r2, [r7, #20]
 8004cc0:	4413      	add	r3, r2
 8004cc2:	617b      	str	r3, [r7, #20]
 8004cc4:	697b      	ldr	r3, [r7, #20]
 8004cc6:	613b      	str	r3, [r7, #16]
 8004cc8:	693b      	ldr	r3, [r7, #16]
 8004cca:	685a      	ldr	r2, [r3, #4]
 8004ccc:	4b21      	ldr	r3, [pc, #132]	; (8004d54 <vPortFree+0xac>)
 8004cce:	681b      	ldr	r3, [r3, #0]
 8004cd0:	4013      	ands	r3, r2
 8004cd2:	2b00      	cmp	r3, #0
 8004cd4:	d10a      	bne.n	8004cec <vPortFree+0x44>
 8004cd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004cda:	f383 8811 	msr	BASEPRI, r3
 8004cde:	f3bf 8f6f 	isb	sy
 8004ce2:	f3bf 8f4f 	dsb	sy
 8004ce6:	60fb      	str	r3, [r7, #12]
 8004ce8:	bf00      	nop
 8004cea:	e7fe      	b.n	8004cea <vPortFree+0x42>
 8004cec:	693b      	ldr	r3, [r7, #16]
 8004cee:	681b      	ldr	r3, [r3, #0]
 8004cf0:	2b00      	cmp	r3, #0
 8004cf2:	d00a      	beq.n	8004d0a <vPortFree+0x62>
 8004cf4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004cf8:	f383 8811 	msr	BASEPRI, r3
 8004cfc:	f3bf 8f6f 	isb	sy
 8004d00:	f3bf 8f4f 	dsb	sy
 8004d04:	60bb      	str	r3, [r7, #8]
 8004d06:	bf00      	nop
 8004d08:	e7fe      	b.n	8004d08 <vPortFree+0x60>
 8004d0a:	693b      	ldr	r3, [r7, #16]
 8004d0c:	685a      	ldr	r2, [r3, #4]
 8004d0e:	4b11      	ldr	r3, [pc, #68]	; (8004d54 <vPortFree+0xac>)
 8004d10:	681b      	ldr	r3, [r3, #0]
 8004d12:	4013      	ands	r3, r2
 8004d14:	2b00      	cmp	r3, #0
 8004d16:	d019      	beq.n	8004d4c <vPortFree+0xa4>
 8004d18:	693b      	ldr	r3, [r7, #16]
 8004d1a:	681b      	ldr	r3, [r3, #0]
 8004d1c:	2b00      	cmp	r3, #0
 8004d1e:	d115      	bne.n	8004d4c <vPortFree+0xa4>
 8004d20:	693b      	ldr	r3, [r7, #16]
 8004d22:	685a      	ldr	r2, [r3, #4]
 8004d24:	4b0b      	ldr	r3, [pc, #44]	; (8004d54 <vPortFree+0xac>)
 8004d26:	681b      	ldr	r3, [r3, #0]
 8004d28:	43db      	mvns	r3, r3
 8004d2a:	401a      	ands	r2, r3
 8004d2c:	693b      	ldr	r3, [r7, #16]
 8004d2e:	605a      	str	r2, [r3, #4]
 8004d30:	f7ff fa16 	bl	8004160 <vTaskSuspendAll>
 8004d34:	693b      	ldr	r3, [r7, #16]
 8004d36:	685a      	ldr	r2, [r3, #4]
 8004d38:	4b07      	ldr	r3, [pc, #28]	; (8004d58 <vPortFree+0xb0>)
 8004d3a:	681b      	ldr	r3, [r3, #0]
 8004d3c:	4413      	add	r3, r2
 8004d3e:	4a06      	ldr	r2, [pc, #24]	; (8004d58 <vPortFree+0xb0>)
 8004d40:	6013      	str	r3, [r2, #0]
 8004d42:	6938      	ldr	r0, [r7, #16]
 8004d44:	f000 f86c 	bl	8004e20 <prvInsertBlockIntoFreeList>
 8004d48:	f7ff fa18 	bl	800417c <xTaskResumeAll>
 8004d4c:	bf00      	nop
 8004d4e:	3718      	adds	r7, #24
 8004d50:	46bd      	mov	sp, r7
 8004d52:	bd80      	pop	{r7, pc}
 8004d54:	20001530 	.word	0x20001530
 8004d58:	20001528 	.word	0x20001528

08004d5c <prvHeapInit>:
 8004d5c:	b480      	push	{r7}
 8004d5e:	b085      	sub	sp, #20
 8004d60:	af00      	add	r7, sp, #0
 8004d62:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8004d66:	60bb      	str	r3, [r7, #8]
 8004d68:	4b27      	ldr	r3, [pc, #156]	; (8004e08 <prvHeapInit+0xac>)
 8004d6a:	60fb      	str	r3, [r7, #12]
 8004d6c:	68fb      	ldr	r3, [r7, #12]
 8004d6e:	f003 0307 	and.w	r3, r3, #7
 8004d72:	2b00      	cmp	r3, #0
 8004d74:	d00c      	beq.n	8004d90 <prvHeapInit+0x34>
 8004d76:	68fb      	ldr	r3, [r7, #12]
 8004d78:	3307      	adds	r3, #7
 8004d7a:	60fb      	str	r3, [r7, #12]
 8004d7c:	68fb      	ldr	r3, [r7, #12]
 8004d7e:	f023 0307 	bic.w	r3, r3, #7
 8004d82:	60fb      	str	r3, [r7, #12]
 8004d84:	68ba      	ldr	r2, [r7, #8]
 8004d86:	68fb      	ldr	r3, [r7, #12]
 8004d88:	1ad3      	subs	r3, r2, r3
 8004d8a:	4a1f      	ldr	r2, [pc, #124]	; (8004e08 <prvHeapInit+0xac>)
 8004d8c:	4413      	add	r3, r2
 8004d8e:	60bb      	str	r3, [r7, #8]
 8004d90:	68fb      	ldr	r3, [r7, #12]
 8004d92:	607b      	str	r3, [r7, #4]
 8004d94:	4a1d      	ldr	r2, [pc, #116]	; (8004e0c <prvHeapInit+0xb0>)
 8004d96:	687b      	ldr	r3, [r7, #4]
 8004d98:	6013      	str	r3, [r2, #0]
 8004d9a:	4b1c      	ldr	r3, [pc, #112]	; (8004e0c <prvHeapInit+0xb0>)
 8004d9c:	2200      	movs	r2, #0
 8004d9e:	605a      	str	r2, [r3, #4]
 8004da0:	687b      	ldr	r3, [r7, #4]
 8004da2:	68ba      	ldr	r2, [r7, #8]
 8004da4:	4413      	add	r3, r2
 8004da6:	60fb      	str	r3, [r7, #12]
 8004da8:	2208      	movs	r2, #8
 8004daa:	68fb      	ldr	r3, [r7, #12]
 8004dac:	1a9b      	subs	r3, r3, r2
 8004dae:	60fb      	str	r3, [r7, #12]
 8004db0:	68fb      	ldr	r3, [r7, #12]
 8004db2:	f023 0307 	bic.w	r3, r3, #7
 8004db6:	60fb      	str	r3, [r7, #12]
 8004db8:	68fb      	ldr	r3, [r7, #12]
 8004dba:	4a15      	ldr	r2, [pc, #84]	; (8004e10 <prvHeapInit+0xb4>)
 8004dbc:	6013      	str	r3, [r2, #0]
 8004dbe:	4b14      	ldr	r3, [pc, #80]	; (8004e10 <prvHeapInit+0xb4>)
 8004dc0:	681b      	ldr	r3, [r3, #0]
 8004dc2:	2200      	movs	r2, #0
 8004dc4:	605a      	str	r2, [r3, #4]
 8004dc6:	4b12      	ldr	r3, [pc, #72]	; (8004e10 <prvHeapInit+0xb4>)
 8004dc8:	681b      	ldr	r3, [r3, #0]
 8004dca:	2200      	movs	r2, #0
 8004dcc:	601a      	str	r2, [r3, #0]
 8004dce:	687b      	ldr	r3, [r7, #4]
 8004dd0:	603b      	str	r3, [r7, #0]
 8004dd2:	683b      	ldr	r3, [r7, #0]
 8004dd4:	68fa      	ldr	r2, [r7, #12]
 8004dd6:	1ad2      	subs	r2, r2, r3
 8004dd8:	683b      	ldr	r3, [r7, #0]
 8004dda:	605a      	str	r2, [r3, #4]
 8004ddc:	4b0c      	ldr	r3, [pc, #48]	; (8004e10 <prvHeapInit+0xb4>)
 8004dde:	681a      	ldr	r2, [r3, #0]
 8004de0:	683b      	ldr	r3, [r7, #0]
 8004de2:	601a      	str	r2, [r3, #0]
 8004de4:	683b      	ldr	r3, [r7, #0]
 8004de6:	685b      	ldr	r3, [r3, #4]
 8004de8:	4a0a      	ldr	r2, [pc, #40]	; (8004e14 <prvHeapInit+0xb8>)
 8004dea:	6013      	str	r3, [r2, #0]
 8004dec:	683b      	ldr	r3, [r7, #0]
 8004dee:	685b      	ldr	r3, [r3, #4]
 8004df0:	4a09      	ldr	r2, [pc, #36]	; (8004e18 <prvHeapInit+0xbc>)
 8004df2:	6013      	str	r3, [r2, #0]
 8004df4:	4b09      	ldr	r3, [pc, #36]	; (8004e1c <prvHeapInit+0xc0>)
 8004df6:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8004dfa:	601a      	str	r2, [r3, #0]
 8004dfc:	bf00      	nop
 8004dfe:	3714      	adds	r7, #20
 8004e00:	46bd      	mov	sp, r7
 8004e02:	bc80      	pop	{r7}
 8004e04:	4770      	bx	lr
 8004e06:	bf00      	nop
 8004e08:	2000091c 	.word	0x2000091c
 8004e0c:	2000151c 	.word	0x2000151c
 8004e10:	20001524 	.word	0x20001524
 8004e14:	2000152c 	.word	0x2000152c
 8004e18:	20001528 	.word	0x20001528
 8004e1c:	20001530 	.word	0x20001530

08004e20 <prvInsertBlockIntoFreeList>:
 8004e20:	b480      	push	{r7}
 8004e22:	b085      	sub	sp, #20
 8004e24:	af00      	add	r7, sp, #0
 8004e26:	6078      	str	r0, [r7, #4]
 8004e28:	4b27      	ldr	r3, [pc, #156]	; (8004ec8 <prvInsertBlockIntoFreeList+0xa8>)
 8004e2a:	60fb      	str	r3, [r7, #12]
 8004e2c:	e002      	b.n	8004e34 <prvInsertBlockIntoFreeList+0x14>
 8004e2e:	68fb      	ldr	r3, [r7, #12]
 8004e30:	681b      	ldr	r3, [r3, #0]
 8004e32:	60fb      	str	r3, [r7, #12]
 8004e34:	68fb      	ldr	r3, [r7, #12]
 8004e36:	681b      	ldr	r3, [r3, #0]
 8004e38:	687a      	ldr	r2, [r7, #4]
 8004e3a:	429a      	cmp	r2, r3
 8004e3c:	d8f7      	bhi.n	8004e2e <prvInsertBlockIntoFreeList+0xe>
 8004e3e:	68fb      	ldr	r3, [r7, #12]
 8004e40:	60bb      	str	r3, [r7, #8]
 8004e42:	68fb      	ldr	r3, [r7, #12]
 8004e44:	685b      	ldr	r3, [r3, #4]
 8004e46:	68ba      	ldr	r2, [r7, #8]
 8004e48:	4413      	add	r3, r2
 8004e4a:	687a      	ldr	r2, [r7, #4]
 8004e4c:	429a      	cmp	r2, r3
 8004e4e:	d108      	bne.n	8004e62 <prvInsertBlockIntoFreeList+0x42>
 8004e50:	68fb      	ldr	r3, [r7, #12]
 8004e52:	685a      	ldr	r2, [r3, #4]
 8004e54:	687b      	ldr	r3, [r7, #4]
 8004e56:	685b      	ldr	r3, [r3, #4]
 8004e58:	441a      	add	r2, r3
 8004e5a:	68fb      	ldr	r3, [r7, #12]
 8004e5c:	605a      	str	r2, [r3, #4]
 8004e5e:	68fb      	ldr	r3, [r7, #12]
 8004e60:	607b      	str	r3, [r7, #4]
 8004e62:	687b      	ldr	r3, [r7, #4]
 8004e64:	60bb      	str	r3, [r7, #8]
 8004e66:	687b      	ldr	r3, [r7, #4]
 8004e68:	685b      	ldr	r3, [r3, #4]
 8004e6a:	68ba      	ldr	r2, [r7, #8]
 8004e6c:	441a      	add	r2, r3
 8004e6e:	68fb      	ldr	r3, [r7, #12]
 8004e70:	681b      	ldr	r3, [r3, #0]
 8004e72:	429a      	cmp	r2, r3
 8004e74:	d118      	bne.n	8004ea8 <prvInsertBlockIntoFreeList+0x88>
 8004e76:	68fb      	ldr	r3, [r7, #12]
 8004e78:	681a      	ldr	r2, [r3, #0]
 8004e7a:	4b14      	ldr	r3, [pc, #80]	; (8004ecc <prvInsertBlockIntoFreeList+0xac>)
 8004e7c:	681b      	ldr	r3, [r3, #0]
 8004e7e:	429a      	cmp	r2, r3
 8004e80:	d00d      	beq.n	8004e9e <prvInsertBlockIntoFreeList+0x7e>
 8004e82:	687b      	ldr	r3, [r7, #4]
 8004e84:	685a      	ldr	r2, [r3, #4]
 8004e86:	68fb      	ldr	r3, [r7, #12]
 8004e88:	681b      	ldr	r3, [r3, #0]
 8004e8a:	685b      	ldr	r3, [r3, #4]
 8004e8c:	441a      	add	r2, r3
 8004e8e:	687b      	ldr	r3, [r7, #4]
 8004e90:	605a      	str	r2, [r3, #4]
 8004e92:	68fb      	ldr	r3, [r7, #12]
 8004e94:	681b      	ldr	r3, [r3, #0]
 8004e96:	681a      	ldr	r2, [r3, #0]
 8004e98:	687b      	ldr	r3, [r7, #4]
 8004e9a:	601a      	str	r2, [r3, #0]
 8004e9c:	e008      	b.n	8004eb0 <prvInsertBlockIntoFreeList+0x90>
 8004e9e:	4b0b      	ldr	r3, [pc, #44]	; (8004ecc <prvInsertBlockIntoFreeList+0xac>)
 8004ea0:	681a      	ldr	r2, [r3, #0]
 8004ea2:	687b      	ldr	r3, [r7, #4]
 8004ea4:	601a      	str	r2, [r3, #0]
 8004ea6:	e003      	b.n	8004eb0 <prvInsertBlockIntoFreeList+0x90>
 8004ea8:	68fb      	ldr	r3, [r7, #12]
 8004eaa:	681a      	ldr	r2, [r3, #0]
 8004eac:	687b      	ldr	r3, [r7, #4]
 8004eae:	601a      	str	r2, [r3, #0]
 8004eb0:	68fa      	ldr	r2, [r7, #12]
 8004eb2:	687b      	ldr	r3, [r7, #4]
 8004eb4:	429a      	cmp	r2, r3
 8004eb6:	d002      	beq.n	8004ebe <prvInsertBlockIntoFreeList+0x9e>
 8004eb8:	68fb      	ldr	r3, [r7, #12]
 8004eba:	687a      	ldr	r2, [r7, #4]
 8004ebc:	601a      	str	r2, [r3, #0]
 8004ebe:	bf00      	nop
 8004ec0:	3714      	adds	r7, #20
 8004ec2:	46bd      	mov	sp, r7
 8004ec4:	bc80      	pop	{r7}
 8004ec6:	4770      	bx	lr
 8004ec8:	2000151c 	.word	0x2000151c
 8004ecc:	20001524 	.word	0x20001524

08004ed0 <memset>:
 8004ed0:	4603      	mov	r3, r0
 8004ed2:	4402      	add	r2, r0
 8004ed4:	4293      	cmp	r3, r2
 8004ed6:	d100      	bne.n	8004eda <memset+0xa>
 8004ed8:	4770      	bx	lr
 8004eda:	f803 1b01 	strb.w	r1, [r3], #1
 8004ede:	e7f9      	b.n	8004ed4 <memset+0x4>

08004ee0 <_reclaim_reent>:
 8004ee0:	4b29      	ldr	r3, [pc, #164]	; (8004f88 <_reclaim_reent+0xa8>)
 8004ee2:	b570      	push	{r4, r5, r6, lr}
 8004ee4:	681b      	ldr	r3, [r3, #0]
 8004ee6:	4604      	mov	r4, r0
 8004ee8:	4283      	cmp	r3, r0
 8004eea:	d04b      	beq.n	8004f84 <_reclaim_reent+0xa4>
 8004eec:	69c3      	ldr	r3, [r0, #28]
 8004eee:	b143      	cbz	r3, 8004f02 <_reclaim_reent+0x22>
 8004ef0:	68db      	ldr	r3, [r3, #12]
 8004ef2:	2b00      	cmp	r3, #0
 8004ef4:	d144      	bne.n	8004f80 <_reclaim_reent+0xa0>
 8004ef6:	69e3      	ldr	r3, [r4, #28]
 8004ef8:	6819      	ldr	r1, [r3, #0]
 8004efa:	b111      	cbz	r1, 8004f02 <_reclaim_reent+0x22>
 8004efc:	4620      	mov	r0, r4
 8004efe:	f000 f86b 	bl	8004fd8 <_free_r>
 8004f02:	6961      	ldr	r1, [r4, #20]
 8004f04:	b111      	cbz	r1, 8004f0c <_reclaim_reent+0x2c>
 8004f06:	4620      	mov	r0, r4
 8004f08:	f000 f866 	bl	8004fd8 <_free_r>
 8004f0c:	69e1      	ldr	r1, [r4, #28]
 8004f0e:	b111      	cbz	r1, 8004f16 <_reclaim_reent+0x36>
 8004f10:	4620      	mov	r0, r4
 8004f12:	f000 f861 	bl	8004fd8 <_free_r>
 8004f16:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8004f18:	b111      	cbz	r1, 8004f20 <_reclaim_reent+0x40>
 8004f1a:	4620      	mov	r0, r4
 8004f1c:	f000 f85c 	bl	8004fd8 <_free_r>
 8004f20:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004f22:	b111      	cbz	r1, 8004f2a <_reclaim_reent+0x4a>
 8004f24:	4620      	mov	r0, r4
 8004f26:	f000 f857 	bl	8004fd8 <_free_r>
 8004f2a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8004f2c:	b111      	cbz	r1, 8004f34 <_reclaim_reent+0x54>
 8004f2e:	4620      	mov	r0, r4
 8004f30:	f000 f852 	bl	8004fd8 <_free_r>
 8004f34:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8004f36:	b111      	cbz	r1, 8004f3e <_reclaim_reent+0x5e>
 8004f38:	4620      	mov	r0, r4
 8004f3a:	f000 f84d 	bl	8004fd8 <_free_r>
 8004f3e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8004f40:	b111      	cbz	r1, 8004f48 <_reclaim_reent+0x68>
 8004f42:	4620      	mov	r0, r4
 8004f44:	f000 f848 	bl	8004fd8 <_free_r>
 8004f48:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8004f4a:	b111      	cbz	r1, 8004f52 <_reclaim_reent+0x72>
 8004f4c:	4620      	mov	r0, r4
 8004f4e:	f000 f843 	bl	8004fd8 <_free_r>
 8004f52:	6a23      	ldr	r3, [r4, #32]
 8004f54:	b1b3      	cbz	r3, 8004f84 <_reclaim_reent+0xa4>
 8004f56:	4620      	mov	r0, r4
 8004f58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004f5c:	4718      	bx	r3
 8004f5e:	5949      	ldr	r1, [r1, r5]
 8004f60:	b941      	cbnz	r1, 8004f74 <_reclaim_reent+0x94>
 8004f62:	3504      	adds	r5, #4
 8004f64:	69e3      	ldr	r3, [r4, #28]
 8004f66:	2d80      	cmp	r5, #128	; 0x80
 8004f68:	68d9      	ldr	r1, [r3, #12]
 8004f6a:	d1f8      	bne.n	8004f5e <_reclaim_reent+0x7e>
 8004f6c:	4620      	mov	r0, r4
 8004f6e:	f000 f833 	bl	8004fd8 <_free_r>
 8004f72:	e7c0      	b.n	8004ef6 <_reclaim_reent+0x16>
 8004f74:	680e      	ldr	r6, [r1, #0]
 8004f76:	4620      	mov	r0, r4
 8004f78:	f000 f82e 	bl	8004fd8 <_free_r>
 8004f7c:	4631      	mov	r1, r6
 8004f7e:	e7ef      	b.n	8004f60 <_reclaim_reent+0x80>
 8004f80:	2500      	movs	r5, #0
 8004f82:	e7ef      	b.n	8004f64 <_reclaim_reent+0x84>
 8004f84:	bd70      	pop	{r4, r5, r6, pc}
 8004f86:	bf00      	nop
 8004f88:	200000a4 	.word	0x200000a4

08004f8c <__libc_init_array>:
 8004f8c:	b570      	push	{r4, r5, r6, lr}
 8004f8e:	2600      	movs	r6, #0
 8004f90:	4d0c      	ldr	r5, [pc, #48]	; (8004fc4 <__libc_init_array+0x38>)
 8004f92:	4c0d      	ldr	r4, [pc, #52]	; (8004fc8 <__libc_init_array+0x3c>)
 8004f94:	1b64      	subs	r4, r4, r5
 8004f96:	10a4      	asrs	r4, r4, #2
 8004f98:	42a6      	cmp	r6, r4
 8004f9a:	d109      	bne.n	8004fb0 <__libc_init_array+0x24>
 8004f9c:	f000 f870 	bl	8005080 <_init>
 8004fa0:	2600      	movs	r6, #0
 8004fa2:	4d0a      	ldr	r5, [pc, #40]	; (8004fcc <__libc_init_array+0x40>)
 8004fa4:	4c0a      	ldr	r4, [pc, #40]	; (8004fd0 <__libc_init_array+0x44>)
 8004fa6:	1b64      	subs	r4, r4, r5
 8004fa8:	10a4      	asrs	r4, r4, #2
 8004faa:	42a6      	cmp	r6, r4
 8004fac:	d105      	bne.n	8004fba <__libc_init_array+0x2e>
 8004fae:	bd70      	pop	{r4, r5, r6, pc}
 8004fb0:	f855 3b04 	ldr.w	r3, [r5], #4
 8004fb4:	4798      	blx	r3
 8004fb6:	3601      	adds	r6, #1
 8004fb8:	e7ee      	b.n	8004f98 <__libc_init_array+0xc>
 8004fba:	f855 3b04 	ldr.w	r3, [r5], #4
 8004fbe:	4798      	blx	r3
 8004fc0:	3601      	adds	r6, #1
 8004fc2:	e7f2      	b.n	8004faa <__libc_init_array+0x1e>
 8004fc4:	08005368 	.word	0x08005368
 8004fc8:	08005368 	.word	0x08005368
 8004fcc:	08005368 	.word	0x08005368
 8004fd0:	0800536c 	.word	0x0800536c

08004fd4 <__retarget_lock_acquire_recursive>:
 8004fd4:	4770      	bx	lr

08004fd6 <__retarget_lock_release_recursive>:
 8004fd6:	4770      	bx	lr

08004fd8 <_free_r>:
 8004fd8:	b538      	push	{r3, r4, r5, lr}
 8004fda:	4605      	mov	r5, r0
 8004fdc:	2900      	cmp	r1, #0
 8004fde:	d040      	beq.n	8005062 <_free_r+0x8a>
 8004fe0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004fe4:	1f0c      	subs	r4, r1, #4
 8004fe6:	2b00      	cmp	r3, #0
 8004fe8:	bfb8      	it	lt
 8004fea:	18e4      	addlt	r4, r4, r3
 8004fec:	f000 f83c 	bl	8005068 <__malloc_lock>
 8004ff0:	4a1c      	ldr	r2, [pc, #112]	; (8005064 <_free_r+0x8c>)
 8004ff2:	6813      	ldr	r3, [r2, #0]
 8004ff4:	b933      	cbnz	r3, 8005004 <_free_r+0x2c>
 8004ff6:	6063      	str	r3, [r4, #4]
 8004ff8:	6014      	str	r4, [r2, #0]
 8004ffa:	4628      	mov	r0, r5
 8004ffc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005000:	f000 b838 	b.w	8005074 <__malloc_unlock>
 8005004:	42a3      	cmp	r3, r4
 8005006:	d908      	bls.n	800501a <_free_r+0x42>
 8005008:	6820      	ldr	r0, [r4, #0]
 800500a:	1821      	adds	r1, r4, r0
 800500c:	428b      	cmp	r3, r1
 800500e:	bf01      	itttt	eq
 8005010:	6819      	ldreq	r1, [r3, #0]
 8005012:	685b      	ldreq	r3, [r3, #4]
 8005014:	1809      	addeq	r1, r1, r0
 8005016:	6021      	streq	r1, [r4, #0]
 8005018:	e7ed      	b.n	8004ff6 <_free_r+0x1e>
 800501a:	461a      	mov	r2, r3
 800501c:	685b      	ldr	r3, [r3, #4]
 800501e:	b10b      	cbz	r3, 8005024 <_free_r+0x4c>
 8005020:	42a3      	cmp	r3, r4
 8005022:	d9fa      	bls.n	800501a <_free_r+0x42>
 8005024:	6811      	ldr	r1, [r2, #0]
 8005026:	1850      	adds	r0, r2, r1
 8005028:	42a0      	cmp	r0, r4
 800502a:	d10b      	bne.n	8005044 <_free_r+0x6c>
 800502c:	6820      	ldr	r0, [r4, #0]
 800502e:	4401      	add	r1, r0
 8005030:	1850      	adds	r0, r2, r1
 8005032:	4283      	cmp	r3, r0
 8005034:	6011      	str	r1, [r2, #0]
 8005036:	d1e0      	bne.n	8004ffa <_free_r+0x22>
 8005038:	6818      	ldr	r0, [r3, #0]
 800503a:	685b      	ldr	r3, [r3, #4]
 800503c:	4408      	add	r0, r1
 800503e:	6010      	str	r0, [r2, #0]
 8005040:	6053      	str	r3, [r2, #4]
 8005042:	e7da      	b.n	8004ffa <_free_r+0x22>
 8005044:	d902      	bls.n	800504c <_free_r+0x74>
 8005046:	230c      	movs	r3, #12
 8005048:	602b      	str	r3, [r5, #0]
 800504a:	e7d6      	b.n	8004ffa <_free_r+0x22>
 800504c:	6820      	ldr	r0, [r4, #0]
 800504e:	1821      	adds	r1, r4, r0
 8005050:	428b      	cmp	r3, r1
 8005052:	bf01      	itttt	eq
 8005054:	6819      	ldreq	r1, [r3, #0]
 8005056:	685b      	ldreq	r3, [r3, #4]
 8005058:	1809      	addeq	r1, r1, r0
 800505a:	6021      	streq	r1, [r4, #0]
 800505c:	6063      	str	r3, [r4, #4]
 800505e:	6054      	str	r4, [r2, #4]
 8005060:	e7cb      	b.n	8004ffa <_free_r+0x22>
 8005062:	bd38      	pop	{r3, r4, r5, pc}
 8005064:	20001670 	.word	0x20001670

08005068 <__malloc_lock>:
 8005068:	4801      	ldr	r0, [pc, #4]	; (8005070 <__malloc_lock+0x8>)
 800506a:	f7ff bfb3 	b.w	8004fd4 <__retarget_lock_acquire_recursive>
 800506e:	bf00      	nop
 8005070:	2000166c 	.word	0x2000166c

08005074 <__malloc_unlock>:
 8005074:	4801      	ldr	r0, [pc, #4]	; (800507c <__malloc_unlock+0x8>)
 8005076:	f7ff bfae 	b.w	8004fd6 <__retarget_lock_release_recursive>
 800507a:	bf00      	nop
 800507c:	2000166c 	.word	0x2000166c

08005080 <_init>:
 8005080:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005082:	bf00      	nop
 8005084:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005086:	bc08      	pop	{r3}
 8005088:	469e      	mov	lr, r3
 800508a:	4770      	bx	lr

0800508c <_fini>:
 800508c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800508e:	bf00      	nop
 8005090:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005092:	bc08      	pop	{r3}
 8005094:	469e      	mov	lr, r3
 8005096:	4770      	bx	lr
